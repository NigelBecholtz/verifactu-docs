import { z } from "zod/v4";
/**
 * Capabilities a client may support. Known capabilities are defined here,
 * in this schema, but this is not a closed set: any client can define its own,
 * additional capabilities.
 */
export declare const ClientCapabilitiesSchema: z.ZodObject<{
    experimental: z.ZodOptional<z.ZodObject<{}, z.core.$loose>>;
    sampling: z.ZodOptional<z.ZodObject<{}, z.core.$loose>>;
    roots: z.ZodOptional<z.ZodObject<{
        listChanged: z.ZodOptional<z.ZodBoolean>;
    }, z.core.$loose>>;
}, z.core.$loose>;
/**
 * Capabilities that a server may support. Known capabilities are defined here,
 * in this schema, but this is not a closed set: any server can define its own,
 * additional capabilities.
 */
export declare const ServerCapabilitiesSchema: z.ZodObject<{
    experimental: z.ZodOptional<z.ZodObject<{}, z.core.$loose>>;
    logging: z.ZodOptional<z.ZodObject<{}, z.core.$loose>>;
    completions: z.ZodOptional<z.ZodObject<{}, z.core.$loose>>;
    prompts: z.ZodOptional<z.ZodObject<{
        listChanged: z.ZodOptional<z.ZodBoolean>;
    }, z.core.$loose>>;
    resources: z.ZodOptional<z.ZodObject<{
        subscribe: z.ZodOptional<z.ZodBoolean>;
        listChanged: z.ZodOptional<z.ZodBoolean>;
    }, z.core.$loose>>;
    tools: z.ZodOptional<z.ZodObject<{
        listChanged: z.ZodOptional<z.ZodBoolean>;
    }, z.core.$loose>>;
}, z.core.$loose>;
