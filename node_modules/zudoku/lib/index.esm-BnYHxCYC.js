import y, { Component as k } from "react";
import { g as j } from "./invariant-Bm-FVUQE.js";
var S, U;
function ne() {
  if (U) return S;
  U = 1;
  var e = typeof Element < "u", r = typeof Map == "function", t = typeof Set == "function", n = typeof ArrayBuffer == "function" && !!ArrayBuffer.isView;
  function i(s, o) {
    if (s === o) return !0;
    if (s && o && typeof s == "object" && typeof o == "object") {
      if (s.constructor !== o.constructor) return !1;
      var l, a, c;
      if (Array.isArray(s)) {
        if (l = s.length, l != o.length) return !1;
        for (a = l; a-- !== 0; )
          if (!i(s[a], o[a])) return !1;
        return !0;
      }
      var u;
      if (r && s instanceof Map && o instanceof Map) {
        if (s.size !== o.size) return !1;
        for (u = s.entries(); !(a = u.next()).done; )
          if (!o.has(a.value[0])) return !1;
        for (u = s.entries(); !(a = u.next()).done; )
          if (!i(a.value[1], o.get(a.value[0]))) return !1;
        return !0;
      }
      if (t && s instanceof Set && o instanceof Set) {
        if (s.size !== o.size) return !1;
        for (u = s.entries(); !(a = u.next()).done; )
          if (!o.has(a.value[0])) return !1;
        return !0;
      }
      if (n && ArrayBuffer.isView(s) && ArrayBuffer.isView(o)) {
        if (l = s.length, l != o.length) return !1;
        for (a = l; a-- !== 0; )
          if (s[a] !== o[a]) return !1;
        return !0;
      }
      if (s.constructor === RegExp) return s.source === o.source && s.flags === o.flags;
      if (s.valueOf !== Object.prototype.valueOf && typeof s.valueOf == "function" && typeof o.valueOf == "function") return s.valueOf() === o.valueOf();
      if (s.toString !== Object.prototype.toString && typeof s.toString == "function" && typeof o.toString == "function") return s.toString() === o.toString();
      if (c = Object.keys(s), l = c.length, l !== Object.keys(o).length) return !1;
      for (a = l; a-- !== 0; )
        if (!Object.prototype.hasOwnProperty.call(o, c[a])) return !1;
      if (e && s instanceof Element) return !1;
      for (a = l; a-- !== 0; )
        if (!((c[a] === "_owner" || c[a] === "__v" || c[a] === "__o") && s.$$typeof) && !i(s[c[a]], o[c[a]]))
          return !1;
      return !0;
    }
    return s !== s && o !== o;
  }
  return S = function(o, l) {
    try {
      return i(o, l);
    } catch (a) {
      if ((a.message || "").match(/stack|recursion/i))
        return console.warn("react-fast-compare cannot handle circular refs"), !1;
      throw a;
    }
  }, S;
}
var se = ne();
const ae = /* @__PURE__ */ j(se);
var x, K;
function ie() {
  if (K) return x;
  K = 1;
  var e = function(r, t, n, i, s, o, l, a) {
    if (process.env.NODE_ENV !== "production" && t === void 0)
      throw new Error("invariant requires an error message argument");
    if (!r) {
      var c;
      if (t === void 0)
        c = new Error(
          "Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings."
        );
      else {
        var u = [n, i, s, o, l, a], f = 0;
        c = new Error(
          t.replace(/%s/g, function() {
            return u[f++];
          })
        ), c.name = "Invariant Violation";
      }
      throw c.framesToPop = 1, c;
    }
  };
  return x = e, x;
}
var oe = ie();
const z = /* @__PURE__ */ j(oe);
var P, N;
function le() {
  return N || (N = 1, P = function(r, t, n, i) {
    var s = n ? n.call(i, r, t) : void 0;
    if (s !== void 0)
      return !!s;
    if (r === t)
      return !0;
    if (typeof r != "object" || !r || typeof t != "object" || !t)
      return !1;
    var o = Object.keys(r), l = Object.keys(t);
    if (o.length !== l.length)
      return !1;
    for (var a = Object.prototype.hasOwnProperty.bind(t), c = 0; c < o.length; c++) {
      var u = o[c];
      if (!a(u))
        return !1;
      var f = r[u], m = t[u];
      if (s = n ? n.call(i, f, m, u) : void 0, s === !1 || s === void 0 && f !== m)
        return !1;
    }
    return !0;
  }), P;
}
var ce = le();
const ue = /* @__PURE__ */ j(ce);
var G = /* @__PURE__ */ ((e) => (e.BASE = "base", e.BODY = "body", e.HEAD = "head", e.HTML = "html", e.LINK = "link", e.META = "meta", e.NOSCRIPT = "noscript", e.SCRIPT = "script", e.STYLE = "style", e.TITLE = "title", e.FRAGMENT = "Symbol(react.fragment)", e))(G || {}), $ = {
  link: { rel: ["amphtml", "canonical", "alternate"] },
  script: { type: ["application/ld+json"] },
  meta: {
    charset: "",
    name: ["generator", "robots", "description"],
    property: [
      "og:type",
      "og:title",
      "og:url",
      "og:image",
      "og:image:alt",
      "og:description",
      "twitter:url",
      "twitter:title",
      "twitter:description",
      "twitter:image",
      "twitter:image:alt",
      "twitter:card",
      "twitter:site"
    ]
  }
}, V = Object.values(G), q = {
  accesskey: "accessKey",
  charset: "charSet",
  class: "className",
  contenteditable: "contentEditable",
  contextmenu: "contextMenu",
  "http-equiv": "httpEquiv",
  itemprop: "itemProp",
  tabindex: "tabIndex"
}, fe = Object.entries(q).reduce(
  (e, [r, t]) => (e[t] = r, e),
  {}
), h = "data-rh", v = {
  DEFAULT_TITLE: "defaultTitle",
  DEFER: "defer",
  ENCODE_SPECIAL_CHARACTERS: "encodeSpecialCharacters",
  ON_CHANGE_CLIENT_STATE: "onChangeClientState",
  TITLE_TEMPLATE: "titleTemplate",
  PRIORITIZE_SEO_TAGS: "prioritizeSeoTags"
}, A = (e, r) => {
  for (let t = e.length - 1; t >= 0; t -= 1) {
    const n = e[t];
    if (Object.prototype.hasOwnProperty.call(n, r))
      return n[r];
  }
  return null;
}, pe = (e) => {
  let r = A(
    e,
    "title"
    /* TITLE */
  );
  const t = A(e, v.TITLE_TEMPLATE);
  if (Array.isArray(r) && (r = r.join("")), t && r)
    return t.replace(/%s/g, () => r);
  const n = A(e, v.DEFAULT_TITLE);
  return r || n || void 0;
}, de = (e) => A(e, v.ON_CHANGE_CLIENT_STATE) || (() => {
}), I = (e, r) => r.filter((t) => typeof t[e] < "u").map((t) => t[e]).reduce((t, n) => ({ ...t, ...n }), {}), me = (e, r) => r.filter((t) => typeof t.base < "u").map((t) => t.base).reverse().reduce((t, n) => {
  if (!t.length) {
    const i = Object.keys(n);
    for (let s = 0; s < i.length; s += 1) {
      const l = i[s].toLowerCase();
      if (e.indexOf(l) !== -1 && n[l])
        return t.concat(n);
    }
  }
  return t;
}, []), he = (e) => console && typeof console.warn == "function" && console.warn(e), E = (e, r, t) => {
  const n = {};
  return t.filter((i) => Array.isArray(i[e]) ? !0 : (typeof i[e] < "u" && he(
    `Helmet: ${e} should be of type "Array". Instead found type "${typeof i[e]}"`
  ), !1)).map((i) => i[e]).reverse().reduce((i, s) => {
    const o = {};
    s.filter((a) => {
      let c;
      const u = Object.keys(a);
      for (let m = 0; m < u.length; m += 1) {
        const p = u[m], T = p.toLowerCase();
        r.indexOf(T) !== -1 && !(c === "rel" && a[c].toLowerCase() === "canonical") && !(T === "rel" && a[T].toLowerCase() === "stylesheet") && (c = T), r.indexOf(p) !== -1 && (p === "innerHTML" || p === "cssText" || p === "itemprop") && (c = p);
      }
      if (!c || !a[c])
        return !1;
      const f = a[c].toLowerCase();
      return n[c] || (n[c] = {}), o[c] || (o[c] = {}), n[c][f] ? !1 : (o[c][f] = !0, !0);
    }).reverse().forEach((a) => i.push(a));
    const l = Object.keys(o);
    for (let a = 0; a < l.length; a += 1) {
      const c = l[a], u = {
        ...n[c],
        ...o[c]
      };
      n[c] = u;
    }
    return i;
  }, []).reverse();
}, ye = (e, r) => {
  if (Array.isArray(e) && e.length) {
    for (let t = 0; t < e.length; t += 1)
      if (e[t][r])
        return !0;
  }
  return !1;
}, Te = (e) => ({
  baseTag: me([
    "href"
    /* HREF */
  ], e),
  bodyAttributes: I("bodyAttributes", e),
  defer: A(e, v.DEFER),
  encode: A(e, v.ENCODE_SPECIAL_CHARACTERS),
  htmlAttributes: I("htmlAttributes", e),
  linkTags: E(
    "link",
    [
      "rel",
      "href"
      /* HREF */
    ],
    e
  ),
  metaTags: E(
    "meta",
    [
      "name",
      "charset",
      "http-equiv",
      "property",
      "itemprop"
      /* ITEM_PROP */
    ],
    e
  ),
  noscriptTags: E("noscript", [
    "innerHTML"
    /* INNER_HTML */
  ], e),
  onChangeClientState: de(e),
  scriptTags: E(
    "script",
    [
      "src",
      "innerHTML"
      /* INNER_HTML */
    ],
    e
  ),
  styleTags: E("style", [
    "cssText"
    /* CSS_TEXT */
  ], e),
  title: pe(e),
  titleAttributes: I("titleAttributes", e),
  prioritizeSeoTags: ye(e, v.PRIORITIZE_SEO_TAGS)
}), W = (e) => Array.isArray(e) ? e.join("") : e, ge = (e, r) => {
  const t = Object.keys(e);
  for (let n = 0; n < t.length; n += 1)
    if (r[t[n]] && r[t[n]].includes(e[t[n]]))
      return !0;
  return !1;
}, H = (e, r) => Array.isArray(e) ? e.reduce(
  (t, n) => (ge(n, r) ? t.priority.push(n) : t.default.push(n), t),
  { priority: [], default: [] }
) : { default: e, priority: [] }, B = (e, r) => ({
  ...e,
  [r]: void 0
}), ve = [
  "noscript",
  "script",
  "style"
  /* STYLE */
], _ = (e, r = !0) => r === !1 ? String(e) : String(e).replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#x27;"), J = (e) => Object.keys(e).reduce((r, t) => {
  const n = typeof e[t] < "u" ? `${t}="${e[t]}"` : `${t}`;
  return r ? `${r} ${n}` : n;
}, ""), Ae = (e, r, t, n) => {
  const i = J(t), s = W(r);
  return i ? `<${e} ${h}="true" ${i}>${_(
    s,
    n
  )}</${e}>` : `<${e} ${h}="true">${_(
    s,
    n
  )}</${e}>`;
}, Ee = (e, r, t = !0) => r.reduce((n, i) => {
  const s = i, o = Object.keys(s).filter(
    (c) => !(c === "innerHTML" || c === "cssText")
  ).reduce((c, u) => {
    const f = typeof s[u] > "u" ? u : `${u}="${_(s[u], t)}"`;
    return c ? `${c} ${f}` : f;
  }, ""), l = s.innerHTML || s.cssText || "", a = ve.indexOf(e) === -1;
  return `${n}<${e} ${h}="true" ${o}${a ? "/>" : `>${l}</${e}>`}`;
}, ""), Q = (e, r = {}) => Object.keys(e).reduce((t, n) => {
  const i = q[n];
  return t[i || n] = e[n], t;
}, r), be = (e, r, t) => {
  const n = {
    key: r,
    [h]: !0
  }, i = Q(t, n);
  return [y.createElement("title", i, r)];
}, w = (e, r) => r.map((t, n) => {
  const i = {
    key: n,
    [h]: !0
  };
  return Object.keys(t).forEach((s) => {
    const l = q[s] || s;
    if (l === "innerHTML" || l === "cssText") {
      const a = t.innerHTML || t.cssText;
      i.dangerouslySetInnerHTML = { __html: a };
    } else
      i[l] = t[s];
  }), y.createElement(e, i);
}), d = (e, r, t = !0) => {
  switch (e) {
    case "title":
      return {
        toComponent: () => be(e, r.title, r.titleAttributes),
        toString: () => Ae(e, r.title, r.titleAttributes, t)
      };
    case "bodyAttributes":
    case "htmlAttributes":
      return {
        toComponent: () => Q(r),
        toString: () => J(r)
      };
    default:
      return {
        toComponent: () => w(e, r),
        toString: () => Ee(e, r, t)
      };
  }
}, Oe = ({ metaTags: e, linkTags: r, scriptTags: t, encode: n }) => {
  const i = H(e, $.meta), s = H(r, $.link), o = H(t, $.script);
  return {
    priorityMethods: {
      toComponent: () => [
        ...w("meta", i.priority),
        ...w("link", s.priority),
        ...w("script", o.priority)
      ],
      toString: () => (
        // generate all the tags as strings and concatenate them
        `${d("meta", i.priority, n)} ${d(
          "link",
          s.priority,
          n
        )} ${d("script", o.priority, n)}`
      )
    },
    metaTags: i.default,
    linkTags: s.default,
    scriptTags: o.default
  };
}, Ce = (e) => {
  const {
    baseTag: r,
    bodyAttributes: t,
    encode: n = !0,
    htmlAttributes: i,
    noscriptTags: s,
    styleTags: o,
    title: l = "",
    titleAttributes: a,
    prioritizeSeoTags: c
  } = e;
  let { linkTags: u, metaTags: f, scriptTags: m } = e, p = {
    toComponent: () => {
    },
    toString: () => ""
  };
  return c && ({ priorityMethods: p, linkTags: u, metaTags: f, scriptTags: m } = Oe(e)), {
    priority: p,
    base: d("base", r, n),
    bodyAttributes: d("bodyAttributes", t, n),
    htmlAttributes: d("htmlAttributes", i, n),
    link: d("link", u, n),
    meta: d("meta", f, n),
    noscript: d("noscript", s, n),
    script: d("script", m, n),
    style: d("style", o, n),
    title: d("title", { title: l, titleAttributes: a }, n)
  };
}, D = Ce, C = [], X = !!(typeof window < "u" && window.document && window.document.createElement), R = class {
  instances = [];
  canUseDOM = X;
  context;
  value = {
    setHelmet: (e) => {
      this.context.helmet = e;
    },
    helmetInstances: {
      get: () => this.canUseDOM ? C : this.instances,
      add: (e) => {
        (this.canUseDOM ? C : this.instances).push(e);
      },
      remove: (e) => {
        const r = (this.canUseDOM ? C : this.instances).indexOf(e);
        (this.canUseDOM ? C : this.instances).splice(r, 1);
      }
    }
  };
  constructor(e, r) {
    this.context = e, this.canUseDOM = r || !1, r || (e.helmet = D({
      baseTag: [],
      bodyAttributes: {},
      htmlAttributes: {},
      linkTags: [],
      metaTags: [],
      noscriptTags: [],
      scriptTags: [],
      styleTags: [],
      title: "",
      titleAttributes: {}
    }));
  }
}, we = {}, ee = y.createContext(we), Se = class te extends k {
  static canUseDOM = X;
  helmetData;
  constructor(r) {
    super(r), this.helmetData = new R(this.props.context || {}, te.canUseDOM);
  }
  render() {
    return /* @__PURE__ */ y.createElement(ee.Provider, { value: this.helmetData.value }, this.props.children);
  }
}, g = (e, r) => {
  const t = document.head || document.querySelector(
    "head"
    /* HEAD */
  ), n = t.querySelectorAll(`${e}[${h}]`), i = [].slice.call(n), s = [];
  let o;
  return r && r.length && r.forEach((l) => {
    const a = document.createElement(e);
    for (const c in l)
      if (Object.prototype.hasOwnProperty.call(l, c))
        if (c === "innerHTML")
          a.innerHTML = l.innerHTML;
        else if (c === "cssText")
          a.styleSheet ? a.styleSheet.cssText = l.cssText : a.appendChild(document.createTextNode(l.cssText));
        else {
          const u = c, f = typeof l[u] > "u" ? "" : l[u];
          a.setAttribute(c, f);
        }
    a.setAttribute(h, "true"), i.some((c, u) => (o = u, a.isEqualNode(c))) ? i.splice(o, 1) : s.push(a);
  }), i.forEach((l) => l.parentNode?.removeChild(l)), s.forEach((l) => t.appendChild(l)), {
    oldTags: i,
    newTags: s
  };
}, M = (e, r) => {
  const t = document.getElementsByTagName(e)[0];
  if (!t)
    return;
  const n = t.getAttribute(h), i = n ? n.split(",") : [], s = [...i], o = Object.keys(r);
  for (const l of o) {
    const a = r[l] || "";
    t.getAttribute(l) !== a && t.setAttribute(l, a), i.indexOf(l) === -1 && i.push(l);
    const c = s.indexOf(l);
    c !== -1 && s.splice(c, 1);
  }
  for (let l = s.length - 1; l >= 0; l -= 1)
    t.removeAttribute(s[l]);
  i.length === s.length ? t.removeAttribute(h) : t.getAttribute(h) !== o.join(",") && t.setAttribute(h, o.join(","));
}, xe = (e, r) => {
  typeof e < "u" && document.title !== e && (document.title = W(e)), M("title", r);
}, Y = (e, r) => {
  const {
    baseTag: t,
    bodyAttributes: n,
    htmlAttributes: i,
    linkTags: s,
    metaTags: o,
    noscriptTags: l,
    onChangeClientState: a,
    scriptTags: c,
    styleTags: u,
    title: f,
    titleAttributes: m
  } = e;
  M("body", n), M("html", i), xe(f, m);
  const p = {
    baseTag: g("base", t),
    linkTags: g("link", s),
    metaTags: g("meta", o),
    noscriptTags: g("noscript", l),
    scriptTags: g("script", c),
    styleTags: g("style", u)
  }, T = {}, L = {};
  Object.keys(p).forEach((O) => {
    const { newTags: F, oldTags: re } = p[O];
    F.length && (T[O] = F), re.length && (L[O] = p[O].oldTags);
  }), r && r(), a(e, T, L);
}, b = null, Pe = (e) => {
  b && cancelAnimationFrame(b), e.defer ? b = requestAnimationFrame(() => {
    Y(e, () => {
      b = null;
    });
  }) : (Y(e), b = null);
}, $e = Pe, Z = class extends k {
  rendered = !1;
  shouldComponentUpdate(e) {
    return !ue(e, this.props);
  }
  componentDidUpdate() {
    this.emitChange();
  }
  componentWillUnmount() {
    const { helmetInstances: e } = this.props.context;
    e.remove(this), this.emitChange();
  }
  emitChange() {
    const { helmetInstances: e, setHelmet: r } = this.props.context;
    let t = null;
    const n = Te(
      e.get().map((i) => {
        const s = { ...i.props };
        return delete s.context, s;
      })
    );
    Se.canUseDOM ? $e(n) : D && (t = D(n)), r(t);
  }
  // componentWillMount will be deprecated
  // for SSR, initialize on first render
  // constructor is also unsafe in StrictMode
  init() {
    if (this.rendered)
      return;
    this.rendered = !0;
    const { helmetInstances: e } = this.props.context;
    e.add(this), this.emitChange();
  }
  render() {
    return this.init(), null;
  }
}, _e = class extends k {
  static defaultProps = {
    defer: !0,
    encodeSpecialCharacters: !0,
    prioritizeSeoTags: !1
  };
  shouldComponentUpdate(e) {
    return !ae(B(this.props, "helmetData"), B(e, "helmetData"));
  }
  mapNestedChildrenToProps(e, r) {
    if (!r)
      return null;
    switch (e.type) {
      case "script":
      case "noscript":
        return {
          innerHTML: r
        };
      case "style":
        return {
          cssText: r
        };
      default:
        throw new Error(
          `<${e.type} /> elements are self-closing and can not contain children. Refer to our API for more information.`
        );
    }
  }
  flattenArrayTypeChildren(e, r, t, n) {
    return {
      ...r,
      [e.type]: [
        ...r[e.type] || [],
        {
          ...t,
          ...this.mapNestedChildrenToProps(e, n)
        }
      ]
    };
  }
  mapObjectTypeChildren(e, r, t, n) {
    switch (e.type) {
      case "title":
        return {
          ...r,
          [e.type]: n,
          titleAttributes: { ...t }
        };
      case "body":
        return {
          ...r,
          bodyAttributes: { ...t }
        };
      case "html":
        return {
          ...r,
          htmlAttributes: { ...t }
        };
      default:
        return {
          ...r,
          [e.type]: { ...t }
        };
    }
  }
  mapArrayTypeChildrenToProps(e, r) {
    let t = { ...r };
    return Object.keys(e).forEach((n) => {
      t = {
        ...t,
        [n]: e[n]
      };
    }), t;
  }
  warnOnInvalidChildren(e, r) {
    return z(
      V.some((t) => e.type === t),
      typeof e.type == "function" ? "You may be attempting to nest <Helmet> components within each other, which is not allowed. Refer to our API for more information." : `Only elements types ${V.join(
        ", "
      )} are allowed. Helmet does not support rendering <${e.type}> elements. Refer to our API for more information.`
    ), z(
      !r || typeof r == "string" || Array.isArray(r) && !r.some((t) => typeof t != "string"),
      `Helmet expects a string as a child of <${e.type}>. Did you forget to wrap your children in braces? ( <${e.type}>{\`\`}</${e.type}> ) Refer to our API for more information.`
    ), !0;
  }
  mapChildrenToProps(e, r) {
    let t = {};
    return y.Children.forEach(e, (n) => {
      if (!n || !n.props)
        return;
      const { children: i, ...s } = n.props, o = Object.keys(s).reduce((a, c) => (a[fe[c] || c] = s[c], a), {});
      let { type: l } = n;
      switch (typeof l == "symbol" ? l = l.toString() : this.warnOnInvalidChildren(n, i), l) {
        case "Symbol(react.fragment)":
          r = this.mapChildrenToProps(i, r);
          break;
        case "link":
        case "meta":
        case "noscript":
        case "script":
        case "style":
          t = this.flattenArrayTypeChildren(
            n,
            t,
            o,
            i
          );
          break;
        default:
          r = this.mapObjectTypeChildren(n, r, o, i);
          break;
      }
    }), this.mapArrayTypeChildrenToProps(t, r);
  }
  render() {
    const { children: e, ...r } = this.props;
    let t = { ...r }, { helmetData: n } = r;
    if (e && (t = this.mapChildrenToProps(e, t)), n && !(n instanceof R)) {
      const i = n;
      n = new R(i.context, !0), delete t.helmetData;
    }
    return n ? /* @__PURE__ */ y.createElement(Z, { ...t, context: n.value }) : /* @__PURE__ */ y.createElement(ee.Consumer, null, (i) => /* @__PURE__ */ y.createElement(Z, { ...t, context: i }));
  }
};
export {
  _e as H,
  Se as a
};
//# sourceMappingURL=index.esm-BnYHxCYC.js.map
