import { j as t } from "../jsx-runtime-DywqP_6a.js";
import * as e from "@radix-ui/react-dialog";
import { CircleIcon as c, XIcon as p } from "lucide-react";
import * as l from "react";
import { c as r } from "../cn-dYga0KKN.js";
const j = e.Root, b = e.Trigger, m = e.Portal, v = e.Close, i = l.forwardRef(({ className: a, ...o }, s) => /* @__PURE__ */ t.jsx(
  e.Overlay,
  {
    ref: s,
    className: r(
      "fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
      a
    ),
    ...o
  }
));
i.displayName = e.Overlay.displayName;
const f = l.forwardRef(({ className: a, children: o, showCloseButton: s = !0, ...n }, d) => /* @__PURE__ */ t.jsxs(m, { children: [
  /* @__PURE__ */ t.jsx(i, {}),
  /* @__PURE__ */ t.jsxs(
    e.Content,
    {
      ref: d,
      className: r(
        "fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",
        a
      ),
      ...n,
      children: [
        o,
        s && /* @__PURE__ */ t.jsxs(e.Close, { className: "absolute p-3 group -left-1.5 -top-1.5 rounded-xs opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-hidden focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground", children: [
          /* @__PURE__ */ t.jsx(
            c,
            {
              className: "h-2 w-2 transition-all border border-transparent  group-hover:border-white/20 rounded-full group-hover:scale-180 group-hover:text-red-400",
              strokeWidth: 2,
              fill: "currentColor"
            }
          ),
          /* @__PURE__ */ t.jsx(
            p,
            {
              className: "h-2 w-2 absolute top-3 left-3 text-transparent group-hover:text-red-800 transition-colors",
              strokeWidth: 2,
              fill: "currentColor"
            }
          ),
          /* @__PURE__ */ t.jsx("span", { className: "sr-only", children: "Close" })
        ] })
      ]
    }
  )
] }));
f.displayName = e.Content.displayName;
const g = ({
  className: a,
  ...o
}) => /* @__PURE__ */ t.jsx(
  "div",
  {
    className: r(
      "flex flex-col space-y-1.5 text-center sm:text-left",
      a
    ),
    ...o
  }
);
g.displayName = "DialogHeader";
const u = ({
  className: a,
  ...o
}) => /* @__PURE__ */ t.jsx(
  "div",
  {
    className: r(
      "flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",
      a
    ),
    ...o
  }
);
u.displayName = "DialogFooter";
const x = l.forwardRef(({ className: a, ...o }, s) => /* @__PURE__ */ t.jsx(
  e.Title,
  {
    ref: s,
    className: r(
      "text-lg font-semibold leading-none tracking-tight",
      a
    ),
    ...o
  }
));
x.displayName = e.Title.displayName;
const y = l.forwardRef(({ className: a, ...o }, s) => /* @__PURE__ */ t.jsx(
  e.Description,
  {
    ref: s,
    className: r("text-sm text-muted-foreground", a),
    ...o
  }
));
y.displayName = e.Description.displayName;
export {
  j as Dialog,
  v as DialogClose,
  f as DialogContent,
  y as DialogDescription,
  u as DialogFooter,
  g as DialogHeader,
  i as DialogOverlay,
  m as DialogPortal,
  x as DialogTitle,
  b as DialogTrigger
};
//# sourceMappingURL=Dialog.js.map
