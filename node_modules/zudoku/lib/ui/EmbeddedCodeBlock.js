import { j as e } from "../jsx-runtime-DywqP_6a.js";
import { CheckIcon as m, CopyIcon as p } from "lucide-react";
import { useState as x, useRef as f } from "react";
import { c as t } from "../cn-dYga0KKN.js";
const j = ({
  children: s,
  language: d,
  showCopy: o = "hover",
  showCopyText: n,
  showLanguageIndicator: l = !0,
  showLineNumbers: c,
  ...u
}) => {
  const [a, i] = x(!1), r = f(null);
  return s ? /* @__PURE__ */ e.jsxs(
    "div",
    {
      className: t(
        "code-block-wrapper relative group bg-muted/50",
        c && "line-numbers"
      ),
      children: [
        /* @__PURE__ */ e.jsx(
          "div",
          {
            className: t(
              "code-block text-sm not-prose scrollbar overflow-x-auto [&>pre]:p-2",
              u.className
            ),
            ref: r,
            children: s
          }
        ),
        l && /* @__PURE__ */ e.jsx(
          "span",
          {
            className: t(
              "absolute top-1.5 end-3 !text-[11px] font-mono text-muted-foreground transition group-hover:opacity-0",
              o === "always" && "hidden"
            ),
            children: d
          }
        ),
        o !== "never" && /* @__PURE__ */ e.jsxs(
          "button",
          {
            type: "button",
            "aria-label": "Copy code",
            title: "Copy code",
            className: t(
              "absolute top-2 end-2 p-2 transition hover:shadow-xs active:shadow-none active:inset-shadow-xs hover:outline outline-border rounded-md text-sm text-muted-foreground",
              o === "hover" && "opacity-0 group-hover:opacity-100",
              n && "flex gap-2 items-center font-medium"
            ),
            disabled: a,
            onClick: () => {
              r.current?.textContent && (i(!0), navigator.clipboard.writeText(r.current.textContent), setTimeout(() => i(!1), 2e3));
            },
            children: [
              a ? /* @__PURE__ */ e.jsx(
                m,
                {
                  className: "text-emerald-600",
                  size: 16,
                  strokeWidth: 2.5,
                  absoluteStrokeWidth: !0
                }
              ) : /* @__PURE__ */ e.jsx(p, { size: 16 }),
              n && "Copy"
            ]
          }
        )
      ]
    }
  ) : null;
};
export {
  j as EmbeddedCodeBlock
};
//# sourceMappingURL=EmbeddedCodeBlock.js.map
