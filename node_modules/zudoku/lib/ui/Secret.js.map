{"version":3,"file":"Secret.js","sources":["../../src/lib/ui/Secret.tsx"],"sourcesContent":["import { CheckIcon, CopyIcon, EyeIcon, EyeOffIcon } from \"lucide-react\";\nimport { useState } from \"react\";\nimport { cn } from \"../util/cn.js\";\nimport { useCopyToClipboard } from \"../util/useCopyToClipboard.js\";\nimport { Button } from \"./Button.js\";\n\ntype Status = \"active\" | \"expired\" | \"expiring\" | \"revoked\" | \"none\";\n\nexport const SecretText = ({\n  secret,\n  revealed = false,\n  previewChars = 5,\n  className,\n}: {\n  secret: string;\n  revealed?: boolean;\n  previewChars?: number;\n  className?: string;\n}) => {\n  return (\n    <span className={cn(\"w-full truncate\", className)}>\n      <div\n        className={cn(\n          \"w-40 inline-block md:w-fit\",\n          revealed ? \"\" : \"opacity-50\",\n        )}\n      >\n        {revealed\n          ? secret.slice(0, previewChars === 0 ? secret.length : -previewChars)\n          : \"•••• \".repeat(\n              secret.slice(\n                0,\n                previewChars === 0 ? secret.length : -previewChars,\n              ).length / 5,\n            ) +\n            \"•\".repeat(\n              secret.slice(\n                0,\n                previewChars === 0 ? secret.length : -previewChars,\n              ).length % 5,\n            )}\n      </div>\n      {previewChars > 0 && <span>{secret.slice(-previewChars)}</span>}\n    </span>\n  );\n};\n\nexport const Secret = ({\n  secret,\n  preview = 5,\n  className,\n  status,\n  onCopy,\n  revealed: controlledRevealed,\n  onReveal,\n  noReveal: disabledReveal,\n}: {\n  revealed?: boolean;\n  noReveal?: boolean;\n  secret: string;\n  status?: Status;\n  className?: string;\n  preview?: number;\n  onCopy?: (secret: string) => void;\n  onReveal?: (revealed: boolean) => void;\n}) => {\n  const previewChars = Math.abs(preview);\n  const [isRevealed, setRevealed] = useState(false);\n  const [isCopied, copyToClipboard] = useCopyToClipboard();\n\n  const revealed = controlledRevealed ?? isRevealed;\n\n  return (\n    <div\n      className={cn(\n        \"flex gap-2 items-center text-sm border rounded-md px-1\",\n        className,\n      )}\n    >\n      <div className=\"font-mono w-full h-9 items-center flex px-2 text-xs gap-2\">\n        {status && (\n          <div\n            className={cn(\n              \"rounded-full shrink-0 w-2 h-2 mr-2\",\n              status === \"active\" && \"bg-emerald-400\",\n              status === \"expired\" && \"bg-neutral-200\",\n              status === \"expiring\" && \"bg-yellow-400\",\n              status === \"revoked\" && \"bg-red-400\",\n              status === \"none\" && \"opacity-0\",\n            )}\n          />\n        )}\n        <SecretText\n          secret={secret}\n          revealed={revealed}\n          previewChars={previewChars}\n        />\n      </div>\n      {disabledReveal !== true && (\n        <Button\n          variant=\"ghost\"\n          onClick={() => {\n            setRevealed((prev) => !prev);\n            onReveal?.(!revealed);\n          }}\n          size=\"icon\"\n        >\n          {revealed ? <EyeOffIcon size={16} /> : <EyeIcon size={16} />}\n        </Button>\n      )}\n      <Button\n        variant=\"ghost\"\n        onClick={() => {\n          copyToClipboard(secret);\n          onCopy?.(secret);\n        }}\n        size=\"icon\"\n      >\n        {isCopied ? <CheckIcon size={16} /> : <CopyIcon size={16} />}\n      </Button>\n    </div>\n  );\n};\n"],"names":["SecretText","secret","revealed","previewChars","className","cn","jsx","Secret","preview","status","onCopy","controlledRevealed","onReveal","disabledReveal","isRevealed","setRevealed","useState","isCopied","copyToClipboard","useCopyToClipboard","jsxs","Button","prev","EyeOffIcon","EyeIcon","CheckIcon","CopyIcon"],"mappings":"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"}