import { j as e } from "./jsx-runtime-DywqP_6a.js";
import { s as r } from "./index-DhL3LhWV.js";
import { b as j } from "./ZudokuContext-BcqSiygJ.js";
import { H as c } from "./index.esm-BnYHxCYC.js";
import { ChevronsUpDownIcon as N, ChevronsDownUpIcon as y, ChevronRightIcon as b } from "lucide-react";
import { B as v } from "./Button-DTDRi4CT.js";
import { u as C, a as w, C as m, b as l, c as d, g as S } from "./index-BRQDtecD.js";
import { C as A } from "./CategoryHeading-BGCNu3VK.js";
import { H as p, M as H } from "./ErrorAlert-xpVkFS_n.js";
import { T as I } from "./Toc-Cf5UojVb.js";
import { S as z } from "./SchemaView-BYH_AirG.js";
const T = S(
  /* GraphQL */
  `
  query GetSchemas($input: JSON!, $type: SchemaType!) {
    schema(input: $input, type: $type) {
      title
      description
      summary
      components {
        schemas {
          name
          schema
          extensions
        }
      }
    }
  }
`
);
function G() {
  const { input: h, type: x, versions: u, version: a, options: o } = C(), f = w(T, {
    input: h,
    type: x
  }), { data: t } = j(f), n = t.schema.components?.schemas ?? [], g = Object.entries(u).length > 1, i = o?.showVersionSelect === "always" || g && o?.showVersionSelect !== "hide";
  return n.length ? /* @__PURE__ */ e.jsxs(
    "div",
    {
      className: "grid grid-cols-(--sidecar-grid-cols) gap-8 justify-between",
      "data-pagefind-filter": "section:openapi",
      "data-pagefind-meta": "section:openapi",
      children: [
        /* @__PURE__ */ e.jsxs(c, { children: [
          /* @__PURE__ */ e.jsxs("title", { children: [
            "Schemas ",
            i ? a : ""
          ] }),
          /* @__PURE__ */ e.jsx("meta", { name: "description", content: "List of schemas used by the API." })
        ] }),
        /* @__PURE__ */ e.jsxs("div", { className: "pt-(--padding-content-top) pb-(--padding-content-bottom)", children: [
          /* @__PURE__ */ e.jsxs(m, { className: "w-full", children: [
            /* @__PURE__ */ e.jsxs("div", { className: "flex flex-col gap-y-4 sm:flex-row justify-around items-start sm:items-end", children: [
              /* @__PURE__ */ e.jsxs("div", { className: "flex-1", children: [
                /* @__PURE__ */ e.jsx(A, { children: t.schema.title }),
                /* @__PURE__ */ e.jsxs(
                  p,
                  {
                    level: 1,
                    id: "schemas",
                    registerNavigationAnchor: !0,
                    className: "mb-0",
                    children: [
                      "Schemas",
                      i && /* @__PURE__ */ e.jsxs("span", { className: "text-xl text-muted-foreground ms-1.5", children: [
                        "(",
                        a,
                        ")"
                      ] })
                    ]
                  }
                )
              ] }),
              t.schema.description && /* @__PURE__ */ e.jsxs(l, { className: "flex items-center gap-1 text-sm font-medium text-muted-foreground group", children: [
                /* @__PURE__ */ e.jsx("span", { children: "API information" }),
                /* @__PURE__ */ e.jsx(
                  N,
                  {
                    className: "group-data-[state=open]:hidden translate-y-px",
                    size: 14
                  }
                ),
                /* @__PURE__ */ e.jsx(
                  y,
                  {
                    className: "group-data-[state=closed]:hidden translate-y-px",
                    size: 13
                  }
                )
              ] })
            ] }),
            t.schema.description && /* @__PURE__ */ e.jsx(d, { className: "CollapsibleContent", children: /* @__PURE__ */ e.jsx("div", { className: "mt-4 max-w-full border rounded-sm bg-muted/25", children: /* @__PURE__ */ e.jsx(
              H,
              {
                className: "max-w-full prose-img:max-w-prose border-border p-3 lg:p-5",
                content: t.schema.description
              }
            ) }) })
          ] }),
          /* @__PURE__ */ e.jsx("hr", { className: "my-8" }),
          /* @__PURE__ */ e.jsx("div", { className: "flex flex-col gap-y-5", children: n.map((s) => /* @__PURE__ */ e.jsxs(m, { className: "group", defaultOpen: !0, children: [
            /* @__PURE__ */ e.jsxs(
              p,
              {
                registerNavigationAnchor: !0,
                level: 2,
                className: "flex items-center gap-1 justify-between w-fit",
                id: r(s.name),
                children: [
                  s.name,
                  " ",
                  /* @__PURE__ */ e.jsx(l, { asChild: !0, children: /* @__PURE__ */ e.jsx(v, { variant: "ghost", size: "icon", className: "size-6", children: /* @__PURE__ */ e.jsx(
                    b,
                    {
                      size: 16,
                      className: "group-data-[state=open]:rotate-90 transition cursor-pointer"
                    }
                  ) }) })
                ]
              }
            ),
            /* @__PURE__ */ e.jsx(d, { className: "mt-4 CollapsibleContent", children: /* @__PURE__ */ e.jsx(z, { schema: s.schema }) })
          ] }, s.name)) })
        ] }),
        /* @__PURE__ */ e.jsx(
          I,
          {
            entries: n.map((s) => ({
              id: r(s.name),
              value: s.name,
              depth: 1
            }))
          }
        )
      ]
    }
  ) : /* @__PURE__ */ e.jsxs("div", { children: [
    /* @__PURE__ */ e.jsxs(c, { children: [
      /* @__PURE__ */ e.jsxs("title", { children: [
        "Schemas ",
        i ? a : ""
      ] }),
      /* @__PURE__ */ e.jsx("meta", { name: "description", content: "List of schemas used by the API." })
    ] }),
    "No schemas found"
  ] });
}
export {
  G as SchemaList
};
//# sourceMappingURL=SchemaList-BExl5RED.js.map
