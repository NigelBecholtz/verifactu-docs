{"version":3,"file":"zudoku.plugin-search-pagefind.js","sources":["../src/lib/ui/Callout.tsx","../src/lib/plugins/search-pagefind/get-results.tsx","../src/lib/plugins/search-pagefind/ResultList.tsx","../src/lib/plugins/search-pagefind/PagefindSearch.tsx","../src/lib/plugins/search-pagefind/index.tsx"],"sourcesContent":["import {\n  AlertTriangleIcon,\n  InfoIcon,\n  LightbulbIcon,\n  type LucideIcon,\n  ShieldAlertIcon,\n} from \"lucide-react\";\nimport type { ReactNode } from \"react\";\nimport { cn } from \"../util/cn.js\";\n\nconst stylesMap = {\n  note: {\n    border: \"border-gray-300 dark:border-zinc-800\",\n    bg: \"bg-gray-100 dark:bg-zinc-800/50\",\n    iconColor: \"text-gray-600 dark:text-zinc-300\",\n    titleColor: \"text-gray-600 dark:text-zinc-300\",\n    textColor: \"text-gray-600 dark:text-zinc-300\",\n    Icon: InfoIcon as LucideIcon,\n  },\n  tip: {\n    border: \"border-green-500 dark:border-green-800\",\n    bg: \"bg-green-200/25 dark:bg-green-950/70\",\n    iconColor: \"text-green-600 dark:text-green-200\",\n    titleColor: \"text-green-700 dark:text-green-200\",\n    textColor: \"text-green-600 dark:text-green-50\",\n    Icon: LightbulbIcon as LucideIcon,\n  },\n  info: {\n    border: \"border-blue-400 dark:border-blue-900/60\",\n    bg: \"bg-blue-50 dark:bg-blue-950/40\",\n    iconColor: \"text-blue-400 dark:text-blue-200\",\n    titleColor: \"text-blue-700 dark:text-blue-200\",\n    textColor: \"text-blue-600 dark:text-blue-100\",\n    Icon: InfoIcon as LucideIcon,\n  },\n  caution: {\n    border: \"border-yellow-400 dark:border-yellow-400/25\",\n    bg: \"bg-yellow-100/60 dark:bg-yellow-400/10\",\n    iconColor: \"text-yellow-500 dark:text-yellow-300\",\n    titleColor: \"text-yellow-600 dark:text-yellow-300\",\n    textColor: \"text-yellow-700 dark:text-yellow-200\",\n    Icon: AlertTriangleIcon as LucideIcon,\n  },\n  danger: {\n    border: \"border-rose-400 dark:border-rose-800\",\n    bg: \"bg-rose-50 dark:bg-rose-950/40\",\n    iconColor: \"text-rose-400 dark:text-rose-300\",\n    titleColor: \"text-rose-800 dark:text-rose-300\",\n    textColor: \"text-rose-700 dark:text-rose-100\",\n    Icon: ShieldAlertIcon as LucideIcon,\n  },\n} as const;\n\ntype CalloutProps = {\n  type: keyof typeof stylesMap;\n  title?: string;\n  children: ReactNode;\n  className?: string;\n  icon?: boolean;\n};\n\nexport const Callout = ({\n  type,\n  children,\n  title,\n  className,\n  icon = true,\n}: CalloutProps) => {\n  const { border, bg, iconColor, titleColor, textColor, Icon } =\n    stylesMap[type];\n\n  return (\n    <div\n      className={cn(\n        \"not-prose rounded-md border p-4 text-md my-2\",\n        icon &&\n          \"grid grid-cols-[min-content_1fr] items-baseline grid-rows-[fit-content_1fr] gap-x-4 gap-y-2\",\n        !icon && title && \"flex flex-col gap-2\",\n        \"[&_a]:underline [&_a]:decoration-current [&_a]:decoration-from-font [&_a]:underline-offset-4 hover:[&_a]:decoration-1\",\n        \"[&_.code-block-wrapper]:border\",\n        \"[&_ul]:list-disc [&_ol]:list-decimal [&_ul]:ps-4 [&_ul>li]:ps-1 [&_ul>li]:my-1\",\n        icon && title && \"items-center\",\n        border,\n        bg,\n        className,\n      )}\n    >\n      {icon && (\n        <Icon\n          className={cn(!title ? \"translate-y-1\" : \"align-middle\", iconColor)}\n          size={20}\n          aria-hidden=\"true\"\n        />\n      )}\n      {title && <h3 className={cn(\"font-medium\", titleColor)}>{title}</h3>}\n      <div\n        className={cn(\n          icon && \"col-start-2\",\n          !title && icon && \"row-start-1\",\n          textColor,\n          \"overflow-x-auto\",\n        )}\n      >\n        {children}\n      </div>\n    </div>\n  );\n};\n","import type { AuthState } from \"../../authentication/state.js\";\nimport type { ZudokuContext } from \"../../core/ZudokuContext.js\";\nimport type { PagefindOptions } from \"./index.js\";\nimport type { PagefindSearchFragment, PagefindSearchResults } from \"./types.js\";\n\nexport const getResults = async ({\n  search,\n  options,\n  auth,\n  context,\n}: {\n  search: PagefindSearchResults;\n  options: PagefindOptions;\n  auth: AuthState;\n  context: ZudokuContext;\n}) => {\n  const maxResults = options.maxResults ?? 10;\n  const transformFn = options.transformResults ?? (() => true);\n\n  const transformedResults: PagefindSearchFragment[] = [];\n\n  const generator = searchResultGenerator({\n    search,\n    transformFn,\n    auth,\n    context,\n  });\n\n  for await (const result of generator) {\n    transformedResults.push(result);\n    if (transformedResults.length >= maxResults) break;\n  }\n\n  return transformedResults;\n};\n\nasync function* searchResultGenerator({\n  search,\n  transformFn,\n  auth,\n  context,\n}: {\n  search: PagefindSearchResults;\n  transformFn: NonNullable<PagefindOptions[\"transformResults\"]>;\n  auth: AuthState<unknown>;\n  context: ZudokuContext;\n}) {\n  const batchSize = 5;\n  let processedCount = 0;\n\n  while (processedCount < search.results.length) {\n    const batch = search.results.slice(\n      processedCount,\n      processedCount + batchSize,\n    );\n    processedCount += batch.length;\n\n    const batchData = await Promise.all(batch.map((result) => result.data()));\n\n    for (const result of batchData) {\n      const transformed = transformFn({ result, auth, context });\n\n      if (transformed === false) {\n        // Skip this result\n      } else if (transformed === true || transformed == null) {\n        // Keep the original result\n        yield result;\n      } else {\n        // Return the transformed result\n        yield transformed;\n      }\n    }\n  }\n}\n","import { BracketsIcon, FileTextIcon } from \"lucide-react\";\nimport { useLayoutEffect, useRef } from \"react\";\nimport { Link, useNavigate } from \"react-router\";\nimport { CommandGroup, CommandItem, CommandList } from \"zudoku/ui/Command.js\";\nimport { joinUrl } from \"../../util/joinUrl.js\";\nimport type { PagefindSearchFragment, PagefindSubResult } from \"./types.js\";\n\nconst sortSubResults = (a: PagefindSubResult, b: PagefindSubResult) => {\n  const aScore = a.weighted_locations.reduce(\n    (sum, loc) => sum + loc.balanced_score,\n    0,\n  );\n  const bScore = b.weighted_locations.reduce(\n    (sum, loc) => sum + loc.balanced_score,\n    0,\n  );\n  return bScore - aScore;\n};\n\nconst hoverClassname = `cursor-pointer border border-transparent data-[selected=true]:border-border`;\n\nexport const ResultList = ({\n  basePath,\n  searchResults,\n  searchTerm,\n  onClose,\n  maxSubResults = 4,\n}: {\n  basePath?: string;\n  searchResults: PagefindSearchFragment[];\n  searchTerm: string;\n  onClose: () => void;\n  maxSubResults?: number;\n}) => {\n  const navigate = useNavigate();\n  const commandListRef = useRef<HTMLDivElement | null>(null);\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: Only scroll to top when search term changes\n  useLayoutEffect(() => {\n    requestIdleCallback(() => {\n      commandListRef.current?.scrollTo({ top: 0 });\n    });\n  }, [searchTerm]);\n\n  const stripBasePath = (url: string) => {\n    if (basePath && url.startsWith(basePath)) {\n      return joinUrl(url.slice(basePath.length));\n    }\n    return url;\n  };\n\n  return (\n    <CommandList className=\"max-h-[450px]\" ref={commandListRef}>\n      {searchTerm && searchResults.length > 0 && (\n        <CommandGroup\n          className=\"text-sm text-muted-foreground\"\n          heading={`${searchResults.length} results for \"${searchTerm}\"`}\n        />\n      )}\n      {searchTerm &&\n        searchResults.map((result) => (\n          <CommandGroup\n            key={[result.meta.title ?? result.excerpt, result.url].join(\"-\")}\n          >\n            <CommandItem\n              asChild\n              value={`${result.meta.title}-${result.url}`}\n              className={hoverClassname}\n              onSelect={() => {\n                void navigate(stripBasePath(result.url));\n                onClose();\n              }}\n            >\n              <Link to={stripBasePath(result.url)}>\n                {result.meta.section === \"openapi\" ? (\n                  <BracketsIcon />\n                ) : (\n                  <FileTextIcon />\n                )}\n                {result.meta.title}\n              </Link>\n            </CommandItem>\n            {result.sub_results\n              .sort(sortSubResults)\n              .slice(0, maxSubResults)\n              .map((subResult) => (\n                <CommandItem\n                  asChild\n                  key={`sub-${result.meta.title}-${subResult.url}`}\n                  value={`sub-${result.meta.title}-${subResult.url}`}\n                  className={hoverClassname}\n                  onSelect={() => {\n                    void navigate(stripBasePath(subResult.url));\n                    onClose();\n                  }}\n                >\n                  <Link to={stripBasePath(subResult.url)} onClick={onClose}>\n                    <div className=\"flex flex-col items-start gap-2 ms-2.5 ps-5 border-l border-muted-foreground/50\">\n                      <span className=\"font-bold\">{subResult.title}</span>\n                      <span\n                        className=\"text-[13px] [&_mark]:bg-primary [&_mark]:text-primary-foreground\"\n                        // biome-ignore lint/security/noDangerouslySetInnerHtml: Pagefind provides sanitized HTML\n                        dangerouslySetInnerHTML={{ __html: subResult.excerpt }}\n                      />\n                    </div>\n                  </Link>\n                </CommandItem>\n              ))}\n          </CommandGroup>\n        ))}\n    </CommandList>\n  );\n};\n","import { VisuallyHidden } from \"@radix-ui/react-visually-hidden\";\nimport { keepPreviousData, useQuery } from \"@tanstack/react-query\";\nimport { useRef, useState } from \"react\";\nimport { Button } from \"zudoku/ui/Button.js\";\nimport { Callout } from \"zudoku/ui/Callout.js\";\nimport {\n  CommandDialog,\n  CommandEmpty,\n  CommandInput,\n} from \"zudoku/ui/Command.js\";\nimport { DialogTitle } from \"zudoku/ui/Dialog.js\";\nimport { useAuthState } from \"../../authentication/state.js\";\nimport { useZudoku } from \"../../components/context/ZudokuContext.js\";\nimport { SEARCH_PROTECTED_SECTION } from \"../../core/RouteGuard.js\";\nimport { joinUrl } from \"../../util/joinUrl.js\";\nimport { getResults } from \"./get-results.js\";\nimport type { PagefindOptions } from \"./index.js\";\nimport { ResultList } from \"./ResultList.js\";\nimport type { Pagefind } from \"./types.js\";\n\nconst DEFAULT_RANKING = {\n  // Slightly lower than default because API docs tend to have repetitive terms (parameter names, HTTP methods, etc.)\n  termFrequency: 0.8,\n  // Lower than default because API documentation pages tend to be longer due to comprehensive endpoint documentation\n  pageLength: 0.6,\n  // Slightly higher than default because in technical documentation, exact matches should be prioritized\n  termSimilarity: 1.2,\n  // Slightly lower than default because API docs might have legitimate repetition of terms\n  termSaturation: 1.2,\n};\n\nconst importPagefind = (basePath?: string): Promise<Pagefind> =>\n  import.meta.env.DEV\n    ? // @ts-expect-error TypeScript can't resolve the import\n      import(/* @vite-ignore */ \"/pagefind/pagefind.js\")\n    : import(/* @vite-ignore */ joinUrl(basePath, \"/pagefind/pagefind.js\"));\n\nconst usePagefind = (options: PagefindOptions) => {\n  const {\n    options: { basePath },\n  } = useZudoku();\n  const { data: pagefind, ...result } = useQuery<Pagefind>({\n    queryKey: [\"pagefind\", options.ranking],\n    retry: false,\n    queryFn: async () => {\n      const pagefind = await importPagefind(basePath);\n      await pagefind.init();\n      await pagefind.options({\n        ranking: {\n          termFrequency:\n            options.ranking?.termFrequency ?? DEFAULT_RANKING.termFrequency,\n          pageLength: options.ranking?.pageLength ?? DEFAULT_RANKING.pageLength,\n          termSimilarity:\n            options.ranking?.termSimilarity ?? DEFAULT_RANKING.termSimilarity,\n          termSaturation:\n            options.ranking?.termSaturation ?? DEFAULT_RANKING.termSaturation,\n        },\n      });\n\n      return pagefind;\n    },\n    enabled: typeof window !== \"undefined\",\n  });\n\n  if (result.isError && result.error.message !== \"NOT_BUILT_YET\") {\n    // biome-ignore lint/suspicious/noConsole: Logging allowed here\n    console.error(result.error);\n  }\n\n  return { ...result, pagefind };\n};\n\nexport const PagefindSearch = ({\n  isOpen,\n  onClose,\n  options,\n}: {\n  isOpen: boolean;\n  onClose: () => void;\n  options: PagefindOptions;\n}) => {\n  const { pagefind, error, isError } = usePagefind(options);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const auth = useAuthState();\n  const context = useZudoku();\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const { data: searchResults } = useQuery({\n    queryKey: [\"pagefind-search\", searchTerm, auth.isAuthenticated],\n    queryFn: async () => {\n      const filters = auth.isAuthenticated\n        ? undefined\n        : { not: { section: SEARCH_PROTECTED_SECTION } };\n\n      const search = await pagefind?.search(searchTerm, { filters });\n      if (!search) return [];\n      return getResults({ search, options, auth, context });\n    },\n    placeholderData: keepPreviousData,\n    enabled: !!pagefind && !!searchTerm,\n  });\n\n  return (\n    <CommandDialog\n      command={{ shouldFilter: false }}\n      content={{ className: \"max-w-[750px]\" }}\n      open={isOpen}\n      onOpenChange={onClose}\n    >\n      <VisuallyHidden>\n        <DialogTitle>Search</DialogTitle>\n      </VisuallyHidden>\n      <CommandInput\n        ref={inputRef}\n        placeholder=\"Search...\"\n        value={searchTerm}\n        onValueChange={setSearchTerm}\n        disabled={isError}\n      />\n      <CommandEmpty>\n        {searchTerm ? (\n          <div className=\"flex flex-col items-center\">\n            No results found.\n            <Button\n              variant=\"link\"\n              onClick={() => {\n                setSearchTerm(\"\");\n                inputRef.current?.focus();\n              }}\n            >\n              Clear search\n            </Button>\n          </div>\n        ) : (\n          \"Start typing to search\"\n        )}\n      </CommandEmpty>\n      {isError ? (\n        <div className=\"p-4 text-sm\">\n          {error.message === \"NOT_BUILT_YET\" ? (\n            <Callout type=\"info\">\n              Search is currently not available in development mode by default.\n              <br />\n              To still use search in development, run <code>zudoku build</code>{\" \"}\n              and copy the <code>dist/pagefind</code> directory to your{\" \"}\n              <code>public</code> directory.\n            </Callout>\n          ) : (\n            \"An error occurred while loading search.\"\n          )}\n        </div>\n      ) : (\n        <ResultList\n          basePath={context.options.basePath}\n          searchResults={searchResults ?? []}\n          searchTerm={searchTerm}\n          onClose={onClose}\n          maxSubResults={options.maxSubResults}\n        />\n      )}\n    </CommandDialog>\n  );\n};\n","import type { ZudokuConfig } from \"../../../config/validators/validate.js\";\nimport { ClientOnly } from \"../../components/ClientOnly.js\";\nimport type { ZudokuPlugin } from \"../../core/plugins.js\";\nimport { PagefindSearch } from \"./PagefindSearch.js\";\n\nexport type PagefindOptions = Extract<\n  ZudokuConfig[\"search\"],\n  { type: \"pagefind\" }\n>;\n\nexport const pagefindSearchPlugin = (\n  options: PagefindOptions,\n): ZudokuPlugin => {\n  return {\n    renderSearch: ({ isOpen, onClose }) => (\n      <ClientOnly>\n        <PagefindSearch isOpen={isOpen} onClose={onClose} options={options} />\n      </ClientOnly>\n    ),\n  };\n};\n"],"names":["stylesMap","InfoIcon","LightbulbIcon","AlertTriangleIcon","ShieldAlertIcon","Callout","type","children","title","className","icon","border","bg","iconColor","titleColor","textColor","Icon","jsxs","cn","jsx","getResults","search","options","auth","context","maxResults","transformFn","transformedResults","generator","searchResultGenerator","result","processedCount","batch","batchData","transformed","sortSubResults","a","b","aScore","sum","loc","hoverClassname","ResultList","basePath","searchResults","searchTerm","onClose","maxSubResults","navigate","useNavigate","commandListRef","useRef","useLayoutEffect","stripBasePath","url","joinUrl","CommandList","CommandGroup","CommandItem","Link","BracketsIcon","FileTextIcon","subResult","DEFAULT_RANKING","importPagefind","usePagefind","useZudoku","pagefind","useQuery","PagefindSearch","isOpen","error","isError","setSearchTerm","useState","useAuthState","inputRef","filters","SEARCH_PROTECTED_SECTION","keepPreviousData","CommandDialog","VisuallyHidden","DialogTitle","CommandInput","CommandEmpty","Button","pagefindSearchPlugin","ClientOnly"],"mappings":"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"}