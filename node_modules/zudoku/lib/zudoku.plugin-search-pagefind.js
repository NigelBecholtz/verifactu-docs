import { j as e } from "./jsx-runtime-DywqP_6a.js";
import { C as v } from "./ClientOnly-E7hGysn1.js";
import { VisuallyHidden as I } from "@radix-ui/react-visually-hidden";
import { j as k, d as j, f as C, l as N } from "./ZudokuContext-BcqSiygJ.js";
import { useRef as S, useLayoutEffect as L, useState as T } from "react";
import { B as E } from "./Button-DTDRi4CT.js";
import { ShieldAlertIcon as R, AlertTriangleIcon as F, InfoIcon as f, LightbulbIcon as q, BracketsIcon as z, FileTextIcon as A } from "lucide-react";
import { c as u } from "./cn-dYga0KKN.js";
import { C as P, a as b, b as h, c as $, d as D, e as B } from "./Command-TEBTONf1.js";
import { c as O } from "./Dialog-VIMic7xI.js";
import { u as U } from "./hook-BkLXq8pm.js";
import { S as G } from "./RouteGuard-dji1UEYe.js";
import { b as H, L as p } from "./chunk-PVWAREVJ-BO6B-RAk.js";
const K = {
  note: {
    border: "border-gray-300 dark:border-zinc-800",
    bg: "bg-gray-100 dark:bg-zinc-800/50",
    iconColor: "text-gray-600 dark:text-zinc-300",
    titleColor: "text-gray-600 dark:text-zinc-300",
    textColor: "text-gray-600 dark:text-zinc-300",
    Icon: f
  },
  tip: {
    border: "border-green-500 dark:border-green-800",
    bg: "bg-green-200/25 dark:bg-green-950/70",
    iconColor: "text-green-600 dark:text-green-200",
    titleColor: "text-green-700 dark:text-green-200",
    textColor: "text-green-600 dark:text-green-50",
    Icon: q
  },
  info: {
    border: "border-blue-400 dark:border-blue-900/60",
    bg: "bg-blue-50 dark:bg-blue-950/40",
    iconColor: "text-blue-400 dark:text-blue-200",
    titleColor: "text-blue-700 dark:text-blue-200",
    textColor: "text-blue-600 dark:text-blue-100",
    Icon: f
  },
  caution: {
    border: "border-yellow-400 dark:border-yellow-400/25",
    bg: "bg-yellow-100/60 dark:bg-yellow-400/10",
    iconColor: "text-yellow-500 dark:text-yellow-300",
    titleColor: "text-yellow-600 dark:text-yellow-300",
    textColor: "text-yellow-700 dark:text-yellow-200",
    Icon: F
  },
  danger: {
    border: "border-rose-400 dark:border-rose-800",
    bg: "bg-rose-50 dark:bg-rose-950/40",
    iconColor: "text-rose-400 dark:text-rose-300",
    titleColor: "text-rose-800 dark:text-rose-300",
    textColor: "text-rose-700 dark:text-rose-100",
    Icon: R
  }
}, M = ({
  type: o,
  children: n,
  title: t,
  className: s,
  icon: a = !0
}) => {
  const { border: l, bg: i, iconColor: d, titleColor: r, textColor: c, Icon: m } = K[o];
  return /* @__PURE__ */ e.jsxs(
    "div",
    {
      className: u(
        "not-prose rounded-md border p-4 text-md my-2",
        a && "grid grid-cols-[min-content_1fr] items-baseline grid-rows-[fit-content_1fr] gap-x-4 gap-y-2",
        !a && t && "flex flex-col gap-2",
        "[&_a]:underline [&_a]:decoration-current [&_a]:decoration-from-font [&_a]:underline-offset-4 hover:[&_a]:decoration-1",
        "[&_.code-block-wrapper]:border",
        "[&_ul]:list-disc [&_ol]:list-decimal [&_ul]:ps-4 [&_ul>li]:ps-1 [&_ul>li]:my-1",
        a && t && "items-center",
        l,
        i,
        s
      ),
      children: [
        a && /* @__PURE__ */ e.jsx(
          m,
          {
            className: u(t ? "align-middle" : "translate-y-1", d),
            size: 20,
            "aria-hidden": "true"
          }
        ),
        t && /* @__PURE__ */ e.jsx("h3", { className: u("font-medium", r), children: t }),
        /* @__PURE__ */ e.jsx(
          "div",
          {
            className: u(
              a && "col-start-2",
              !t && a && "row-start-1",
              c,
              "overflow-x-auto"
            ),
            children: n
          }
        )
      ]
    }
  );
}, V = async ({
  search: o,
  options: n,
  auth: t,
  context: s
}) => {
  const a = n.maxResults ?? 10, l = n.transformResults ?? (() => !0), i = [], d = Y({
    search: o,
    transformFn: l,
    auth: t,
    context: s
  });
  for await (const r of d)
    if (i.push(r), i.length >= a) break;
  return i;
};
async function* Y({
  search: o,
  transformFn: n,
  auth: t,
  context: s
}) {
  let l = 0;
  for (; l < o.results.length; ) {
    const i = o.results.slice(
      l,
      l + 5
    );
    l += i.length;
    const d = await Promise.all(i.map((r) => r.data()));
    for (const r of d) {
      const c = n({ result: r, auth: t, context: s });
      c === !1 || (c === !0 || c == null ? yield r : yield c);
    }
  }
}
const Q = (o, n) => {
  const t = o.weighted_locations.reduce(
    (a, l) => a + l.balanced_score,
    0
  );
  return n.weighted_locations.reduce(
    (a, l) => a + l.balanced_score,
    0
  ) - t;
}, y = "cursor-pointer border border-transparent data-[selected=true]:border-border", W = ({
  basePath: o,
  searchResults: n,
  searchTerm: t,
  onClose: s,
  maxSubResults: a = 4
}) => {
  const l = H(), i = S(null);
  L(() => {
    requestIdleCallback(() => {
      i.current?.scrollTo({ top: 0 });
    });
  }, [t]);
  const d = (r) => o && r.startsWith(o) ? k(r.slice(o.length)) : r;
  return /* @__PURE__ */ e.jsxs(P, { className: "max-h-[450px]", ref: i, children: [
    t && n.length > 0 && /* @__PURE__ */ e.jsx(
      b,
      {
        className: "text-sm text-muted-foreground",
        heading: `${n.length} results for "${t}"`
      }
    ),
    t && n.map((r) => /* @__PURE__ */ e.jsxs(
      b,
      {
        children: [
          /* @__PURE__ */ e.jsx(
            h,
            {
              asChild: !0,
              value: `${r.meta.title}-${r.url}`,
              className: y,
              onSelect: () => {
                l(d(r.url)), s();
              },
              children: /* @__PURE__ */ e.jsxs(p, { to: d(r.url), children: [
                r.meta.section === "openapi" ? /* @__PURE__ */ e.jsx(z, {}) : /* @__PURE__ */ e.jsx(A, {}),
                r.meta.title
              ] })
            }
          ),
          r.sub_results.sort(Q).slice(0, a).map((c) => /* @__PURE__ */ e.jsx(
            h,
            {
              asChild: !0,
              value: `sub-${r.meta.title}-${c.url}`,
              className: y,
              onSelect: () => {
                l(d(c.url)), s();
              },
              children: /* @__PURE__ */ e.jsx(p, { to: d(c.url), onClick: s, children: /* @__PURE__ */ e.jsxs("div", { className: "flex flex-col items-start gap-2 ms-2.5 ps-5 border-l border-muted-foreground/50", children: [
                /* @__PURE__ */ e.jsx("span", { className: "font-bold", children: c.title }),
                /* @__PURE__ */ e.jsx(
                  "span",
                  {
                    className: "text-[13px] [&_mark]:bg-primary [&_mark]:text-primary-foreground",
                    dangerouslySetInnerHTML: { __html: c.excerpt }
                  }
                )
              ] }) })
            },
            `sub-${r.meta.title}-${c.url}`
          ))
        ]
      },
      [r.meta.title ?? r.excerpt, r.url].join("-")
    ))
  ] });
}, x = {
  // Slightly lower than default because API docs tend to have repetitive terms (parameter names, HTTP methods, etc.)
  termFrequency: 0.8,
  // Lower than default because API documentation pages tend to be longer due to comprehensive endpoint documentation
  pageLength: 0.6,
  // Slightly higher than default because in technical documentation, exact matches should be prioritized
  termSimilarity: 1.2,
  // Slightly lower than default because API docs might have legitimate repetition of terms
  termSaturation: 1.2
}, Z = (o) => import(
  /* @vite-ignore */
  k(o, "/pagefind/pagefind.js")
), J = (o) => {
  const {
    options: { basePath: n }
  } = j(), { data: t, ...s } = C({
    queryKey: ["pagefind", o.ranking],
    retry: !1,
    queryFn: async () => {
      const a = await Z(n);
      return await a.init(), await a.options({
        ranking: {
          termFrequency: o.ranking?.termFrequency ?? x.termFrequency,
          pageLength: o.ranking?.pageLength ?? x.pageLength,
          termSimilarity: o.ranking?.termSimilarity ?? x.termSimilarity,
          termSaturation: o.ranking?.termSaturation ?? x.termSaturation
        }
      }), a;
    },
    enabled: typeof window < "u"
  });
  return s.isError && s.error.message !== "NOT_BUILT_YET" && console.error(s.error), { ...s, pagefind: t };
}, X = ({
  isOpen: o,
  onClose: n,
  options: t
}) => {
  const { pagefind: s, error: a, isError: l } = J(t), [i, d] = T(""), r = U(), c = j(), m = S(null), { data: _ } = C({
    queryKey: ["pagefind-search", i, r.isAuthenticated],
    queryFn: async () => {
      const w = r.isAuthenticated ? void 0 : { not: { section: G } }, g = await s?.search(i, { filters: w });
      return g ? V({ search: g, options: t, auth: r, context: c }) : [];
    },
    placeholderData: N,
    enabled: !!s && !!i
  });
  return /* @__PURE__ */ e.jsxs(
    $,
    {
      command: { shouldFilter: !1 },
      content: { className: "max-w-[750px]" },
      open: o,
      onOpenChange: n,
      children: [
        /* @__PURE__ */ e.jsx(I, { children: /* @__PURE__ */ e.jsx(O, { children: "Search" }) }),
        /* @__PURE__ */ e.jsx(
          D,
          {
            ref: m,
            placeholder: "Search...",
            value: i,
            onValueChange: d,
            disabled: l
          }
        ),
        /* @__PURE__ */ e.jsx(B, { children: i ? /* @__PURE__ */ e.jsxs("div", { className: "flex flex-col items-center", children: [
          "No results found.",
          /* @__PURE__ */ e.jsx(
            E,
            {
              variant: "link",
              onClick: () => {
                d(""), m.current?.focus();
              },
              children: "Clear search"
            }
          )
        ] }) : "Start typing to search" }),
        l ? /* @__PURE__ */ e.jsx("div", { className: "p-4 text-sm", children: a.message === "NOT_BUILT_YET" ? /* @__PURE__ */ e.jsxs(M, { type: "info", children: [
          "Search is currently not available in development mode by default.",
          /* @__PURE__ */ e.jsx("br", {}),
          "To still use search in development, run ",
          /* @__PURE__ */ e.jsx("code", { children: "zudoku build" }),
          " ",
          "and copy the ",
          /* @__PURE__ */ e.jsx("code", { children: "dist/pagefind" }),
          " directory to your",
          " ",
          /* @__PURE__ */ e.jsx("code", { children: "public" }),
          " directory."
        ] }) : "An error occurred while loading search." }) : /* @__PURE__ */ e.jsx(
          W,
          {
            basePath: c.options.basePath,
            searchResults: _ ?? [],
            searchTerm: i,
            onClose: n,
            maxSubResults: t.maxSubResults
          }
        )
      ]
    }
  );
}, xe = (o) => ({
  renderSearch: ({ isOpen: n, onClose: t }) => /* @__PURE__ */ e.jsx(v, { children: /* @__PURE__ */ e.jsx(X, { isOpen: n, onClose: t, options: o }) })
});
export {
  xe as pagefindSearchPlugin
};
//# sourceMappingURL=zudoku.plugin-search-pagefind.js.map
