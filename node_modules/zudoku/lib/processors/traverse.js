const u = (y, s, c = []) => {
  const r = s(y, c);
  if (typeof r != "object" || r === null)
    return r;
  const t = Array.isArray(r) ? [] : {};
  for (const [o, e] of Object.entries(r)) {
    const l = [...c, o];
    Array.isArray(e) ? t[o] = e.map(
      (n, f) => typeof n == "object" && n != null ? u(n, s, [...l, f.toString()]) : n
    ) : typeof e == "object" && e != null ? t[o] = u(e, s, l) : t[o] = e;
  }
  return t;
};
export {
  u as traverse
};
//# sourceMappingURL=traverse.js.map
