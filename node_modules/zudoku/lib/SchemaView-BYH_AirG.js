import { j as r } from "./jsx-runtime-DywqP_6a.js";
import { ChevronUpIcon as E, ChevronDownIcon as A, ChevronsLeftRightIcon as R, CircleFadingPlusIcon as B, SquareMinusIcon as M, SquarePlusIcon as L, MinusIcon as T, PlusIcon as D, RefreshCcwDotIcon as F, InfoIcon as G } from "lucide-react";
import { S as m, I as w, M as P } from "./ErrorAlert-xpVkFS_n.js";
import { Card as f } from "./ui/Card.js";
import { useState as u, isValidElement as J, useCallback as U } from "react";
import { B as _ } from "./Button-DTDRi4CT.js";
import { c as j } from "./cn-dYga0KKN.js";
import * as d from "@radix-ui/react-collapsible";
import { Button as K } from "./ui/Button.js";
import { C as W } from "./circular-06Yrxzsw.js";
import { Badge as Q } from "./ui/Badge.js";
const X = (e, s) => e.reduce(
  (t, i) => {
    const o = s(i);
    return t[o] || (t[o] = []), t[o].push(i), t;
  },
  {}
), S = ({
  schema: e,
  hideDescription: s = !1
}) => /* @__PURE__ */ r.jsx("div", { className: "flex flex-col gap-1 text-xs", children: /* @__PURE__ */ r.jsxs("div", { children: [
  /* @__PURE__ */ r.jsx("span", { className: "text-muted-foreground", children: "Const value: " }),
  /* @__PURE__ */ r.jsx(m, { className: "border rounded px-1 font-mono", children: e.const }),
  !s && e.description && /* @__PURE__ */ r.jsx("div", { className: "text-muted-foreground", children: e.description })
] }) }), g = ({
  values: e,
  className: s,
  maxVisibleValues: t = 8
}) => {
  const [i, o] = u(!1);
  if (!e.length) return null;
  const n = e.length > t, l = n && !i ? e.slice(0, t) : e;
  return /* @__PURE__ */ r.jsxs("div", { className: j("flex flex-wrap gap-1.5 text-xs", s), children: [
    /* @__PURE__ */ r.jsx("span", { className: "text-muted-foreground", children: "Enum values: " }),
    l.map((c) => /* @__PURE__ */ r.jsx("div", { children: /* @__PURE__ */ r.jsx(m, { className: "border rounded-sm px-1 font-mono", children: c }) }, c)),
    n && /* @__PURE__ */ r.jsx(
      _,
      {
        variant: "ghost",
        size: "sm",
        className: "h-fit px-0",
        onClick: () => o(!i),
        children: i ? /* @__PURE__ */ r.jsxs("div", { className: "flex items-center gap-1", children: [
          /* @__PURE__ */ r.jsx(E, { size: 12 }),
          /* @__PURE__ */ r.jsx("span", { className: "text-muted-foreground", children: "show less" })
        ] }) : /* @__PURE__ */ r.jsxs("div", { className: "flex items-center gap-1", children: [
          /* @__PURE__ */ r.jsx(A, { size: 12 }),
          /* @__PURE__ */ r.jsxs("span", { className: "text-muted-foreground", children: [
            "show ",
            e.length - t,
            " more"
          ] })
        ] })
      }
    )
  ] });
}, Y = ({ pattern: e }) => {
  const [s, t] = u(!1), i = e.length > 20, o = i ? `${e.slice(0, 20)}…` : e;
  return /* @__PURE__ */ r.jsxs(
    w,
    {
      className: j("text-xs", i && "cursor-pointer"),
      onClick: () => t(!s),
      selectOnClick: !1,
      children: [
        s ? e : o,
        i && /* @__PURE__ */ r.jsx("button", { type: "button", className: "p-1 translate-y-[2px]", children: !s && /* @__PURE__ */ r.jsx(R, { size: 12 }) })
      ]
    }
  );
}, Z = (e) => e ? [
  e.type === "array" && e.items.type ? Array.isArray(e.items.type) ? `(${e.items.type.join(" | ")})[]` : `${e.items.type}[]` : Array.isArray(e.type) ? e.type.join(" | ") : e.type,
  e.enum && "enum",
  e.const && "const",
  e.format,
  e.minimum !== void 0 && `min: ${e.minimum}`,
  e.maximum !== void 0 && `max: ${e.maximum}`,
  e.minLength !== void 0 && `minLength: ${e.minLength}`,
  e.maxLength !== void 0 && `maxLength: ${e.maxLength}`,
  e.minItems !== void 0 && `minItems: ${e.minItems}`,
  e.maxItems !== void 0 && `maxItems: ${e.maxItems}`,
  e.minProperties !== void 0 && `minProps: ${e.minProperties}`,
  e.maxProperties !== void 0 && `maxProps: ${e.maxProperties}`,
  e.uniqueItems && "unique",
  e.readOnly && "readOnly",
  e.writeOnly && "writeOnly",
  e.deprecated && "deprecated",
  e.pattern && /* @__PURE__ */ r.jsxs(r.Fragment, { children: [
    "pattern: ",
    /* @__PURE__ */ r.jsx(Y, { pattern: e.pattern })
  ] })
] : [], b = ({
  schema: e,
  extraItems: s = [],
  className: t
}) => {
  const i = [...Z(e), ...s].flatMap(
    (o) => typeof o == "string" || J(o) ? o : []
  );
  return /* @__PURE__ */ r.jsx("span", { className: t, children: i.map((o, n) => (
    // biome-ignore lint/suspicious/noArrayIndexKey: index should be stable
    /* @__PURE__ */ r.jsxs("span", { className: "text-muted-foreground", children: [
      o,
      n < i.length - 1 && /* @__PURE__ */ r.jsx("span", { className: "text-muted-foreground/50", children: " · " })
    ] }, n)
  )) });
}, H = ({
  isOpen: e,
  className: s,
  schemeName: t
}) => /* @__PURE__ */ r.jsx(
  "div",
  {
    className: j(
      "text-green-500 dark:text-green-300/60",
      "relative text-sm flex py-2",
      "before:border-l before:absolute before:-top-2 before:-bottom-2 before:border-border before:border-dashed before:content-['']",
      s
    ),
    children: /* @__PURE__ */ r.jsxs("div", { className: "-translate-x-[7px] flex gap-1 items-center", children: [
      /* @__PURE__ */ r.jsx(B, { size: 16, className: "fill-card" }),
      /* @__PURE__ */ r.jsx(
        "div",
        {
          className: j(
            "translate-y-px mx-px opacity-0 group-hover:opacity-100 transition",
            !e && "-rotate-90"
          ),
          children: /* @__PURE__ */ r.jsx(A, { size: 16 })
        }
      ),
      /* @__PURE__ */ r.jsx("span", { className: "text-sm text-foreground", children: t })
    ] })
  }
), ee = (e) => {
  const [s, t] = u(!0);
  return /* @__PURE__ */ r.jsxs(
    d.Root,
    {
      open: s,
      onOpenChange: () => t((i) => !i),
      className: "group",
      children: [
        /* @__PURE__ */ r.jsx(d.Trigger, { children: /* @__PURE__ */ r.jsx(H, { isOpen: s, schemeName: e.schema.title }) }),
        !s && /* @__PURE__ */ r.jsx("div", { className: "wavy-line bg-border translate-y-1" }),
        /* @__PURE__ */ r.jsx(d.Content, { children: /* @__PURE__ */ r.jsx(p, { schema: e.schema }) })
      ]
    }
  );
}, $ = ({
  schema: e,
  cardHeader: s
}) => {
  const [t, i] = u(!0), o = U(() => i((n) => !n), []);
  return e.allOf ? /* @__PURE__ */ r.jsx(d.Root, { open: t, onOpenChange: o, asChild: !0, children: /* @__PURE__ */ r.jsxs(f, { className: "overflow-hidden", children: [
    s,
    /* @__PURE__ */ r.jsxs(d.Trigger, { className: "flex gap-2 items-center py-2 px-6 w-full text-sm text-muted-foreground -translate-x-1.5", children: [
      t ? /* @__PURE__ */ r.jsx(M, { size: 14 }) : /* @__PURE__ */ r.jsx(L, { size: 14 }),
      /* @__PURE__ */ r.jsx("span", { children: "All of" })
    ] }),
    /* @__PURE__ */ r.jsx(d.Content, { className: "pb-4 px-6", children: e.allOf.map((n, l) => (
      // biome-ignore lint/suspicious/noArrayIndexKey: Index needed for key
      /* @__PURE__ */ r.jsx(ee, { schema: n }, l)
    )) })
  ] }) }) : null;
}, N = ({
  schema: e
}) => {
  const s = e.examples?.at(0), t = e.default;
  return s === void 0 && t === void 0 ? null : /* @__PURE__ */ r.jsxs("div", { className: "flex flex-col gap-1 text-xs", children: [
    s !== void 0 && /* @__PURE__ */ r.jsxs("div", { children: [
      /* @__PURE__ */ r.jsx("span", { className: "text-muted-foreground", children: "Example: " }),
      /* @__PURE__ */ r.jsx(m, { className: "border rounded-sm px-1 font-mono", children: typeof s == "object" || typeof s == "boolean" ? JSON.stringify(s) : s })
    ] }),
    t !== void 0 && /* @__PURE__ */ r.jsxs("div", { children: [
      /* @__PURE__ */ r.jsx("span", { className: "text-muted-foreground", children: "Default: " }),
      /* @__PURE__ */ r.jsx(m, { className: "border rounded-sm px-1 font-mono", children: typeof t == "object" || typeof t == "boolean" ? JSON.stringify(t) : t })
    ] })
  ] });
}, k = (e) => typeof e == "string" && ["string", "number", "boolean", "integer", "null"].includes(e) || Array.isArray(e) && e.every(k), h = (e) => e.type === "array" || // schema.type might be an array of types, so we need to check if "array" is one of them
Array.isArray(e.type) && e.type.includes("array"), O = (e) => e && (e.type === "object" && Object.keys(e.properties ?? {}).length > 0 || e.type === "array" && typeof e.items == "object" && (!e.items.type || e.items.type === "object")), q = (e) => typeof e == "string" && e.startsWith(W), I = (e) => h(e) && "items" in e && q(e.items), re = (e) => typeof e == "string" ? e.split(":")[1] : void 0, C = ({ circularProp: e }) => /* @__PURE__ */ r.jsxs(
  w,
  {
    className: "inline-flex items-center gap-1.5 italic text-xs translate-y-0.5",
    selectOnClick: !1,
    children: [
      /* @__PURE__ */ r.jsx(F, { size: 13 }),
      /* @__PURE__ */ r.jsx("span", { children: e ? `${e} (circular)` : "circular" })
    ]
  }
), se = ({
  name: e,
  schema: s,
  group: t,
  defaultOpen: i = !1,
  showCollapseButton: o = !0
}) => {
  const [n, l] = u(i);
  if (q(s))
    return /* @__PURE__ */ r.jsx("li", { className: "p-4 bg-border/20 hover:bg-border/30", children: /* @__PURE__ */ r.jsxs("div", { className: "flex flex-col gap-2.5 justify-between text-sm", children: [
      /* @__PURE__ */ r.jsxs("div", { className: "space-x-2 rtl:space-x-reverse", children: [
        /* @__PURE__ */ r.jsx("code", { children: e }),
        /* @__PURE__ */ r.jsx(
          b,
          {
            schema: s,
            extraItems: [/* @__PURE__ */ r.jsx(C, {}, "circular-ref")]
          }
        )
      ] }),
      /* @__PURE__ */ r.jsx(N, { schema: s })
    ] }) });
  const c = !!((s.allOf || s.anyOf || s.oneOf || O(s) || h(s) && "items" in s && O(s.items) || s.additionalProperties) && !I(s));
  return /* @__PURE__ */ r.jsx("li", { className: "p-4 bg-border/20 hover:bg-border/30", children: /* @__PURE__ */ r.jsxs("div", { className: "flex flex-col gap-2.5 justify-between text-sm", children: [
    /* @__PURE__ */ r.jsxs("div", { className: "space-x-2 rtl:space-x-reverse", children: [
      /* @__PURE__ */ r.jsx(m, { asChild: !0, children: /* @__PURE__ */ r.jsx("code", { children: e }) }),
      /* @__PURE__ */ r.jsx(
        b,
        {
          schema: s,
          extraItems: [
            t !== "optional" && /* @__PURE__ */ r.jsx("span", { className: "text-primary", children: "required" }),
            I(s) && /* @__PURE__ */ r.jsx(
              C,
              {
                circularProp: re(s.items)
              }
            )
          ]
        }
      )
    ] }),
    s.description && /* @__PURE__ */ r.jsx(
      P,
      {
        className: "text-sm leading-normal",
        content: s.description
      }
    ),
    s.type === "array" && "items" in s && s.items.enum && /* @__PURE__ */ r.jsx(g, { values: s.items.enum }),
    s.const && /* @__PURE__ */ r.jsx(S, { schema: s, hideDescription: !0 }),
    s.enum && /* @__PURE__ */ r.jsx(g, { values: s.enum }),
    /* @__PURE__ */ r.jsx(N, { schema: s }),
    c && /* @__PURE__ */ r.jsxs(
      d.Root,
      {
        defaultOpen: i,
        open: n,
        onOpenChange: () => l(!n),
        children: [
          o && /* @__PURE__ */ r.jsx(d.Trigger, { asChild: !0, children: /* @__PURE__ */ r.jsxs(K, { variant: "expand", size: "sm", children: [
            n ? /* @__PURE__ */ r.jsx(T, { size: 12 }) : /* @__PURE__ */ r.jsx(D, { size: 12 }),
            n ? "Hide properties" : "Show properties"
          ] }) }),
          /* @__PURE__ */ r.jsx(d.Content, { children: /* @__PURE__ */ r.jsx("div", { className: "mt-2", children: s.allOf ? /* @__PURE__ */ r.jsx($, { schema: s }) : s.anyOf || s.oneOf || s.type === "object" ? /* @__PURE__ */ r.jsx(p, { schema: s }) : h(s) && "items" in s ? /* @__PURE__ */ r.jsx(p, { schema: s.items }) : null }) })
        ]
      }
    )
  ] }) });
}, V = (e) => {
  const s = e.oneOf ?? e.anyOf ?? [];
  return e.properties && Object.keys(e.properties).length > 0 ? s.map((t) => !t.properties && !t.type && !t.allOf && !t.oneOf && !t.anyOf ? {
    ...t,
    type: "object",
    properties: e.properties,
    required: t.required ?? e.required
  } : t) : s;
}, te = (e) => {
  if (Array.isArray(e.oneOf)) return "exactly-one";
  const s = e.discriminator?.propertyName;
  if (!s) return "at-least-one";
  const t = V(e), i = /* @__PURE__ */ new Set();
  for (const o of t) {
    const n = o.properties?.[s], l = n?.const ?? (Array.isArray(n?.enum) && n.enum.length === 1 ? String(n.enum[0]) : void 0);
    if (l == null || i.has(String(l))) return "at-least-one";
    i.add(String(l));
  }
  return "exactly-one";
}, v = (e, s) => s.title?.trim() || `Variant ${e + 1}`, ne = (e, s) => {
  const t = [];
  e.type && t.push(
    `type = ${Array.isArray(e.type) ? e.type.join("|") : e.type}`
  );
  const i = s?.discriminator?.propertyName;
  if (i) {
    const n = e.properties?.[i], l = n?.const ?? (Array.isArray(n?.enum) && n.enum.length === 1 ? n.enum[0] : void 0);
    l !== void 0 && t.push(`${i}=${JSON.stringify(l)}`);
  }
  const o = (e.required ?? []).filter((n) => n !== i);
  if (o.length) {
    const n = o.slice(0, 3).join(", "), l = o.length > 3 ? ` +${o.length - 3} more` : "";
    t.push(`requires: ${n}${l}`);
  }
  return t;
}, ie = ({
  variants: e,
  schema: s,
  selectedVariant: t,
  onSelectVariant: i
}) => {
  const o = e.map((n, l) => ({
    label: v(l, n),
    guards: ne(n, s)
  }));
  return /* @__PURE__ */ r.jsxs("div", { className: "flex flex-col gap-2 text-sm", children: [
    /* @__PURE__ */ r.jsx("h4", { className: "font-medium", children: "Decision Table" }),
    /* @__PURE__ */ r.jsx("div", { className: "border rounded-md overflow-hidden", children: /* @__PURE__ */ r.jsxs("table", { className: "w-full", children: [
      /* @__PURE__ */ r.jsx("thead", { children: /* @__PURE__ */ r.jsxs("tr", { className: "border-b bg-muted/50", children: [
        /* @__PURE__ */ r.jsx("th", { className: "text-left p-2 font-medium", children: "Variant" }),
        /* @__PURE__ */ r.jsx("th", { className: "text-left p-2 font-medium", children: "Matching Criteria" })
      ] }) }),
      /* @__PURE__ */ r.jsx("tbody", { className: "divide-y", children: o.map((n) => /* @__PURE__ */ r.jsxs("tr", { className: "hover:bg-muted/30", children: [
        /* @__PURE__ */ r.jsx("td", { className: "p-2 font-medium", children: /* @__PURE__ */ r.jsx(
          "button",
          {
            type: "button",
            className: j(
              "hover:underline",
              t === n.label && "text-primary"
            ),
            onClick: () => i(n.label),
            children: n.label
          }
        ) }),
        /* @__PURE__ */ r.jsx("td", { className: "p-2 text-muted-foreground text-xs", children: n.guards.length > 0 ? n.guards.join(" · ") : "No specific criteria" })
      ] }, n.label)) })
    ] }) })
  ] });
}, oe = ({ variant: e }) => /* @__PURE__ */ r.jsxs("div", { className: "space-y-2", children: [
  e.description && /* @__PURE__ */ r.jsx("p", { className: "text-sm text-muted-foreground", children: e.description }),
  /* @__PURE__ */ r.jsx(p, { schema: e })
] }), le = ({
  schema: e,
  cardHeader: s
}) => {
  const t = Array.isArray(e.oneOf) ? "oneOf" : Array.isArray(e.anyOf) ? "anyOf" : void 0, i = t ? V(e) : [], [o, n] = u(
    () => i[0] ? v(0, i[0]) : ""
  );
  if (!t) return null;
  const c = te(e) === "exactly-one" ? /* @__PURE__ */ r.jsxs(r.Fragment, { children: [
    "Exactly one variant ",
    /* @__PURE__ */ r.jsx("b", { children: "must match" }),
    "."
  ] }) : /* @__PURE__ */ r.jsxs(r.Fragment, { children: [
    "At least one variant ",
    /* @__PURE__ */ r.jsx("b", { children: "must match" }),
    ". Multiple variants",
    " ",
    /* @__PURE__ */ r.jsx("i", { children: "may match" }),
    " simultaneously."
  ] }), a = i.findIndex(
    (y, z) => v(z, y) === o
  ), x = a >= 0 ? i[a] : null;
  return /* @__PURE__ */ r.jsxs(f, { className: "overflow-hidden text-sm", children: [
    s,
    /* @__PURE__ */ r.jsxs("div", { className: "flex flex-col gap-4 p-4", children: [
      /* @__PURE__ */ r.jsxs("div", { className: "flex items-center gap-2", children: [
        /* @__PURE__ */ r.jsx(Q, { variant: "outline", children: t }),
        /* @__PURE__ */ r.jsx("div", { className: "flex-1 p-2", children: /* @__PURE__ */ r.jsx("span", { className: "text-sm", children: c }) })
      ] }),
      /* @__PURE__ */ r.jsx(
        ie,
        {
          variants: i,
          schema: e,
          selectedVariant: o,
          onSelectVariant: n
        }
      ),
      /* @__PURE__ */ r.jsxs("strong", { children: [
        "Properties for ",
        o,
        ":"
      ] }),
      x && /* @__PURE__ */ r.jsx(oe, { variant: x })
    ] })
  ] });
}, ae = (e) => e && /* @__PURE__ */ r.jsx(
  P,
  {
    className: "text-sm leading-normal line-clamp-4",
    content: e
  }
), de = (e, s) => /* @__PURE__ */ r.jsxs(f, { className: "overflow-hidden", children: [
  s,
  /* @__PURE__ */ r.jsxs("div", { className: "p-4 space-y-2", children: [
    /* @__PURE__ */ r.jsx("span", { className: "text-sm text-muted-foreground", children: /* @__PURE__ */ r.jsx(b, { schema: e }) }),
    e.enum && /* @__PURE__ */ r.jsx(g, { values: e.enum }),
    ae(e.description),
    /* @__PURE__ */ r.jsx(N, { schema: e })
  ] })
] }), p = ({
  schema: e,
  defaultOpen: s = !1,
  cardHeader: t,
  embedded: i
}) => {
  if (!e || Object.keys(e).length === 0)
    return /* @__PURE__ */ r.jsxs(f, { className: "overflow-hidden", children: [
      t,
      /* @__PURE__ */ r.jsx("div", { className: "text-sm text-muted-foreground italic p-4", children: "No data returned" })
    ] });
  if (e.const)
    return /* @__PURE__ */ r.jsx(S, { schema: e });
  if (Array.isArray(e.oneOf) || Array.isArray(e.anyOf))
    return /* @__PURE__ */ r.jsx(le, { schema: e, cardHeader: t });
  if (Array.isArray(e.allOf))
    return /* @__PURE__ */ r.jsx($, { schema: e, cardHeader: t });
  if (k(e.type))
    return de(e, t);
  if (e.type === "array" && typeof e.items == "object")
    return /* @__PURE__ */ r.jsx(p, { schema: e.items, cardHeader: t });
  if (e.type === "object") {
    const o = X(
      Object.entries(e.properties ?? {}),
      ([a, x]) => x.deprecated ? "deprecated" : e.required?.includes(a) ? "required" : "optional"
    ), n = ["required", "optional", "deprecated"], l = typeof e.additionalProperties == "object" ? /* @__PURE__ */ r.jsx(p, { schema: e.additionalProperties, embedded: !0 }) : e.additionalProperties === !0 ? /* @__PURE__ */ r.jsxs("div", { className: "text-sm p-4 bg-border/20 hover:bg-border/30 flex items-center gap-1", children: [
      /* @__PURE__ */ r.jsx("span", { children: "Additional properties are allowed" }),
      /* @__PURE__ */ r.jsx(
        "a",
        {
          className: "p-0.5 -m-0.5",
          href: "https://swagger.io/docs/specification/v3_0/data-models/dictionaries/",
          rel: "noopener noreferrer",
          target: "_blank",
          children: /* @__PURE__ */ r.jsx(G, { size: 14 })
        }
      )
    ] }) : null, c = i ? "div" : f;
    return /* @__PURE__ */ r.jsxs(c, { className: "divide-y overflow-hidden", children: [
      t,
      n.map(
        (a) => o[a] && /* @__PURE__ */ r.jsx("ul", { className: "divide-y", children: o[a].map(([x, y]) => /* @__PURE__ */ r.jsx(
          se,
          {
            name: x,
            schema: y,
            group: a,
            defaultOpen: s
          },
          x
        )) }, a)
      ),
      l
    ] });
  }
  return null;
};
export {
  g as E,
  b as P,
  p as S,
  N as a,
  q as b,
  X as g,
  h as i
};
//# sourceMappingURL=SchemaView-BYH_AirG.js.map
