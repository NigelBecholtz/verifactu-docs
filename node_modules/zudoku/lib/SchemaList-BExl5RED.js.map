{"version":3,"file":"SchemaList-BExl5RED.js","sources":["../src/lib/plugins/openapi/SchemaList.tsx"],"sourcesContent":["import slugify from \"@sindresorhus/slugify\";\nimport { useSuspenseQuery } from \"@tanstack/react-query\";\nimport { Helmet } from \"@zudoku/react-helmet-async\";\nimport {\n  ChevronRightIcon,\n  ChevronsDownUpIcon,\n  ChevronsUpDownIcon,\n} from \"lucide-react\";\nimport { Button } from \"zudoku/ui/Button.js\";\nimport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n} from \"zudoku/ui/Collapsible.js\";\nimport { CategoryHeading } from \"../../components/CategoryHeading.js\";\nimport { Heading } from \"../../components/Heading.js\";\nimport { Markdown } from \"../../components/Markdown.js\";\nimport { Toc } from \"../../components/navigation/Toc.js\";\nimport { useCreateQuery } from \"./client/useCreateQuery.js\";\nimport { useOasConfig } from \"./context.js\";\nimport { graphql } from \"./graphql/gql.js\";\nimport { SchemaView } from \"./schema/SchemaView.js\";\n\nconst GET_SCHEMAS = graphql(/* GraphQL */ `\n  query GetSchemas($input: JSON!, $type: SchemaType!) {\n    schema(input: $input, type: $type) {\n      title\n      description\n      summary\n      components {\n        schemas {\n          name\n          schema\n          extensions\n        }\n      }\n    }\n  }\n`);\n\nexport function SchemaList() {\n  const { input, type, versions, version, options } = useOasConfig();\n  const schemasQuery = useCreateQuery(GET_SCHEMAS, {\n    input,\n    type,\n  });\n  const { data } = useSuspenseQuery(schemasQuery);\n\n  const schemas = data.schema.components?.schemas ?? [];\n  const hasMultipleVersions = Object.entries(versions).length > 1;\n  const showVersions =\n    options?.showVersionSelect === \"always\" ||\n    (hasMultipleVersions && options?.showVersionSelect !== \"hide\");\n\n  if (!schemas.length) {\n    return (\n      <div>\n        <Helmet>\n          <title>Schemas {showVersions ? version : \"\"}</title>\n          <meta name=\"description\" content=\"List of schemas used by the API.\" />\n        </Helmet>\n        No schemas found\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className=\"grid grid-cols-(--sidecar-grid-cols) gap-8 justify-between\"\n      data-pagefind-filter=\"section:openapi\"\n      data-pagefind-meta=\"section:openapi\"\n    >\n      <Helmet>\n        <title>Schemas {showVersions ? version : \"\"}</title>\n        <meta name=\"description\" content=\"List of schemas used by the API.\" />\n      </Helmet>\n      <div className=\"pt-(--padding-content-top) pb-(--padding-content-bottom)\">\n        <Collapsible className=\"w-full\">\n          <div className=\"flex flex-col gap-y-4 sm:flex-row justify-around items-start sm:items-end\">\n            <div className=\"flex-1\">\n              <CategoryHeading>{data.schema.title}</CategoryHeading>\n              <Heading\n                level={1}\n                id=\"schemas\"\n                registerNavigationAnchor\n                className=\"mb-0\"\n              >\n                Schemas\n                {showVersions && (\n                  <span className=\"text-xl text-muted-foreground ms-1.5\">\n                    ({version})\n                  </span>\n                )}\n              </Heading>\n            </div>\n            {data.schema.description && (\n              <CollapsibleTrigger className=\"flex items-center gap-1 text-sm font-medium text-muted-foreground group\">\n                <span>API information</span>\n                <ChevronsUpDownIcon\n                  className=\"group-data-[state=open]:hidden translate-y-px\"\n                  size={14}\n                />\n                <ChevronsDownUpIcon\n                  className=\"group-data-[state=closed]:hidden translate-y-px\"\n                  size={13}\n                />\n              </CollapsibleTrigger>\n            )}\n          </div>\n          {data.schema.description && (\n            <CollapsibleContent className=\"CollapsibleContent\">\n              <div className=\"mt-4 max-w-full border rounded-sm bg-muted/25\">\n                <Markdown\n                  className=\"max-w-full prose-img:max-w-prose border-border p-3 lg:p-5\"\n                  content={data.schema.description}\n                />\n              </div>\n            </CollapsibleContent>\n          )}\n        </Collapsible>\n        <hr className=\"my-8\" />\n        <div className=\"flex flex-col gap-y-5\">\n          {schemas.map((schema) => (\n            <Collapsible key={schema.name} className=\"group\" defaultOpen>\n              <Heading\n                registerNavigationAnchor\n                level={2}\n                className=\"flex items-center gap-1 justify-between w-fit\"\n                id={slugify(schema.name)}\n              >\n                {schema.name}{\" \"}\n                <CollapsibleTrigger asChild>\n                  <Button variant=\"ghost\" size=\"icon\" className=\"size-6\">\n                    <ChevronRightIcon\n                      size={16}\n                      className=\"group-data-[state=open]:rotate-90 transition cursor-pointer\"\n                    />\n                  </Button>\n                </CollapsibleTrigger>\n              </Heading>\n              <CollapsibleContent className=\"mt-4 CollapsibleContent\">\n                <SchemaView schema={schema.schema} />\n              </CollapsibleContent>\n            </Collapsible>\n          ))}\n        </div>\n      </div>\n      <Toc\n        entries={schemas.map((schema) => ({\n          id: slugify(schema.name),\n          value: schema.name,\n          depth: 1,\n        }))}\n      />\n    </div>\n  );\n}\n"],"names":["GET_SCHEMAS","graphql","SchemaList","input","type","versions","version","options","useOasConfig","schemasQuery","useCreateQuery","data","useSuspenseQuery","schemas","hasMultipleVersions","showVersions","jsxs","Helmet","jsx","Collapsible","CategoryHeading","Heading","CollapsibleTrigger","ChevronsUpDownIcon","ChevronsDownUpIcon","CollapsibleContent","Markdown","schema","slugify","Button","ChevronRightIcon","SchemaView","Toc"],"mappings":"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"}