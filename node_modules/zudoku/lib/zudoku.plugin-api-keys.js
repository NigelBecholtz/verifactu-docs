import { j as e } from "./jsx-runtime-DywqP_6a.js";
import { CircleSlashIcon as z, CheckIcon as ue, XIcon as he, PencilLineIcon as fe, RefreshCwIcon as pe, TrashIcon as me, KeyRoundIcon as xe } from "lucide-react";
import { R as ye } from "./RouterError-D1I15Qyy.js";
import { i as I } from "./invariant-Bm-FVUQE.js";
import { O as ge, b as je } from "./chunk-PVWAREVJ-BO6B-RAk.js";
import { a as Ce } from "./hook-BkLXq8pm.js";
import { D as ve, a as Y } from "./ErrorAlert-xpVkFS_n.js";
import { Button as w } from "./ui/Button.js";
import { d as se, g as ne, b as we } from "./ZudokuContext-BcqSiygJ.js";
import { u as O, A as M, a as q, b as be, S as ke, c as Ne, d as Ke, e as Ee, f as De, g as Z, h as Ae } from "./Select-CegS9OKH.js";
import * as L from "react";
import Pe, { createContext as Q, useRef as E, useLayoutEffect as Ie, useEffect as re, useId as _, useContext as B, useInsertionEffect as Re, useMemo as F, useCallback as Se, Children as Te, isValidElement as Oe, useState as K, forwardRef as Me } from "react";
import { C as qe, a as $e } from "./Card-hTy9PAnh.js";
import { e as H, f as D, D as V, g as G, a as J, b as U, c as W, d as ie } from "./Dialog-VIMic7xI.js";
import { Input as ae } from "./ui/Input.js";
import { c as A } from "./cn-dYga0KKN.js";
import { a as ze } from "./index.esm-DpgNxKa2.js";
import { B as Fe } from "./Button-DTDRi4CT.js";
import { S as Le } from "./Spinner-Cf6E803I.js";
import { useAuth as Qe } from "./zudoku.hooks.js";
const _e = () => {
  const t = Ce();
  return t.isAuthEnabled && t.isPending ? null : t.isAuthenticated ? /* @__PURE__ */ e.jsx(ge, {}) : t.isAuthEnabled ? /* @__PURE__ */ e.jsxs("div", { className: "flex flex-col justify-center gap-2 items-center h-1/2", children: [
    "Please login first to view this page",
    /* @__PURE__ */ e.jsx(w, { onClick: () => t.login(), children: "Login" })
  ] }) : /* @__PURE__ */ e.jsx("div", { className: "flex flex-col justify-center gap-2 items-center h-1/2", children: /* @__PURE__ */ e.jsxs(ve, { className: "max-w-[600px]", children: [
    "Authentication needs to be enabled for API keys to work. Enable it in your Zudoku configuration under ",
    /* @__PURE__ */ e.jsx("code", { children: "authentication" }),
    "."
  ] }) });
}, Be = Q({});
function oe(t) {
  const r = E(null);
  return r.current === null && (r.current = t()), r.current;
}
const He = typeof window < "u", Ve = He ? Ie : re, le = /* @__PURE__ */ Q(null);
function Ge(t) {
  return typeof t == "object" && t !== null;
}
function Je(t) {
  return Ge(t) && "offsetHeight" in t;
}
const Ue = Q({
  transformPagePoint: (t) => t,
  isStatic: !1,
  reducedMotion: "never"
});
class We extends L.Component {
  getSnapshotBeforeUpdate(r) {
    const s = this.props.childRef.current;
    if (s && r.isPresent && !this.props.isPresent) {
      const n = s.offsetParent, i = Je(n) && n.offsetWidth || 0, a = this.props.sizeRef.current;
      a.height = s.offsetHeight || 0, a.width = s.offsetWidth || 0, a.top = s.offsetTop, a.left = s.offsetLeft, a.right = i - a.width - a.left;
    }
    return null;
  }
  /**
   * Required with getSnapshotBeforeUpdate to stop React complaining.
   */
  componentDidUpdate() {
  }
  render() {
    return this.props.children;
  }
}
function Xe({ children: t, isPresent: r, anchorX: s, root: n }) {
  const i = _(), a = E(null), l = E({
    width: 0,
    height: 0,
    top: 0,
    left: 0,
    right: 0
  }), { nonce: u } = B(Ue);
  return Re(() => {
    const { width: h, height: d, top: g, left: f, right: m } = l.current;
    if (r || !a.current || !h || !d)
      return;
    const p = s === "left" ? `left: ${f}` : `right: ${m}`;
    a.current.dataset.motionPopId = i;
    const x = document.createElement("style");
    u && (x.nonce = u);
    const j = n ?? document.head;
    return j.appendChild(x), x.sheet && x.sheet.insertRule(`
          [data-motion-pop-id="${i}"] {
            position: absolute !important;
            width: ${h}px !important;
            height: ${d}px !important;
            ${p}px !important;
            top: ${g}px !important;
          }
        `), () => {
      j.contains(x) && j.removeChild(x);
    };
  }, [r]), e.jsx(We, { isPresent: r, childRef: a, sizeRef: l, children: L.cloneElement(t, { ref: a }) });
}
const Ye = ({ children: t, initial: r, isPresent: s, onExitComplete: n, custom: i, presenceAffectsLayout: a, mode: l, anchorX: u, root: h }) => {
  const d = oe(Ze), g = _();
  let f = !0, m = F(() => (f = !1, {
    id: g,
    initial: r,
    isPresent: s,
    custom: i,
    onExitComplete: (p) => {
      d.set(p, !0);
      for (const x of d.values())
        if (!x)
          return;
      n && n();
    },
    register: (p) => (d.set(p, !1), () => d.delete(p))
  }), [s, d, n]);
  return a && f && (m = { ...m }), F(() => {
    d.forEach((p, x) => d.set(x, !1));
  }, [s]), L.useEffect(() => {
    !s && !d.size && n && n();
  }, [s]), l === "popLayout" && (t = e.jsx(Xe, { isPresent: s, anchorX: u, root: h, children: t })), e.jsx(le.Provider, { value: m, children: t });
};
function Ze() {
  return /* @__PURE__ */ new Map();
}
function et(t = !0) {
  const r = B(le);
  if (r === null)
    return [!0, null];
  const { isPresent: s, onExitComplete: n, register: i } = r, a = _();
  re(() => {
    if (t)
      return i(a);
  }, [t]);
  const l = Se(() => t && n && n(a), [a, n, t]);
  return !s && n ? [!1, l] : [!0];
}
const R = (t) => t.key || "";
function ee(t) {
  const r = [];
  return Te.forEach(t, (s) => {
    Oe(s) && r.push(s);
  }), r;
}
const tt = ({ children: t, custom: r, initial: s = !0, onExitComplete: n, presenceAffectsLayout: i = !0, mode: a = "sync", propagate: l = !1, anchorX: u = "left", root: h }) => {
  const [d, g] = et(l), f = F(() => ee(t), [t]), m = l && !d ? [] : f.map(R), p = E(!0), x = E(f), j = oe(() => /* @__PURE__ */ new Map()), [P, o] = K(f), [c, C] = K(f);
  Ve(() => {
    p.current = !1, x.current = f;
    for (let v = 0; v < c.length; v++) {
      const y = R(c[v]);
      m.includes(y) ? j.delete(y) : j.get(y) !== !0 && j.set(y, !1);
    }
  }, [c, m.length, m.join("-")]);
  const b = [];
  if (f !== P) {
    let v = [...f];
    for (let y = 0; y < c.length; y++) {
      const N = c[y], $ = R(N);
      m.includes($) || (v.splice(y, 0, N), b.push(N));
    }
    return a === "wait" && b.length && (v = b), C(ee(v)), o(f), null;
  }
  process.env.NODE_ENV !== "production" && a === "wait" && c.length > 1 && console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to "wait". This will lead to odd visual behaviour.`);
  const { forceRender: k } = B(Be);
  return e.jsx(e.Fragment, { children: c.map((v) => {
    const y = R(v), N = l && !d ? !1 : f === c || m.includes(y), $ = () => {
      if (j.has(y))
        j.set(y, !0);
      else
        return;
      let X = !0;
      j.forEach((de) => {
        de || (X = !1);
      }), X && (k?.(), C(x.current), l && g?.(), n && n());
    };
    return e.jsx(Ye, { isPresent: N, initial: !p.current || s ? void 0 : !1, custom: r, presenceAffectsLayout: i, mode: a, root: h, onExitComplete: N ? void 0 : $, anchorX: u, children: v }, y);
  }) });
}, ce = Me(
  ({ isPending: t, children: r, className: s, ...n }, i) => /* @__PURE__ */ e.jsxs(
    Fe,
    {
      ref: i,
      disabled: t,
      ...n,
      className: A("relative", s),
      children: [
        t && /* @__PURE__ */ e.jsx("div", { className: "absolute inset-0 grid place-items-center", children: /* @__PURE__ */ e.jsx(Le, {}) }),
        /* @__PURE__ */ e.jsx("span", { className: A("block", t && "invisible"), children: r })
      ]
    }
  )
);
ce.displayName = "ActionButton";
const st = ({
  service: t,
  onOpenChange: r
}) => {
  const s = se(), n = ne(), i = je(), a = ze({
    defaultValues: {
      expiresOn: "30"
    }
  }), l = Qe(), u = O({
    mutationFn: ({ description: h, expiresOn: d }) => {
      if (!t.createKey)
        throw new Error("createKey not implemented");
      const g = d !== "never" ? nt(Number(d)) : void 0;
      return t.createKey({
        apiKey: {
          description: h || "Secret Key",
          expiresOn: g
        },
        context: s,
        auth: l
      });
    },
    onSuccess: async () => {
      await n.invalidateQueries({ queryKey: ["api-keys"] }), await i("/settings/api-keys/");
    }
  });
  return t.createKey ? /* @__PURE__ */ e.jsxs(
    "form",
    {
      onSubmit: a.handleSubmit(
        (h) => u.mutate(
          { ...h },
          {
            onSuccess: () => r(!1)
          }
        )
      ),
      children: [
        u.error && /* @__PURE__ */ e.jsxs(M, { variant: "destructive", className: "mb-4", children: [
          /* @__PURE__ */ e.jsx(q, { children: "Error" }),
          /* @__PURE__ */ e.jsx(be, { children: u.error.message })
        ] }),
        /* @__PURE__ */ e.jsxs("div", { className: "flex gap-2 flex-col text-sm font-medium", children: [
          "Name",
          /* @__PURE__ */ e.jsx(ae, { ...a.register("description") }),
          "Expiration",
          /* @__PURE__ */ e.jsxs(
            ke,
            {
              onValueChange: (h) => a.setValue("expiresOn", h),
              defaultValue: a.getValues("expiresOn"),
              children: [
                /* @__PURE__ */ e.jsx(Ne, { children: /* @__PURE__ */ e.jsx(Ke, {}) }),
                /* @__PURE__ */ e.jsx(Ee, { children: /* @__PURE__ */ e.jsxs(De, { children: [
                  [7, 30, 60, 90].map((h) => /* @__PURE__ */ e.jsxs(Z, { value: String(h), children: [
                    h,
                    " days"
                  ] }, h)),
                  /* @__PURE__ */ e.jsx(Z, { value: "never", children: "Never" })
                ] }) })
              ]
            }
          ),
          /* @__PURE__ */ e.jsxs(H, { children: [
            /* @__PURE__ */ e.jsx(D, { asChild: !0, children: /* @__PURE__ */ e.jsx(w, { variant: "outline", children: "Cancel" }) }),
            /* @__PURE__ */ e.jsx(ce, { isPending: u.isPending, children: "Generate Key" })
          ] })
        ] })
      ]
    }
  ) : null;
}, nt = (t) => {
  const r = /* @__PURE__ */ new Date();
  return r.setDate(r.getDate() + t), r.toISOString();
}, te = ({
  service: t,
  isOpen: r,
  onOpenChange: s,
  trigger: n,
  buttonVariant: i = "outline"
}) => {
  const a = /* @__PURE__ */ e.jsx(w, { variant: i, children: "Create API Key" });
  return /* @__PURE__ */ e.jsxs(V, { open: r, onOpenChange: s, children: [
    /* @__PURE__ */ e.jsx(G, { asChild: !0, children: n ?? a }),
    /* @__PURE__ */ e.jsxs(J, { children: [
      /* @__PURE__ */ e.jsx(U, { children: /* @__PURE__ */ e.jsx(W, { children: "Create API Key" }) }),
      /* @__PURE__ */ e.jsx(st, { service: t, onOpenChange: s })
    ] })
  ] });
}, rt = ({ service: t }) => {
  const r = se(), s = ne(), [n, i] = K(
    null
  ), [a, l] = K(""), { data: u, isFetching: h } = we({
    queryFn: () => t.getConsumers(r),
    queryKey: ["api-keys"],
    retry: !1
  }), [d, g] = K(!1), f = O({
    mutationFn: ({
      consumerId: o,
      keyId: c
    }) => {
      if (!t.deleteKey)
        throw new Error("deleteKey not implemented");
      return t.deleteKey(o, c, r);
    },
    onMutate: async ({ consumerId: o, keyId: c }) => {
      await s.cancelQueries({ queryKey: ["api-keys"] });
      const C = s.getQueryData([
        "api-keys"
      ]);
      return s.setQueryData(["api-keys"], (b) => b && b.map((k) => k.id === o ? {
        ...k,
        apiKeys: k.apiKeys.filter((v) => v.id !== c)
      } : k)), { previousData: C };
    },
    onError: (o, c, C) => {
      C?.previousData && s.setQueryData(["api-keys"], C.previousData);
    },
    onSuccess: () => {
      s.invalidateQueries({ queryKey: ["api-keys"] });
    }
  }), m = O({
    mutationFn: ({
      consumerId: o,
      label: c
    }) => {
      if (!t.updateConsumer)
        throw new Error("updateConsumer not implemented");
      return t.updateConsumer({ id: o, label: c }, r);
    },
    onMutate: async ({ consumerId: o, label: c }) => {
      await s.cancelQueries({ queryKey: ["api-keys"] });
      const C = s.getQueryData(["api-keys"]);
      return s.setQueryData(["api-keys"], (b) => b && b.map((k) => k.id === o ? {
        ...k,
        label: c
      } : k)), { previousData: C };
    },
    onError: (o, c, C) => {
      C?.previousData && s.setQueryData(["api-keys"], C.previousData);
    },
    onSuccess: () => {
      s.invalidateQueries({ queryKey: ["api-keys"] });
    }
  }), p = O({
    mutationFn: (o) => {
      if (!t.rollKey)
        throw new Error("rollKey not implemented");
      return t.rollKey(o, r);
    },
    onSuccess: () => s.invalidateQueries({ queryKey: ["api-keys"] })
  }), x = (o, c) => {
    i(o), l(c);
  }, j = (o) => {
    a.trim() && m.mutate({
      consumerId: o,
      label: a.trim()
    }), i(null), l("");
  }, P = () => {
    i(null), l("");
  };
  return /* @__PURE__ */ e.jsxs("div", { className: "max-w-screen-md h-full pt-(--padding-content-top) pb-(--padding-content-bottom)", children: [
    /* @__PURE__ */ e.jsx(Y.Target, { name: "api-keys-list-page" }),
    /* @__PURE__ */ e.jsxs("div", { className: "flex justify-between pb-3", children: [
      /* @__PURE__ */ e.jsx("h1", { className: "font-medium text-2xl", children: "API Keys" }),
      t.createKey && /* @__PURE__ */ e.jsx(
        te,
        {
          service: t,
          isOpen: d,
          onOpenChange: g
        }
      )
    ] }),
    /* @__PURE__ */ e.jsx("p", { children: "Create, manage, and monitor your API keys" }),
    /* @__PURE__ */ e.jsx(Y.Target, { name: "api-keys-list-page-before-keys" }),
    /* @__PURE__ */ e.jsx("div", { className: "h-8" }),
    p.isError && /* @__PURE__ */ e.jsxs(M, { variant: "destructive", className: "mb-4", children: [
      /* @__PURE__ */ e.jsx(z, { size: 16 }),
      /* @__PURE__ */ e.jsx(q, { children: p.error.message })
    ] }),
    m.isError && /* @__PURE__ */ e.jsxs(M, { variant: "destructive", className: "mb-4", children: [
      /* @__PURE__ */ e.jsx(z, { size: 16 }),
      /* @__PURE__ */ e.jsx(q, { children: m.error.message })
    ] }),
    f.isError && /* @__PURE__ */ e.jsxs(M, { variant: "destructive", className: "mb-4", children: [
      /* @__PURE__ */ e.jsx(z, { size: 16 }),
      /* @__PURE__ */ e.jsx(q, { children: f.error.message })
    ] }),
    /* @__PURE__ */ e.jsx("div", { className: "", children: u.length === 0 ? /* @__PURE__ */ e.jsxs("div", { className: "flex col-span-full flex-col justify-center gap-4 items-center p-8 border rounded-sm bg-muted/30 text-muted-foreground", children: [
      /* @__PURE__ */ e.jsxs("p", { className: "text-center", children: [
        "You have no API keys yet.",
        /* @__PURE__ */ e.jsx("br", {}),
        t.createKey && "Get started and create your first key."
      ] }),
      t.createKey && /* @__PURE__ */ e.jsx(
        te,
        {
          service: t,
          isOpen: d,
          onOpenChange: g
        }
      )
    ] }) : /* @__PURE__ */ e.jsx(
      "ul",
      {
        className: A(
          "grid grid-cols-[1fr_min-content] divide-y divide-border col-span-6"
        ),
        children: u.map((o) => /* @__PURE__ */ e.jsxs(
          qe,
          {
            className: "grid grid-cols-subgrid col-span-full items-center mb-4 group",
            children: [
              /* @__PURE__ */ e.jsxs($e, { className: "border-b col-span-full grid-cols-subgrid grid", children: [
                /* @__PURE__ */ e.jsxs("div", { className: "h-10 flex flex-col text-sm justify-center", children: [
                  /* @__PURE__ */ e.jsxs("div", { className: "font-medium text-lg flex items-center gap-2", children: [
                    n === o.id ? /* @__PURE__ */ e.jsxs("div", { className: "flex items-center gap-2 w-full", children: [
                      /* @__PURE__ */ e.jsx(
                        ae,
                        {
                          maxLength: 32,
                          value: a,
                          onChange: (c) => l(c.target.value),
                          onKeyDown: (c) => {
                            c.key === "Enter" ? j(o.id) : c.key === "Escape" && P();
                          },
                          className: "text-lg font-medium",
                          autoFocus: !0
                        }
                      ),
                      /* @__PURE__ */ e.jsxs("div", { className: "flex items-center", children: [
                        /* @__PURE__ */ e.jsx(
                          w,
                          {
                            size: "icon",
                            variant: "ghost",
                            onClick: () => j(o.id),
                            disabled: !a.trim(),
                            children: /* @__PURE__ */ e.jsx(ue, { size: 16 })
                          }
                        ),
                        /* @__PURE__ */ e.jsx(
                          w,
                          {
                            size: "icon",
                            variant: "ghost",
                            onClick: P,
                            children: /* @__PURE__ */ e.jsx(he, { size: 16 })
                          }
                        )
                      ] })
                    ] }) : o.label,
                    /* @__PURE__ */ e.jsx("div", { className: "text-muted-foreground text-xs", children: o.createdOn })
                  ] }),
                  /* @__PURE__ */ e.jsxs("div", { className: "text-muted-foreground text-xs", children: [
                    o.createdOn && /* @__PURE__ */ e.jsxs("div", { children: [
                      "Created on",
                      " ",
                      new Date(o.createdOn).toLocaleDateString()
                    ] }),
                    o.expiresOn && /* @__PURE__ */ e.jsxs("div", { children: [
                      "Expires on",
                      " ",
                      new Date(o.expiresOn).toLocaleDateString()
                    ] })
                  ] })
                ] }),
                /* @__PURE__ */ e.jsxs("div", { className: "flex justify-end", children: [
                  t.updateConsumer && /* @__PURE__ */ e.jsxs(
                    w,
                    {
                      variant: "ghost",
                      onClick: () => x(o.id, o.label),
                      className: A(
                        "flex gap-2",
                        n === o.id && "opacity-0! pointer-events-none"
                      ),
                      disabled: n === o.id,
                      children: [
                        /* @__PURE__ */ e.jsx(fe, { size: 16 }),
                        /* @__PURE__ */ e.jsx("span", { className: "hidden md:block", children: "Edit label" })
                      ]
                    }
                  ),
                  t.rollKey && /* @__PURE__ */ e.jsxs(V, { children: [
                    /* @__PURE__ */ e.jsx(G, { asChild: !0, children: /* @__PURE__ */ e.jsxs(
                      w,
                      {
                        title: "Roll this key",
                        variant: "ghost",
                        disabled: p.isPending,
                        className: "flex items-center gap-2",
                        children: [
                          /* @__PURE__ */ e.jsx(
                            pe,
                            {
                              size: 16,
                              className: p.isPending ? "animate-spin" : void 0
                            }
                          ),
                          /* @__PURE__ */ e.jsx("span", { className: "hidden md:block", children: "Roll key" })
                        ]
                      }
                    ) }),
                    /* @__PURE__ */ e.jsxs(J, { children: [
                      /* @__PURE__ */ e.jsxs(U, { children: [
                        /* @__PURE__ */ e.jsx(W, { children: "Roll API Key" }),
                        /* @__PURE__ */ e.jsx(ie, { children: "Are you sure you want to roll this API key?" })
                      ] }),
                      /* @__PURE__ */ e.jsxs(H, { children: [
                        /* @__PURE__ */ e.jsx(D, { asChild: !0, children: /* @__PURE__ */ e.jsx(w, { variant: "outline", children: "Cancel" }) }),
                        /* @__PURE__ */ e.jsx(D, { asChild: !0, children: /* @__PURE__ */ e.jsx(
                          w,
                          {
                            onClick: () => {
                              p.mutate(o.id);
                            },
                            children: "Roll Key"
                          }
                        ) })
                      ] })
                    ] })
                  ] })
                ] })
              ] }),
              /* @__PURE__ */ e.jsx("div", { className: "col-span-full grid-cols-subgrid grid", children: /* @__PURE__ */ e.jsx(tt, { children: o.apiKeys.map((c) => /* @__PURE__ */ e.jsxs(Pe.Fragment, { children: [
                /* @__PURE__ */ e.jsx(
                  at,
                  {
                    apiKey: c,
                    onDeleteKey: () => {
                      f.mutate({
                        consumerId: o.id,
                        keyId: c.id
                      });
                    },
                    className: f.variables?.keyId === c.id && (f.isPending || h) ? "opacity-10!" : void 0
                  }
                ),
                /* @__PURE__ */ e.jsx("div", { className: "col-span-full h-px bg-border" })
              ] }, c.id)) }) })
            ]
          },
          o.id
        ))
      }
    ) })
  ] });
}, it = (t) => {
  const r = /* @__PURE__ */ new Date(), s = new Date(t), n = Math.floor((r.getTime() - s.getTime()) / 1e3), i = new Intl.RelativeTimeFormat("en", { numeric: "auto" });
  return n < 60 ? i.format(-n, "second") : n < 3600 ? i.format(-Math.floor(n / 60), "minute") : n < 86400 ? i.format(-Math.floor(n / 3600), "hour") : n < 2592e3 ? i.format(-Math.floor(n / 86400), "day") : n < 31536e3 ? i.format(-Math.floor(n / 2592e3), "month") : i.format(-Math.floor(n / 31536e3), "year");
}, at = ({
  apiKey: t,
  onDeleteKey: r,
  className: s
}) => {
  const [n, i] = K(!1), { key: a, createdOn: l, expiresOn: u } = t, h = u && new Date(u) < /* @__PURE__ */ new Date(), d = u ? Math.ceil(
    (new Date(u).getTime() - Date.now()) / (1e3 * 60 * 60 * 24)
  ) : 1 / 0, g = d <= 7 && !h;
  return /* @__PURE__ */ e.jsxs("div", { className: A("grid col-span-full grid-cols-subgrid p-6", s), children: [
    /* @__PURE__ */ e.jsxs("div", { className: "flex flex-col gap-1", children: [
      /* @__PURE__ */ e.jsx(
        Ae,
        {
          className: "max-w-fit w-full",
          secret: a,
          status: h ? "expired" : g ? "expiring" : "active",
          revealed: n,
          onReveal: i
        }
      ),
      /* @__PURE__ */ e.jsxs("div", { className: "flex gap-1 mt-0.5 text-nowrap", children: [
        l && /* @__PURE__ */ e.jsxs("span", { className: "text-xs text-muted-foreground", children: [
          "Created ",
          it(l),
          "."
        ] }),
        " ",
        u && g && /* @__PURE__ */ e.jsxs("span", { className: "text-xs text-primary", children: [
          "Expires in ",
          d,
          " ",
          d === 1 ? "day" : "days",
          "."
        ] }),
        u && h && /* @__PURE__ */ e.jsxs("span", { className: "text-xs text-primary", children: [
          "Expired",
          " ",
          d === 0 ? "today." : `${d * -1} days ago.`
        ] })
      ] })
    ] }),
    /* @__PURE__ */ e.jsx("div", { className: "flex justify-end", children: u && r && /* @__PURE__ */ e.jsxs(V, { children: [
      /* @__PURE__ */ e.jsx(G, { asChild: !0, children: /* @__PURE__ */ e.jsx(w, { variant: "ghost", size: "icon", children: /* @__PURE__ */ e.jsx(me, { size: 16 }) }) }),
      /* @__PURE__ */ e.jsxs(J, { children: [
        /* @__PURE__ */ e.jsxs(U, { children: [
          /* @__PURE__ */ e.jsx(W, { children: "Delete API Key" }),
          /* @__PURE__ */ e.jsx(ie, { children: "Are you sure you want to delete this API key?" })
        ] }),
        /* @__PURE__ */ e.jsxs(H, { children: [
          /* @__PURE__ */ e.jsx(D, { asChild: !0, children: /* @__PURE__ */ e.jsx(w, { variant: "outline", children: "Cancel" }) }),
          /* @__PURE__ */ e.jsx(D, { asChild: !0, children: /* @__PURE__ */ e.jsx(
            w,
            {
              onClick: () => {
                r();
              },
              children: "Delete"
            }
          ) })
        ] })
      ] })
    ] }) })
  ] });
}, S = "https://api.zuploedge.com/v2/client", ot = async (t) => {
  try {
    return await t.json();
  } catch {
    return;
  }
}, T = async (t) => {
  const r = t.headers.get("content-type");
  if (!t.ok && r?.includes("application/problem+json")) {
    const s = await ot(t);
    if (s.type && s.title)
      throw new Error(s.detail ?? s.title);
  }
}, lt = (t, r) => ({
  deleteKey: async (s, n, i) => {
    const a = new Request(
      S + `/${t}/consumers/${s}/keys/${n}`,
      {
        method: "DELETE"
      }
    );
    await i.signRequest(a);
    const l = await fetch(a);
    await T(l), I(l.ok, "Failed to delete API key");
  },
  updateConsumer: async (s, n) => {
    const i = await fetch(
      await n.signRequest(
        new Request(
          S + `/${t}/consumers/${s.id}`,
          {
            method: "PATCH",
            headers: {
              "Content-Type": "application/json"
            },
            body: JSON.stringify({
              label: s.label
            })
          }
        )
      )
    );
    await T(i), I(i.ok, "Failed to update API key description");
  },
  rollKey: async (s, n) => {
    const i = await fetch(
      await n.signRequest(
        new Request(
          S + `/${t}/consumers/${s}/roll-key`,
          {
            method: "POST",
            headers: {
              "Content-Type": "application/json"
            },
            body: JSON.stringify({})
          }
        )
      )
    );
    await T(i), I(i.ok, "Failed to delete API key");
  },
  getConsumers: async (s) => {
    const n = new Request(
      `${S}/${t}/consumers`
    );
    await s.signRequest(n);
    const i = await fetch(n);
    return await T(i), I(i.ok, "Failed to fetch API keys"), (await i.json()).data.map((l) => ({
      id: l.id,
      label: l.label || l.subject || "API Key",
      apiKeys: l.apiKeys.data,
      key: l.apiKeys.data.at(0)
    }));
  },
  ...r
}), Dt = (t) => t, At = (t) => {
  const r = "deploymentName" in t ? lt(t.deploymentName, t) : t;
  return {
    getProfileMenuItems: () => [
      {
        label: "API Keys",
        path: "/settings/api-keys",
        category: "middle",
        icon: xe
      }
    ],
    getIdentities: async (s) => {
      try {
        return (await r.getConsumers(s)).map((i) => ({
          authorizeRequest: (a) => (a.headers.set(
            "Authorization",
            `Bearer ${i.apiKeys.at(0)?.key}`
          ), a),
          id: i.id,
          label: i.label
        }));
      } catch {
        return [];
      }
    },
    getRoutes: () => [
      {
        element: /* @__PURE__ */ e.jsx(_e, {}),
        errorElement: /* @__PURE__ */ e.jsx(ye, {}),
        children: [
          {
            path: "/settings/api-keys",
            element: /* @__PURE__ */ e.jsx(rt, { service: r })
          }
        ]
      }
    ]
  };
};
export {
  At as apiKeyPlugin,
  Dt as createApiKeyService
};
//# sourceMappingURL=zudoku.plugin-api-keys.js.map
