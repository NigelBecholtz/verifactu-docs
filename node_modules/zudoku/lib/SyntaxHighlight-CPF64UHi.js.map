{"version":3,"file":"SyntaxHighlight-CPF64UHi.js","sources":["../../../node_modules/.pnpm/devlop@1.1.0/node_modules/devlop/lib/default.js","../../../node_modules/.pnpm/comma-separated-tokens@2.0.3/node_modules/comma-separated-tokens/index.js","../../../node_modules/.pnpm/estree-util-is-identifier-name@3.0.0/node_modules/estree-util-is-identifier-name/lib/index.js","../../../node_modules/.pnpm/hast-util-whitespace@3.0.0/node_modules/hast-util-whitespace/lib/index.js","../../../node_modules/.pnpm/property-information@7.0.0/node_modules/property-information/lib/util/schema.js","../../../node_modules/.pnpm/property-information@7.0.0/node_modules/property-information/lib/util/merge.js","../../../node_modules/.pnpm/property-information@7.0.0/node_modules/property-information/lib/normalize.js","../../../node_modules/.pnpm/property-information@7.0.0/node_modules/property-information/lib/util/info.js","../../../node_modules/.pnpm/property-information@7.0.0/node_modules/property-information/lib/util/types.js","../../../node_modules/.pnpm/property-information@7.0.0/node_modules/property-information/lib/util/defined-info.js","../../../node_modules/.pnpm/property-information@7.0.0/node_modules/property-information/lib/util/create.js","../../../node_modules/.pnpm/property-information@7.0.0/node_modules/property-information/lib/aria.js","../../../node_modules/.pnpm/property-information@7.0.0/node_modules/property-information/lib/util/case-sensitive-transform.js","../../../node_modules/.pnpm/property-information@7.0.0/node_modules/property-information/lib/util/case-insensitive-transform.js","../../../node_modules/.pnpm/property-information@7.0.0/node_modules/property-information/lib/html.js","../../../node_modules/.pnpm/property-information@7.0.0/node_modules/property-information/lib/svg.js","../../../node_modules/.pnpm/property-information@7.0.0/node_modules/property-information/lib/xlink.js","../../../node_modules/.pnpm/property-information@7.0.0/node_modules/property-information/lib/xmlns.js","../../../node_modules/.pnpm/property-information@7.0.0/node_modules/property-information/lib/xml.js","../../../node_modules/.pnpm/property-information@7.0.0/node_modules/property-information/lib/hast-to-react.js","../../../node_modules/.pnpm/property-information@7.0.0/node_modules/property-information/lib/find.js","../../../node_modules/.pnpm/property-information@7.0.0/node_modules/property-information/index.js","../../../node_modules/.pnpm/space-separated-tokens@2.0.2/node_modules/space-separated-tokens/index.js","../../../node_modules/.pnpm/inline-style-parser@0.2.4/node_modules/inline-style-parser/index.js","../../../node_modules/.pnpm/style-to-object@1.0.8/node_modules/style-to-object/cjs/index.js","../../../node_modules/.pnpm/style-to-js@1.1.16/node_modules/style-to-js/cjs/utilities.js","../../../node_modules/.pnpm/style-to-js@1.1.16/node_modules/style-to-js/cjs/index.js","../../../node_modules/.pnpm/unist-util-position@5.0.0/node_modules/unist-util-position/lib/index.js","../../../node_modules/.pnpm/unist-util-stringify-position@4.0.0/node_modules/unist-util-stringify-position/lib/index.js","../../../node_modules/.pnpm/vfile-message@4.0.2/node_modules/vfile-message/lib/index.js","../../../node_modules/.pnpm/hast-util-to-jsx-runtime@2.3.6/node_modules/hast-util-to-jsx-runtime/lib/index.js","../../../node_modules/.pnpm/unist-util-is@6.0.0/node_modules/unist-util-is/lib/index.js","../../../node_modules/.pnpm/unist-util-visit-parents@6.0.1/node_modules/unist-util-visit-parents/lib/index.js","../../../node_modules/.pnpm/unist-util-visit@5.0.0/node_modules/unist-util-visit/lib/index.js","../../../node_modules/.pnpm/zwitch@2.0.4/node_modules/zwitch/index.js","../../../node_modules/.pnpm/html-void-elements@3.0.0/node_modules/html-void-elements/index.js","../../../node_modules/.pnpm/ccount@2.0.1/node_modules/ccount/index.js","../../../node_modules/.pnpm/@shikijs+types@3.13.0/node_modules/@shikijs/types/dist/index.mjs","../../../node_modules/.pnpm/@shikijs+vscode-textmate@10.0.2/node_modules/@shikijs/vscode-textmate/dist/index.js","../../../node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/util/schema.js","../../../node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/util/merge.js","../../../node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/normalize.js","../../../node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/util/info.js","../../../node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/util/types.js","../../../node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/util/defined-info.js","../../../node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/util/create.js","../../../node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/aria.js","../../../node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/util/case-sensitive-transform.js","../../../node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/util/case-insensitive-transform.js","../../../node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/html.js","../../../node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/svg.js","../../../node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/xlink.js","../../../node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/xmlns.js","../../../node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/xml.js","../../../node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/find.js","../../../node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/index.js","../../../node_modules/.pnpm/stringify-entities@4.0.4/node_modules/stringify-entities/lib/core.js","../../../node_modules/.pnpm/stringify-entities@4.0.4/node_modules/stringify-entities/lib/util/to-hexadecimal.js","../../../node_modules/.pnpm/stringify-entities@4.0.4/node_modules/stringify-entities/lib/util/to-decimal.js","../../../node_modules/.pnpm/character-entities-legacy@3.0.0/node_modules/character-entities-legacy/index.js","../../../node_modules/.pnpm/character-entities-html4@2.1.0/node_modules/character-entities-html4/index.js","../../../node_modules/.pnpm/stringify-entities@4.0.4/node_modules/stringify-entities/lib/constant/dangerous.js","../../../node_modules/.pnpm/stringify-entities@4.0.4/node_modules/stringify-entities/lib/util/to-named.js","../../../node_modules/.pnpm/stringify-entities@4.0.4/node_modules/stringify-entities/lib/util/format-smart.js","../../../node_modules/.pnpm/stringify-entities@4.0.4/node_modules/stringify-entities/lib/index.js","../../../node_modules/.pnpm/hast-util-to-html@9.0.5/node_modules/hast-util-to-html/lib/handle/comment.js","../../../node_modules/.pnpm/hast-util-to-html@9.0.5/node_modules/hast-util-to-html/lib/handle/doctype.js","../../../node_modules/.pnpm/hast-util-to-html@9.0.5/node_modules/hast-util-to-html/lib/omission/util/siblings.js","../../../node_modules/.pnpm/hast-util-to-html@9.0.5/node_modules/hast-util-to-html/lib/omission/omission.js","../../../node_modules/.pnpm/hast-util-to-html@9.0.5/node_modules/hast-util-to-html/lib/omission/closing.js","../../../node_modules/.pnpm/hast-util-to-html@9.0.5/node_modules/hast-util-to-html/lib/omission/opening.js","../../../node_modules/.pnpm/hast-util-to-html@9.0.5/node_modules/hast-util-to-html/lib/handle/element.js","../../../node_modules/.pnpm/hast-util-to-html@9.0.5/node_modules/hast-util-to-html/lib/handle/text.js","../../../node_modules/.pnpm/hast-util-to-html@9.0.5/node_modules/hast-util-to-html/lib/handle/raw.js","../../../node_modules/.pnpm/hast-util-to-html@9.0.5/node_modules/hast-util-to-html/lib/handle/root.js","../../../node_modules/.pnpm/hast-util-to-html@9.0.5/node_modules/hast-util-to-html/lib/handle/index.js","../../../node_modules/.pnpm/hast-util-to-html@9.0.5/node_modules/hast-util-to-html/lib/index.js","../../../node_modules/.pnpm/@shikijs+core@3.13.0/node_modules/@shikijs/core/dist/index.mjs","../../../node_modules/.pnpm/hast-util-to-string@3.0.1/node_modules/hast-util-to-string/lib/index.js","../../../node_modules/.pnpm/@shikijs+rehype@3.13.0/node_modules/@shikijs/rehype/dist/core.mjs","../../../node_modules/.pnpm/@shikijs+transformers@3.13.0/node_modules/@shikijs/transformers/dist/index.mjs","../../../node_modules/.pnpm/oniguruma-parser@0.12.1/node_modules/oniguruma-parser/dist/utils.js","../../../node_modules/.pnpm/oniguruma-parser@0.12.1/node_modules/oniguruma-parser/dist/tokenizer/tokenize.js","../../../node_modules/.pnpm/oniguruma-parser@0.12.1/node_modules/oniguruma-parser/dist/parser/node-utils.js","../../../node_modules/.pnpm/oniguruma-parser@0.12.1/node_modules/oniguruma-parser/dist/parser/parse.js","../../../node_modules/.pnpm/oniguruma-parser@0.12.1/node_modules/oniguruma-parser/dist/traverser/traverse.js","../../../node_modules/.pnpm/regex@6.0.1/node_modules/regex/src/utils-internals.js","../../../node_modules/.pnpm/regex-utilities@2.3.0/node_modules/regex-utilities/src/index.js","../../../node_modules/.pnpm/regex@6.0.1/node_modules/regex/src/atomic.js","../../../node_modules/.pnpm/regex-recursion@6.0.2/node_modules/regex-recursion/src/index.js","../../../node_modules/.pnpm/oniguruma-to-es@4.3.3/node_modules/oniguruma-to-es/dist/esm/index.js","../../../node_modules/.pnpm/@shikijs+engine-javascript@3.13.0/node_modules/@shikijs/engine-javascript/dist/shared/engine-javascript.hzpS1_41.mjs","../../../node_modules/.pnpm/@shikijs+engine-javascript@3.13.0/node_modules/@shikijs/engine-javascript/dist/engine-compile.mjs","../src/lib/shiki.ts","../src/lib/ui/SyntaxHighlight.tsx"],"sourcesContent":["export function deprecate(fn) {\n  return fn\n}\n\nexport function equal() {}\n\nexport function ok() {}\n\nexport function unreachable() {}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [jsx=false]\n *   Support JSX identifiers (default: `false`).\n */\n\nconst startRe = /[$_\\p{ID_Start}]/u\nconst contRe = /[$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst contReJsx = /[-$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst nameRe = /^[$_\\p{ID_Start}][$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\nconst nameReJsx = /^[$_\\p{ID_Start}][-$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Checks if the given code point can start an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @returns {boolean}\n *   Whether `code` can start an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function start(code) {\n  return code ? startRe.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given code point can continue an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `code` can continue an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function cont(code, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? contReJsx : contRe\n  return code ? re.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given value is a valid identifier name.\n *\n * @param {string} name\n *   Identifier to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `name` can be an identifier.\n */\nexport function name(name, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? nameReJsx : nameRe\n  return re.test(name)\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n","/**\n * @import {Schema as SchemaType, Space} from 'property-information'\n */\n\n/** @type {SchemaType} */\nexport class Schema {\n  /**\n   * @param {SchemaType['property']} property\n   *   Property.\n   * @param {SchemaType['normal']} normal\n   *   Normal.\n   * @param {Space | undefined} [space]\n   *   Space.\n   * @returns\n   *   Schema.\n   */\n  constructor(property, normal, space) {\n    this.normal = normal\n    this.property = property\n\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\nSchema.prototype.normal = {}\nSchema.prototype.property = {}\nSchema.prototype.space = undefined\n","/**\n * @import {Info, Space} from 'property-information'\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {ReadonlyArray<Schema>} definitions\n *   Definitions.\n * @param {Space | undefined} [space]\n *   Space.\n * @returns {Schema}\n *   Schema.\n */\nexport function merge(definitions, space) {\n  /** @type {Record<string, Info>} */\n  const property = {}\n  /** @type {Record<string, string>} */\n  const normal = {}\n\n  for (const definition of definitions) {\n    Object.assign(property, definition.property)\n    Object.assign(normal, definition.normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * Get the cleaned case insensitive form of an attribute or property.\n *\n * @param {string} value\n *   An attribute-like or property-like name.\n * @returns {string}\n *   Value that can be used to look up the properly cased property on a\n *   `Schema`.\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","/**\n * @import {Info as InfoType} from 'property-information'\n */\n\n/** @type {InfoType} */\nexport class Info {\n  /**\n   * @param {string} property\n   *   Property.\n   * @param {string} attribute\n   *   Attribute.\n   * @returns\n   *   Info.\n   */\n  constructor(property, attribute) {\n    this.attribute = attribute\n    this.property = property\n  }\n}\n\nInfo.prototype.attribute = ''\nInfo.prototype.booleanish = false\nInfo.prototype.boolean = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.defined = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.number = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.property = ''\nInfo.prototype.spaceSeparated = false\nInfo.prototype.space = undefined\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","/**\n * @import {Space} from 'property-information'\n */\n\nimport {Info} from './info.js'\nimport * as types from './types.js'\n\nconst checks = /** @type {ReadonlyArray<keyof typeof types>} */ (\n  Object.keys(types)\n)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   *   Property.\n   * @param {string} attribute\n   *   Attribute.\n   * @param {number | null | undefined} [mask]\n   *   Mask.\n   * @param {Space | undefined} [space]\n   *   Space.\n   * @returns\n   *   Info.\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @template {keyof DefinedInfo} Key\n *   Key type.\n * @param {DefinedInfo} values\n *   Info.\n * @param {Key} key\n *   Key.\n * @param {DefinedInfo[Key]} value\n *   Value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction mark(values, key, value) {\n  if (value) {\n    values[key] = value\n  }\n}\n","/**\n * @import {Info, Space} from 'property-information'\n */\n\n/**\n * @typedef Definition\n *   Definition of a schema.\n * @property {Record<string, string> | undefined} [attributes]\n *   Normalzed names to special attribute case.\n * @property {ReadonlyArray<string> | undefined} [mustUseProperty]\n *   Normalized names that must be set as properties.\n * @property {Record<string, number | null>} properties\n *   Property names to their types.\n * @property {Space | undefined} [space]\n *   Space.\n * @property {Transform} transform\n *   Transform a property name.\n */\n\n/**\n * @callback Transform\n *   Transform.\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} property\n *   Property.\n * @returns {string}\n *   Attribute.\n */\n\nimport {normalize} from '../normalize.js'\nimport {DefinedInfo} from './defined-info.js'\nimport {Schema} from './schema.js'\n\n/**\n * @param {Definition} definition\n *   Definition.\n * @returns {Schema}\n *   Schema.\n */\nexport function create(definition) {\n  /** @type {Record<string, Info>} */\n  const properties = {}\n  /** @type {Record<string, string>} */\n  const normals = {}\n\n  for (const [property, value] of Object.entries(definition.properties)) {\n    const info = new DefinedInfo(\n      property,\n      definition.transform(definition.attributes || {}, property),\n      value,\n      definition.space\n    )\n\n    if (\n      definition.mustUseProperty &&\n      definition.mustUseProperty.includes(property)\n    ) {\n      info.mustUseProperty = true\n    }\n\n    properties[property] = info\n\n    normals[normalize(property)] = property\n    normals[normalize(info.attribute)] = property\n  }\n\n  return new Schema(properties, normals, definition.space)\n}\n","import {create} from './util/create.js'\nimport {booleanish, number, spaceSeparated} from './util/types.js'\n\nexport const aria = create({\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  },\n  transform(_, property) {\n    return property === 'role'\n      ? property\n      : 'aria-' + property.slice(4).toLowerCase()\n  }\n})\n","/**\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} attribute\n *   Attribute.\n * @returns {string}\n *   Transformed attribute.\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} property\n *   Property.\n * @returns {string}\n *   Transformed property.\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\nimport {create} from './util/create.js'\nimport {\n  booleanish,\n  boolean,\n  commaSeparated,\n  number,\n  overloadedBoolean,\n  spaceSeparated\n} from './util/types.js'\n\nexport const html = create({\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  },\n  space: 'html',\n  transform: caseInsensitiveTransform\n})\n","import {caseSensitiveTransform} from './util/case-sensitive-transform.js'\nimport {create} from './util/create.js'\nimport {\n  boolean,\n  commaOrSpaceSeparated,\n  commaSeparated,\n  number,\n  spaceSeparated\n} from './util/types.js'\n\nexport const svg = create({\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  },\n  space: 'svg',\n  transform: caseSensitiveTransform\n})\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  },\n  space: 'xlink',\n  transform(_, property) {\n    return 'xlink:' + property.slice(5).toLowerCase()\n  }\n})\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  properties: {xmlnsXLink: null, xmlns: null},\n  space: 'xmlns',\n  transform: caseInsensitiveTransform\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  properties: {xmlBase: null, xmlLang: null, xmlSpace: null},\n  space: 'xml',\n  transform(_, property) {\n    return 'xml:' + property.slice(3).toLowerCase()\n  }\n})\n","/**\n * Special cases for React (`Record<string, string>`).\n *\n * `hast` is close to `React` but differs in a couple of cases.\n * To get a React property from a hast property,\n * check if it is in `hastToReact`.\n * If it is, use the corresponding value;\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * @import {Schema} from 'property-information'\n */\n\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\nimport {normalize} from './normalize.js'\n\nconst cap = /[A-Z]/g\nconst dash = /-[a-z]/g\nconst valid = /^data[-\\w.:]+$/i\n\n/**\n * Look up info on a property.\n *\n * In most cases the given `schema` contains info on the property.\n * All standard,\n * most legacy,\n * and some non-standard properties are supported.\n * For these cases,\n * the returned `Info` has hints about the value of the property.\n *\n * `name` can also be a valid data attribute or property,\n * in which case an `Info` object with the correctly cased `attribute` and\n * `property` is returned.\n *\n * `name` can be an unknown attribute,\n * in which case an `Info` object with `attribute` and `property` set to the\n * given name is returned.\n * It is not recommended to provide unsupported legacy or recently specced\n * properties.\n *\n *\n * @param {Schema} schema\n *   Schema;\n *   either the `html` or `svg` export.\n * @param {string} value\n *   An attribute-like or property-like name;\n *   it will be passed through `normalize` to hopefully find the correct info.\n * @returns {Info}\n *   Info.\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let property = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      property = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(property, value)\n}\n\n/**\n * @param {string} $0\n *   Value.\n * @returns {string}\n *   Kebab.\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n *   Value.\n * @returns {string}\n *   Camel.\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","// Note: types exposed from `index.d.ts`.\nimport {merge} from './lib/util/merge.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\nimport {xlink} from './lib/xlink.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {xml} from './lib/xml.js'\n\nexport {hastToReact} from './lib/hast-to-react.js'\n\nexport const html = merge([aria, htmlBase, xlink, xmlns, xml], 'html')\n\nexport {find} from './lib/find.js'\nexport {normalize} from './lib/normalize.js'\n\nexport const svg = merge([aria, svgBase, xlink, xmlns, xml], 'svg')\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function (style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function (node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = StyleToObject;\nvar inline_style_parser_1 = __importDefault(require(\"inline-style-parser\"));\n/**\n * Parses inline style to object.\n *\n * @param style - Inline style.\n * @param iterator - Iterator.\n * @returns - Style object or null.\n *\n * @example Parsing inline style to object:\n *\n * ```js\n * import parse from 'style-to-object';\n * parse('line-height: 42;'); // { 'line-height': '42' }\n * ```\n */\nfunction StyleToObject(style, iterator) {\n    var styleObject = null;\n    if (!style || typeof style !== 'string') {\n        return styleObject;\n    }\n    var declarations = (0, inline_style_parser_1.default)(style);\n    var hasIterator = typeof iterator === 'function';\n    declarations.forEach(function (declaration) {\n        if (declaration.type !== 'declaration') {\n            return;\n        }\n        var property = declaration.property, value = declaration.value;\n        if (hasIterator) {\n            iterator(property, value, declaration);\n        }\n        else if (value) {\n            styleObject = styleObject || {};\n            styleObject[property] = value;\n        }\n    });\n    return styleObject;\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.camelCase = void 0;\nvar CUSTOM_PROPERTY_REGEX = /^--[a-zA-Z0-9_-]+$/;\nvar HYPHEN_REGEX = /-([a-z])/g;\nvar NO_HYPHEN_REGEX = /^[^-]+$/;\nvar VENDOR_PREFIX_REGEX = /^-(webkit|moz|ms|o|khtml)-/;\nvar MS_VENDOR_PREFIX_REGEX = /^-(ms)-/;\n/**\n * Checks whether to skip camelCase.\n */\nvar skipCamelCase = function (property) {\n    return !property ||\n        NO_HYPHEN_REGEX.test(property) ||\n        CUSTOM_PROPERTY_REGEX.test(property);\n};\n/**\n * Replacer that capitalizes first character.\n */\nvar capitalize = function (match, character) {\n    return character.toUpperCase();\n};\n/**\n * Replacer that removes beginning hyphen of vendor prefix property.\n */\nvar trimHyphen = function (match, prefix) { return \"\".concat(prefix, \"-\"); };\n/**\n * CamelCases a CSS property.\n */\nvar camelCase = function (property, options) {\n    if (options === void 0) { options = {}; }\n    if (skipCamelCase(property)) {\n        return property;\n    }\n    property = property.toLowerCase();\n    if (options.reactCompat) {\n        // `-ms` vendor prefix should not be capitalized\n        property = property.replace(MS_VENDOR_PREFIX_REGEX, trimHyphen);\n    }\n    else {\n        // for non-React, remove first hyphen so vendor prefix is not capitalized\n        property = property.replace(VENDOR_PREFIX_REGEX, trimHyphen);\n    }\n    return property.replace(HYPHEN_REGEX, capitalize);\n};\nexports.camelCase = camelCase;\n//# sourceMappingURL=utilities.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar style_to_object_1 = __importDefault(require(\"style-to-object\"));\nvar utilities_1 = require(\"./utilities\");\n/**\n * Parses CSS inline style to JavaScript object (camelCased).\n */\nfunction StyleToJS(style, options) {\n    var output = {};\n    if (!style || typeof style !== 'string') {\n        return output;\n    }\n    (0, style_to_object_1.default)(style, function (property, value) {\n        // skip CSS comment\n        if (property && value) {\n            output[(0, utilities_1.camelCase)(property, options)] = value;\n        }\n    });\n    return output;\n}\nStyleToJS.default = StyleToJS;\nmodule.exports = StyleToJS;\n//# sourceMappingURL=index.js.map","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","/**\n * @import {Identifier, Literal, MemberExpression} from 'estree'\n * @import {Jsx, JsxDev, Options, Props} from 'hast-util-to-jsx-runtime'\n * @import {Element, Nodes, Parents, Root, Text} from 'hast'\n * @import {MdxFlowExpressionHast, MdxTextExpressionHast} from 'mdast-util-mdx-expression'\n * @import {MdxJsxFlowElementHast, MdxJsxTextElementHast} from 'mdast-util-mdx-jsx'\n * @import {MdxjsEsmHast} from 'mdast-util-mdxjs-esm'\n * @import {Position} from 'unist'\n * @import {Child, Create, Field, JsxElement, State, Style} from './types.js'\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {name as isIdentifierName} from 'estree-util-is-identifier-name'\nimport {whitespace} from 'hast-util-whitespace'\nimport {find, hastToReact, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport styleToJs from 'style-to-js'\nimport {pointStart} from 'unist-util-position'\nimport {VFileMessage} from 'vfile-message'\n\n// To do: next major: `Object.hasOwn`.\nconst own = {}.hasOwnProperty\n\n/** @type {Map<string, number>} */\nconst emptyMap = new Map()\n\nconst cap = /[A-Z]/g\n\n// `react-dom` triggers a warning for *any* white space in tables.\n// To follow GFM, `mdast-util-to-hast` injects line endings between elements.\n// Other tools might do so too, but they don’t do here, so we remove all of\n// that.\n\n// See: <https://github.com/facebook/react/pull/7081>.\n// See: <https://github.com/facebook/react/pull/7515>.\n// See: <https://github.com/remarkjs/remark-react/issues/64>.\n// See: <https://github.com/rehypejs/rehype-react/pull/29>.\n// See: <https://github.com/rehypejs/rehype-react/pull/32>.\n// See: <https://github.com/rehypejs/rehype-react/pull/45>.\nconst tableElements = new Set(['table', 'tbody', 'thead', 'tfoot', 'tr'])\n\nconst tableCellElement = new Set(['td', 'th'])\n\nconst docs = 'https://github.com/syntax-tree/hast-util-to-jsx-runtime'\n\n/**\n * Transform a hast tree to preact, react, solid, svelte, vue, etc.,\n * with an automatic JSX runtime.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options} options\n *   Configuration (required).\n * @returns {JsxElement}\n *   JSX element.\n */\n\nexport function toJsxRuntime(tree, options) {\n  if (!options || options.Fragment === undefined) {\n    throw new TypeError('Expected `Fragment` in options')\n  }\n\n  const filePath = options.filePath || undefined\n  /** @type {Create} */\n  let create\n\n  if (options.development) {\n    if (typeof options.jsxDEV !== 'function') {\n      throw new TypeError(\n        'Expected `jsxDEV` in options when `development: true`'\n      )\n    }\n\n    create = developmentCreate(filePath, options.jsxDEV)\n  } else {\n    if (typeof options.jsx !== 'function') {\n      throw new TypeError('Expected `jsx` in production options')\n    }\n\n    if (typeof options.jsxs !== 'function') {\n      throw new TypeError('Expected `jsxs` in production options')\n    }\n\n    create = productionCreate(filePath, options.jsx, options.jsxs)\n  }\n\n  /** @type {State} */\n  const state = {\n    Fragment: options.Fragment,\n    ancestors: [],\n    components: options.components || {},\n    create,\n    elementAttributeNameCase: options.elementAttributeNameCase || 'react',\n    evaluater: options.createEvaluater ? options.createEvaluater() : undefined,\n    filePath,\n    ignoreInvalidStyle: options.ignoreInvalidStyle || false,\n    passKeys: options.passKeys !== false,\n    passNode: options.passNode || false,\n    schema: options.space === 'svg' ? svg : html,\n    stylePropertyNameCase: options.stylePropertyNameCase || 'dom',\n    tableCellAlignToStyle: options.tableCellAlignToStyle !== false\n  }\n\n  const result = one(state, tree, undefined)\n\n  // JSX element.\n  if (result && typeof result !== 'string') {\n    return result\n  }\n\n  // Text node or something that turned into nothing.\n  return state.create(\n    tree,\n    state.Fragment,\n    {children: result || undefined},\n    undefined\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Nodes} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction one(state, node, key) {\n  if (node.type === 'element') {\n    return element(state, node, key)\n  }\n\n  if (node.type === 'mdxFlowExpression' || node.type === 'mdxTextExpression') {\n    return mdxExpression(state, node)\n  }\n\n  if (node.type === 'mdxJsxFlowElement' || node.type === 'mdxJsxTextElement') {\n    return mdxJsxElement(state, node, key)\n  }\n\n  if (node.type === 'mdxjsEsm') {\n    return mdxEsm(state, node)\n  }\n\n  if (node.type === 'root') {\n    return root(state, node, key)\n  }\n\n  if (node.type === 'text') {\n    return text(state, node)\n  }\n}\n\n/**\n * Handle element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction element(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.tagName.toLowerCase() === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type = findComponentFromName(state, node.tagName, false)\n  const props = createElementProps(state, node)\n  let children = createChildren(state, node)\n\n  if (tableElements.has(node.tagName)) {\n    children = children.filter(function (child) {\n      return typeof child === 'string' ? !whitespace(child) : true\n    })\n  }\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle MDX expression.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxFlowExpressionHast | MdxTextExpressionHast} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxExpression(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    const program = node.data.estree\n    const expression = program.body[0]\n    assert(expression.type === 'ExpressionStatement')\n\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateExpression(expression.expression)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX ESM.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxjsEsmHast} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxEsm(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateProgram(node.data.estree)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX JSX.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxJsxElement(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.name === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type =\n    node.name === null\n      ? state.Fragment\n      : findComponentFromName(state, node.name, true)\n  const props = createJsxElementProps(state, node)\n  const children = createChildren(state, node)\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle root.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Root} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction root(state, node, key) {\n  /** @type {Props} */\n  const props = {}\n\n  addChildren(props, createChildren(state, node))\n\n  return state.create(node, state.Fragment, props, key)\n}\n\n/**\n * Handle text.\n *\n * @param {State} _\n *   Info passed around.\n * @param {Text} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction text(_, node) {\n  return node.value\n}\n\n/**\n * Add `node` to props.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Props} props\n *   Props.\n * @param {unknown} type\n *   Type.\n * @param {Element | MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addNode(state, props, type, node) {\n  // If this is swapped out for a component:\n  if (typeof type !== 'string' && type !== state.Fragment && state.passNode) {\n    props.node = node\n  }\n}\n\n/**\n * Add children to props.\n *\n * @param {Props} props\n *   Props.\n * @param {Array<Child>} children\n *   Children.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChildren(props, children) {\n  if (children.length > 0) {\n    const value = children.length > 1 ? children : children[0]\n\n    if (value) {\n      props.children = value\n    }\n  }\n}\n\n/**\n * @param {string | undefined} _\n *   Path to file.\n * @param {Jsx} jsx\n *   Dynamic.\n * @param {Jsx} jsxs\n *   Static.\n * @returns {Create}\n *   Create a production element.\n */\nfunction productionCreate(_, jsx, jsxs) {\n  return create\n  /** @type {Create} */\n  function create(_, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const fn = isStaticChildren ? jsxs : jsx\n    return key ? fn(type, props, key) : fn(type, props)\n  }\n}\n\n/**\n * @param {string | undefined} filePath\n *   Path to file.\n * @param {JsxDev} jsxDEV\n *   Development.\n * @returns {Create}\n *   Create a development element.\n */\nfunction developmentCreate(filePath, jsxDEV) {\n  return create\n  /** @type {Create} */\n  function create(node, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const point = pointStart(node)\n    return jsxDEV(\n      type,\n      props,\n      key,\n      isStaticChildren,\n      {\n        columnNumber: point ? point.column - 1 : undefined,\n        fileName: filePath,\n        lineNumber: point ? point.line : undefined\n      },\n      undefined\n    )\n  }\n}\n\n/**\n * Create props from an element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current element.\n * @returns {Props}\n *   Props.\n */\nfunction createElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n  /** @type {string | undefined} */\n  let alignValue\n  /** @type {string} */\n  let prop\n\n  for (prop in node.properties) {\n    if (prop !== 'children' && own.call(node.properties, prop)) {\n      const result = createProperty(state, prop, node.properties[prop])\n\n      if (result) {\n        const [key, value] = result\n\n        if (\n          state.tableCellAlignToStyle &&\n          key === 'align' &&\n          typeof value === 'string' &&\n          tableCellElement.has(node.tagName)\n        ) {\n          alignValue = value\n        } else {\n          props[key] = value\n        }\n      }\n    }\n  }\n\n  if (alignValue) {\n    // Assume style is an object.\n    const style = /** @type {Style} */ (props.style || (props.style = {}))\n    style[state.stylePropertyNameCase === 'css' ? 'text-align' : 'textAlign'] =\n      alignValue\n  }\n\n  return props\n}\n\n/**\n * Create props from a JSX element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Current JSX element.\n * @returns {Props}\n *   Props.\n */\nfunction createJsxElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n\n  for (const attribute of node.attributes) {\n    if (attribute.type === 'mdxJsxExpressionAttribute') {\n      if (attribute.data && attribute.data.estree && state.evaluater) {\n        const program = attribute.data.estree\n        const expression = program.body[0]\n        assert(expression.type === 'ExpressionStatement')\n        const objectExpression = expression.expression\n        assert(objectExpression.type === 'ObjectExpression')\n        const property = objectExpression.properties[0]\n        assert(property.type === 'SpreadElement')\n\n        Object.assign(\n          props,\n          state.evaluater.evaluateExpression(property.argument)\n        )\n      } else {\n        crashEstree(state, node.position)\n      }\n    } else {\n      // For JSX, the author is responsible of passing in the correct values.\n      const name = attribute.name\n      /** @type {unknown} */\n      let value\n\n      if (attribute.value && typeof attribute.value === 'object') {\n        if (\n          attribute.value.data &&\n          attribute.value.data.estree &&\n          state.evaluater\n        ) {\n          const program = attribute.value.data.estree\n          const expression = program.body[0]\n          assert(expression.type === 'ExpressionStatement')\n          value = state.evaluater.evaluateExpression(expression.expression)\n        } else {\n          crashEstree(state, node.position)\n        }\n      } else {\n        value = attribute.value === null ? true : attribute.value\n      }\n\n      // Assume a prop.\n      props[name] = /** @type {Props[keyof Props]} */ (value)\n    }\n  }\n\n  return props\n}\n\n/**\n * Create children.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Parents} node\n *   Current element.\n * @returns {Array<Child>}\n *   Children.\n */\nfunction createChildren(state, node) {\n  /** @type {Array<Child>} */\n  const children = []\n  let index = -1\n  /** @type {Map<string, number>} */\n  // Note: test this when Solid doesn’t want to merge my upcoming PR.\n  /* c8 ignore next */\n  const countsByName = state.passKeys ? new Map() : emptyMap\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    /** @type {string | undefined} */\n    let key\n\n    if (state.passKeys) {\n      const name =\n        child.type === 'element'\n          ? child.tagName\n          : child.type === 'mdxJsxFlowElement' ||\n              child.type === 'mdxJsxTextElement'\n            ? child.name\n            : undefined\n\n      if (name) {\n        const count = countsByName.get(name) || 0\n        key = name + '-' + count\n        countsByName.set(name, count + 1)\n      }\n    }\n\n    const result = one(state, child, key)\n    if (result !== undefined) children.push(result)\n  }\n\n  return children\n}\n\n/**\n * Handle a property.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Field | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(state, prop, value) {\n  const info = find(state.schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  // React only accepts `style` as object.\n  if (info.property === 'style') {\n    let styleObject =\n      typeof value === 'object' ? value : parseStyle(state, String(value))\n\n    if (state.stylePropertyNameCase === 'css') {\n      styleObject = transformStylesToCssCasing(styleObject)\n    }\n\n    return ['style', styleObject]\n  }\n\n  return [\n    state.elementAttributeNameCase === 'react' && info.space\n      ? hastToReact[info.property] || info.property\n      : info.attribute,\n    value\n  ]\n}\n\n/**\n * Parse a CSS declaration to an object.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} value\n *   CSS declarations.\n * @returns {Style}\n *   Properties.\n * @throws\n *   Throws `VFileMessage` when CSS cannot be parsed.\n */\nfunction parseStyle(state, value) {\n  try {\n    return styleToJs(value, {reactCompat: true})\n  } catch (error) {\n    if (state.ignoreInvalidStyle) {\n      return {}\n    }\n\n    const cause = /** @type {Error} */ (error)\n    const message = new VFileMessage('Cannot parse `style` attribute', {\n      ancestors: state.ancestors,\n      cause,\n      ruleId: 'style',\n      source: 'hast-util-to-jsx-runtime'\n    })\n    message.file = state.filePath || undefined\n    message.url = docs + '#cannot-parse-style-attribute'\n\n    throw message\n  }\n}\n\n/**\n * Create a JSX name from a string.\n *\n * @param {State} state\n *   To do.\n * @param {string} name\n *   Name.\n * @param {boolean} allowExpression\n *   Allow member expressions and identifiers.\n * @returns {unknown}\n *   To do.\n */\nfunction findComponentFromName(state, name, allowExpression) {\n  /** @type {Identifier | Literal | MemberExpression} */\n  let result\n\n  if (!allowExpression) {\n    result = {type: 'Literal', value: name}\n  } else if (name.includes('.')) {\n    const identifiers = name.split('.')\n    let index = -1\n    /** @type {Identifier | Literal | MemberExpression | undefined} */\n    let node\n\n    while (++index < identifiers.length) {\n      /** @type {Identifier | Literal} */\n      const prop = isIdentifierName(identifiers[index])\n        ? {type: 'Identifier', name: identifiers[index]}\n        : {type: 'Literal', value: identifiers[index]}\n      node = node\n        ? {\n            type: 'MemberExpression',\n            object: node,\n            property: prop,\n            computed: Boolean(index && prop.type === 'Literal'),\n            optional: false\n          }\n        : prop\n    }\n\n    assert(node, 'always a result')\n    result = node\n  } else {\n    result =\n      isIdentifierName(name) && !/^[a-z]/.test(name)\n        ? {type: 'Identifier', name}\n        : {type: 'Literal', value: name}\n  }\n\n  // Only literals can be passed in `components` currently.\n  // No identifiers / member expressions.\n  if (result.type === 'Literal') {\n    const name = /** @type {string | number} */ (result.value)\n    return own.call(state.components, name) ? state.components[name] : name\n  }\n\n  // Assume component.\n  if (state.evaluater) {\n    return state.evaluater.evaluateExpression(result)\n  }\n\n  crashEstree(state)\n}\n\n/**\n * @param {State} state\n * @param {Position | undefined} [place]\n * @returns {never}\n */\nfunction crashEstree(state, place) {\n  const message = new VFileMessage(\n    'Cannot handle MDX estrees without `createEvaluater`',\n    {\n      ancestors: state.ancestors,\n      place,\n      ruleId: 'mdx-estree',\n      source: 'hast-util-to-jsx-runtime'\n    }\n  )\n  message.file = state.filePath || undefined\n  message.url = docs + '#cannot-handle-mdx-estrees-without-createevaluater'\n\n  throw message\n}\n\n/**\n * Transform a DOM casing style object to a CSS casing style object.\n *\n * @param {Style} domCasing\n * @returns {Style}\n */\nfunction transformStylesToCssCasing(domCasing) {\n  /** @type {Style} */\n  const cssCasing = {}\n  /** @type {string} */\n  let from\n\n  for (from in domCasing) {\n    if (own.call(domCasing, from)) {\n      cssCasing[transformStyleToCssCasing(from)] = domCasing[from]\n    }\n  }\n\n  return cssCasing\n}\n\n/**\n * Transform a DOM casing style field to a CSS casing style field.\n *\n * @param {string} from\n * @returns {string}\n */\nfunction transformStyleToCssCasing(from) {\n  let to = from.replace(cap, toDash)\n  // Handle `ms-xxx` -> `-ms-xxx`.\n  if (to.slice(0, 3) === 'ms-') to = '-' + to\n  return to\n}\n\n/**\n * Make `$0` dash cased.\n *\n * @param {string} $0\n *   Capitalized ASCII leter.\n * @returns {string}\n *   Dash and lower letter.\n */\nfunction toDash($0) {\n  return '-' + $0.toLowerCase()\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nexport function zwitch(key, options) {\n  const settings = options || {}\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid\n    const handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key])\n      // @ts-expect-error Indexable.\n      fn = own.call(handlers, id) ? handlers[id] : one.unknown\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  // @ts-expect-error: matches!\n  return one\n}\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","class ShikiError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"ShikiError\";\n  }\n}\n\nexport { ShikiError };\n","// src/utils.ts\nfunction clone(something) {\n  return doClone(something);\n}\nfunction doClone(something) {\n  if (Array.isArray(something)) {\n    return cloneArray(something);\n  }\n  if (something instanceof RegExp) {\n    return something;\n  }\n  if (typeof something === \"object\") {\n    return cloneObj(something);\n  }\n  return something;\n}\nfunction cloneArray(arr) {\n  let r = [];\n  for (let i = 0, len = arr.length; i < len; i++) {\n    r[i] = doClone(arr[i]);\n  }\n  return r;\n}\nfunction cloneObj(obj) {\n  let r = {};\n  for (let key in obj) {\n    r[key] = doClone(obj[key]);\n  }\n  return r;\n}\nfunction mergeObjects(target, ...sources) {\n  sources.forEach((source) => {\n    for (let key in source) {\n      target[key] = source[key];\n    }\n  });\n  return target;\n}\nfunction basename(path) {\n  const idx = ~path.lastIndexOf(\"/\") || ~path.lastIndexOf(\"\\\\\");\n  if (idx === 0) {\n    return path;\n  } else if (~idx === path.length - 1) {\n    return basename(path.substring(0, path.length - 1));\n  } else {\n    return path.substr(~idx + 1);\n  }\n}\nvar CAPTURING_REGEX_SOURCE = /\\$(\\d+)|\\${(\\d+):\\/(downcase|upcase)}/g;\nvar RegexSource = class {\n  static hasCaptures(regexSource) {\n    if (regexSource === null) {\n      return false;\n    }\n    CAPTURING_REGEX_SOURCE.lastIndex = 0;\n    return CAPTURING_REGEX_SOURCE.test(regexSource);\n  }\n  static replaceCaptures(regexSource, captureSource, captureIndices) {\n    return regexSource.replace(CAPTURING_REGEX_SOURCE, (match, index, commandIndex, command) => {\n      let capture = captureIndices[parseInt(index || commandIndex, 10)];\n      if (capture) {\n        let result = captureSource.substring(capture.start, capture.end);\n        while (result[0] === \".\") {\n          result = result.substring(1);\n        }\n        switch (command) {\n          case \"downcase\":\n            return result.toLowerCase();\n          case \"upcase\":\n            return result.toUpperCase();\n          default:\n            return result;\n        }\n      } else {\n        return match;\n      }\n    });\n  }\n};\nfunction strcmp(a, b) {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n  return 0;\n}\nfunction strArrCmp(a, b) {\n  if (a === null && b === null) {\n    return 0;\n  }\n  if (!a) {\n    return -1;\n  }\n  if (!b) {\n    return 1;\n  }\n  let len1 = a.length;\n  let len2 = b.length;\n  if (len1 === len2) {\n    for (let i = 0; i < len1; i++) {\n      let res = strcmp(a[i], b[i]);\n      if (res !== 0) {\n        return res;\n      }\n    }\n    return 0;\n  }\n  return len1 - len2;\n}\nfunction isValidHexColor(hex) {\n  if (/^#[0-9a-f]{6}$/i.test(hex)) {\n    return true;\n  }\n  if (/^#[0-9a-f]{8}$/i.test(hex)) {\n    return true;\n  }\n  if (/^#[0-9a-f]{3}$/i.test(hex)) {\n    return true;\n  }\n  if (/^#[0-9a-f]{4}$/i.test(hex)) {\n    return true;\n  }\n  return false;\n}\nfunction escapeRegExpCharacters(value) {\n  return value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, \"\\\\$&\");\n}\nvar CachedFn = class {\n  constructor(fn) {\n    this.fn = fn;\n  }\n  cache = /* @__PURE__ */ new Map();\n  get(key) {\n    if (this.cache.has(key)) {\n      return this.cache.get(key);\n    }\n    const value = this.fn(key);\n    this.cache.set(key, value);\n    return value;\n  }\n};\n\n// src/theme.ts\nvar Theme = class {\n  constructor(_colorMap, _defaults, _root) {\n    this._colorMap = _colorMap;\n    this._defaults = _defaults;\n    this._root = _root;\n  }\n  static createFromRawTheme(source, colorMap) {\n    return this.createFromParsedTheme(parseTheme(source), colorMap);\n  }\n  static createFromParsedTheme(source, colorMap) {\n    return resolveParsedThemeRules(source, colorMap);\n  }\n  _cachedMatchRoot = new CachedFn(\n    (scopeName) => this._root.match(scopeName)\n  );\n  getColorMap() {\n    return this._colorMap.getColorMap();\n  }\n  getDefaults() {\n    return this._defaults;\n  }\n  match(scopePath) {\n    if (scopePath === null) {\n      return this._defaults;\n    }\n    const scopeName = scopePath.scopeName;\n    const matchingTrieElements = this._cachedMatchRoot.get(scopeName);\n    const effectiveRule = matchingTrieElements.find(\n      (v) => _scopePathMatchesParentScopes(scopePath.parent, v.parentScopes)\n    );\n    if (!effectiveRule) {\n      return null;\n    }\n    return new StyleAttributes(\n      effectiveRule.fontStyle,\n      effectiveRule.foreground,\n      effectiveRule.background\n    );\n  }\n};\nvar ScopeStack = class _ScopeStack {\n  constructor(parent, scopeName) {\n    this.parent = parent;\n    this.scopeName = scopeName;\n  }\n  static push(path, scopeNames) {\n    for (const name of scopeNames) {\n      path = new _ScopeStack(path, name);\n    }\n    return path;\n  }\n  static from(...segments) {\n    let result = null;\n    for (let i = 0; i < segments.length; i++) {\n      result = new _ScopeStack(result, segments[i]);\n    }\n    return result;\n  }\n  push(scopeName) {\n    return new _ScopeStack(this, scopeName);\n  }\n  getSegments() {\n    let item = this;\n    const result = [];\n    while (item) {\n      result.push(item.scopeName);\n      item = item.parent;\n    }\n    result.reverse();\n    return result;\n  }\n  toString() {\n    return this.getSegments().join(\" \");\n  }\n  extends(other) {\n    if (this === other) {\n      return true;\n    }\n    if (this.parent === null) {\n      return false;\n    }\n    return this.parent.extends(other);\n  }\n  getExtensionIfDefined(base) {\n    const result = [];\n    let item = this;\n    while (item && item !== base) {\n      result.push(item.scopeName);\n      item = item.parent;\n    }\n    return item === base ? result.reverse() : void 0;\n  }\n};\nfunction _scopePathMatchesParentScopes(scopePath, parentScopes) {\n  if (parentScopes.length === 0) {\n    return true;\n  }\n  for (let index = 0; index < parentScopes.length; index++) {\n    let scopePattern = parentScopes[index];\n    let scopeMustMatch = false;\n    if (scopePattern === \">\") {\n      if (index === parentScopes.length - 1) {\n        return false;\n      }\n      scopePattern = parentScopes[++index];\n      scopeMustMatch = true;\n    }\n    while (scopePath) {\n      if (_matchesScope(scopePath.scopeName, scopePattern)) {\n        break;\n      }\n      if (scopeMustMatch) {\n        return false;\n      }\n      scopePath = scopePath.parent;\n    }\n    if (!scopePath) {\n      return false;\n    }\n    scopePath = scopePath.parent;\n  }\n  return true;\n}\nfunction _matchesScope(scopeName, scopePattern) {\n  return scopePattern === scopeName || scopeName.startsWith(scopePattern) && scopeName[scopePattern.length] === \".\";\n}\nvar StyleAttributes = class {\n  constructor(fontStyle, foregroundId, backgroundId) {\n    this.fontStyle = fontStyle;\n    this.foregroundId = foregroundId;\n    this.backgroundId = backgroundId;\n  }\n};\nfunction parseTheme(source) {\n  if (!source) {\n    return [];\n  }\n  if (!source.settings || !Array.isArray(source.settings)) {\n    return [];\n  }\n  let settings = source.settings;\n  let result = [], resultLen = 0;\n  for (let i = 0, len = settings.length; i < len; i++) {\n    let entry = settings[i];\n    if (!entry.settings) {\n      continue;\n    }\n    let scopes;\n    if (typeof entry.scope === \"string\") {\n      let _scope = entry.scope;\n      _scope = _scope.replace(/^[,]+/, \"\");\n      _scope = _scope.replace(/[,]+$/, \"\");\n      scopes = _scope.split(\",\");\n    } else if (Array.isArray(entry.scope)) {\n      scopes = entry.scope;\n    } else {\n      scopes = [\"\"];\n    }\n    let fontStyle = -1 /* NotSet */;\n    if (typeof entry.settings.fontStyle === \"string\") {\n      fontStyle = 0 /* None */;\n      let segments = entry.settings.fontStyle.split(\" \");\n      for (let j = 0, lenJ = segments.length; j < lenJ; j++) {\n        let segment = segments[j];\n        switch (segment) {\n          case \"italic\":\n            fontStyle = fontStyle | 1 /* Italic */;\n            break;\n          case \"bold\":\n            fontStyle = fontStyle | 2 /* Bold */;\n            break;\n          case \"underline\":\n            fontStyle = fontStyle | 4 /* Underline */;\n            break;\n          case \"strikethrough\":\n            fontStyle = fontStyle | 8 /* Strikethrough */;\n            break;\n        }\n      }\n    }\n    let foreground = null;\n    if (typeof entry.settings.foreground === \"string\" && isValidHexColor(entry.settings.foreground)) {\n      foreground = entry.settings.foreground;\n    }\n    let background = null;\n    if (typeof entry.settings.background === \"string\" && isValidHexColor(entry.settings.background)) {\n      background = entry.settings.background;\n    }\n    for (let j = 0, lenJ = scopes.length; j < lenJ; j++) {\n      let _scope = scopes[j].trim();\n      let segments = _scope.split(\" \");\n      let scope = segments[segments.length - 1];\n      let parentScopes = null;\n      if (segments.length > 1) {\n        parentScopes = segments.slice(0, segments.length - 1);\n        parentScopes.reverse();\n      }\n      result[resultLen++] = new ParsedThemeRule(\n        scope,\n        parentScopes,\n        i,\n        fontStyle,\n        foreground,\n        background\n      );\n    }\n  }\n  return result;\n}\nvar ParsedThemeRule = class {\n  constructor(scope, parentScopes, index, fontStyle, foreground, background) {\n    this.scope = scope;\n    this.parentScopes = parentScopes;\n    this.index = index;\n    this.fontStyle = fontStyle;\n    this.foreground = foreground;\n    this.background = background;\n  }\n};\nvar FontStyle = /* @__PURE__ */ ((FontStyle2) => {\n  FontStyle2[FontStyle2[\"NotSet\"] = -1] = \"NotSet\";\n  FontStyle2[FontStyle2[\"None\"] = 0] = \"None\";\n  FontStyle2[FontStyle2[\"Italic\"] = 1] = \"Italic\";\n  FontStyle2[FontStyle2[\"Bold\"] = 2] = \"Bold\";\n  FontStyle2[FontStyle2[\"Underline\"] = 4] = \"Underline\";\n  FontStyle2[FontStyle2[\"Strikethrough\"] = 8] = \"Strikethrough\";\n  return FontStyle2;\n})(FontStyle || {});\nfunction resolveParsedThemeRules(parsedThemeRules, _colorMap) {\n  parsedThemeRules.sort((a, b) => {\n    let r = strcmp(a.scope, b.scope);\n    if (r !== 0) {\n      return r;\n    }\n    r = strArrCmp(a.parentScopes, b.parentScopes);\n    if (r !== 0) {\n      return r;\n    }\n    return a.index - b.index;\n  });\n  let defaultFontStyle = 0 /* None */;\n  let defaultForeground = \"#000000\";\n  let defaultBackground = \"#ffffff\";\n  while (parsedThemeRules.length >= 1 && parsedThemeRules[0].scope === \"\") {\n    let incomingDefaults = parsedThemeRules.shift();\n    if (incomingDefaults.fontStyle !== -1 /* NotSet */) {\n      defaultFontStyle = incomingDefaults.fontStyle;\n    }\n    if (incomingDefaults.foreground !== null) {\n      defaultForeground = incomingDefaults.foreground;\n    }\n    if (incomingDefaults.background !== null) {\n      defaultBackground = incomingDefaults.background;\n    }\n  }\n  let colorMap = new ColorMap(_colorMap);\n  let defaults = new StyleAttributes(defaultFontStyle, colorMap.getId(defaultForeground), colorMap.getId(defaultBackground));\n  let root = new ThemeTrieElement(new ThemeTrieElementRule(0, null, -1 /* NotSet */, 0, 0), []);\n  for (let i = 0, len = parsedThemeRules.length; i < len; i++) {\n    let rule = parsedThemeRules[i];\n    root.insert(0, rule.scope, rule.parentScopes, rule.fontStyle, colorMap.getId(rule.foreground), colorMap.getId(rule.background));\n  }\n  return new Theme(colorMap, defaults, root);\n}\nvar ColorMap = class {\n  _isFrozen;\n  _lastColorId;\n  _id2color;\n  _color2id;\n  constructor(_colorMap) {\n    this._lastColorId = 0;\n    this._id2color = [];\n    this._color2id = /* @__PURE__ */ Object.create(null);\n    if (Array.isArray(_colorMap)) {\n      this._isFrozen = true;\n      for (let i = 0, len = _colorMap.length; i < len; i++) {\n        this._color2id[_colorMap[i]] = i;\n        this._id2color[i] = _colorMap[i];\n      }\n    } else {\n      this._isFrozen = false;\n    }\n  }\n  getId(color) {\n    if (color === null) {\n      return 0;\n    }\n    color = color.toUpperCase();\n    let value = this._color2id[color];\n    if (value) {\n      return value;\n    }\n    if (this._isFrozen) {\n      throw new Error(`Missing color in color map - ${color}`);\n    }\n    value = ++this._lastColorId;\n    this._color2id[color] = value;\n    this._id2color[value] = color;\n    return value;\n  }\n  getColorMap() {\n    return this._id2color.slice(0);\n  }\n};\nvar emptyParentScopes = Object.freeze([]);\nvar ThemeTrieElementRule = class _ThemeTrieElementRule {\n  scopeDepth;\n  parentScopes;\n  fontStyle;\n  foreground;\n  background;\n  constructor(scopeDepth, parentScopes, fontStyle, foreground, background) {\n    this.scopeDepth = scopeDepth;\n    this.parentScopes = parentScopes || emptyParentScopes;\n    this.fontStyle = fontStyle;\n    this.foreground = foreground;\n    this.background = background;\n  }\n  clone() {\n    return new _ThemeTrieElementRule(this.scopeDepth, this.parentScopes, this.fontStyle, this.foreground, this.background);\n  }\n  static cloneArr(arr) {\n    let r = [];\n    for (let i = 0, len = arr.length; i < len; i++) {\n      r[i] = arr[i].clone();\n    }\n    return r;\n  }\n  acceptOverwrite(scopeDepth, fontStyle, foreground, background) {\n    if (this.scopeDepth > scopeDepth) {\n      console.log(\"how did this happen?\");\n    } else {\n      this.scopeDepth = scopeDepth;\n    }\n    if (fontStyle !== -1 /* NotSet */) {\n      this.fontStyle = fontStyle;\n    }\n    if (foreground !== 0) {\n      this.foreground = foreground;\n    }\n    if (background !== 0) {\n      this.background = background;\n    }\n  }\n};\nvar ThemeTrieElement = class _ThemeTrieElement {\n  constructor(_mainRule, rulesWithParentScopes = [], _children = {}) {\n    this._mainRule = _mainRule;\n    this._children = _children;\n    this._rulesWithParentScopes = rulesWithParentScopes;\n  }\n  _rulesWithParentScopes;\n  static _cmpBySpecificity(a, b) {\n    if (a.scopeDepth !== b.scopeDepth) {\n      return b.scopeDepth - a.scopeDepth;\n    }\n    let aParentIndex = 0;\n    let bParentIndex = 0;\n    while (true) {\n      if (a.parentScopes[aParentIndex] === \">\") {\n        aParentIndex++;\n      }\n      if (b.parentScopes[bParentIndex] === \">\") {\n        bParentIndex++;\n      }\n      if (aParentIndex >= a.parentScopes.length || bParentIndex >= b.parentScopes.length) {\n        break;\n      }\n      const parentScopeLengthDiff = b.parentScopes[bParentIndex].length - a.parentScopes[aParentIndex].length;\n      if (parentScopeLengthDiff !== 0) {\n        return parentScopeLengthDiff;\n      }\n      aParentIndex++;\n      bParentIndex++;\n    }\n    return b.parentScopes.length - a.parentScopes.length;\n  }\n  match(scope) {\n    if (scope !== \"\") {\n      let dotIndex = scope.indexOf(\".\");\n      let head;\n      let tail;\n      if (dotIndex === -1) {\n        head = scope;\n        tail = \"\";\n      } else {\n        head = scope.substring(0, dotIndex);\n        tail = scope.substring(dotIndex + 1);\n      }\n      if (this._children.hasOwnProperty(head)) {\n        return this._children[head].match(tail);\n      }\n    }\n    const rules = this._rulesWithParentScopes.concat(this._mainRule);\n    rules.sort(_ThemeTrieElement._cmpBySpecificity);\n    return rules;\n  }\n  insert(scopeDepth, scope, parentScopes, fontStyle, foreground, background) {\n    if (scope === \"\") {\n      this._doInsertHere(scopeDepth, parentScopes, fontStyle, foreground, background);\n      return;\n    }\n    let dotIndex = scope.indexOf(\".\");\n    let head;\n    let tail;\n    if (dotIndex === -1) {\n      head = scope;\n      tail = \"\";\n    } else {\n      head = scope.substring(0, dotIndex);\n      tail = scope.substring(dotIndex + 1);\n    }\n    let child;\n    if (this._children.hasOwnProperty(head)) {\n      child = this._children[head];\n    } else {\n      child = new _ThemeTrieElement(this._mainRule.clone(), ThemeTrieElementRule.cloneArr(this._rulesWithParentScopes));\n      this._children[head] = child;\n    }\n    child.insert(scopeDepth + 1, tail, parentScopes, fontStyle, foreground, background);\n  }\n  _doInsertHere(scopeDepth, parentScopes, fontStyle, foreground, background) {\n    if (parentScopes === null) {\n      this._mainRule.acceptOverwrite(scopeDepth, fontStyle, foreground, background);\n      return;\n    }\n    for (let i = 0, len = this._rulesWithParentScopes.length; i < len; i++) {\n      let rule = this._rulesWithParentScopes[i];\n      if (strArrCmp(rule.parentScopes, parentScopes) === 0) {\n        rule.acceptOverwrite(scopeDepth, fontStyle, foreground, background);\n        return;\n      }\n    }\n    if (fontStyle === -1 /* NotSet */) {\n      fontStyle = this._mainRule.fontStyle;\n    }\n    if (foreground === 0) {\n      foreground = this._mainRule.foreground;\n    }\n    if (background === 0) {\n      background = this._mainRule.background;\n    }\n    this._rulesWithParentScopes.push(new ThemeTrieElementRule(scopeDepth, parentScopes, fontStyle, foreground, background));\n  }\n};\n\n// src/encodedTokenAttributes.ts\nvar EncodedTokenMetadata = class _EncodedTokenMetadata {\n  static toBinaryStr(encodedTokenAttributes) {\n    return encodedTokenAttributes.toString(2).padStart(32, \"0\");\n  }\n  static print(encodedTokenAttributes) {\n    const languageId = _EncodedTokenMetadata.getLanguageId(encodedTokenAttributes);\n    const tokenType = _EncodedTokenMetadata.getTokenType(encodedTokenAttributes);\n    const fontStyle = _EncodedTokenMetadata.getFontStyle(encodedTokenAttributes);\n    const foreground = _EncodedTokenMetadata.getForeground(encodedTokenAttributes);\n    const background = _EncodedTokenMetadata.getBackground(encodedTokenAttributes);\n    console.log({\n      languageId,\n      tokenType,\n      fontStyle,\n      foreground,\n      background\n    });\n  }\n  static getLanguageId(encodedTokenAttributes) {\n    return (encodedTokenAttributes & 255 /* LANGUAGEID_MASK */) >>> 0 /* LANGUAGEID_OFFSET */;\n  }\n  static getTokenType(encodedTokenAttributes) {\n    return (encodedTokenAttributes & 768 /* TOKEN_TYPE_MASK */) >>> 8 /* TOKEN_TYPE_OFFSET */;\n  }\n  static containsBalancedBrackets(encodedTokenAttributes) {\n    return (encodedTokenAttributes & 1024 /* BALANCED_BRACKETS_MASK */) !== 0;\n  }\n  static getFontStyle(encodedTokenAttributes) {\n    return (encodedTokenAttributes & 30720 /* FONT_STYLE_MASK */) >>> 11 /* FONT_STYLE_OFFSET */;\n  }\n  static getForeground(encodedTokenAttributes) {\n    return (encodedTokenAttributes & 16744448 /* FOREGROUND_MASK */) >>> 15 /* FOREGROUND_OFFSET */;\n  }\n  static getBackground(encodedTokenAttributes) {\n    return (encodedTokenAttributes & 4278190080 /* BACKGROUND_MASK */) >>> 24 /* BACKGROUND_OFFSET */;\n  }\n  /**\n   * Updates the fields in `metadata`.\n   * A value of `0`, `NotSet` or `null` indicates that the corresponding field should be left as is.\n   */\n  static set(encodedTokenAttributes, languageId, tokenType, containsBalancedBrackets, fontStyle, foreground, background) {\n    let _languageId = _EncodedTokenMetadata.getLanguageId(encodedTokenAttributes);\n    let _tokenType = _EncodedTokenMetadata.getTokenType(encodedTokenAttributes);\n    let _containsBalancedBracketsBit = _EncodedTokenMetadata.containsBalancedBrackets(encodedTokenAttributes) ? 1 : 0;\n    let _fontStyle = _EncodedTokenMetadata.getFontStyle(encodedTokenAttributes);\n    let _foreground = _EncodedTokenMetadata.getForeground(encodedTokenAttributes);\n    let _background = _EncodedTokenMetadata.getBackground(encodedTokenAttributes);\n    if (languageId !== 0) {\n      _languageId = languageId;\n    }\n    if (tokenType !== 8 /* NotSet */) {\n      _tokenType = fromOptionalTokenType(tokenType);\n    }\n    if (containsBalancedBrackets !== null) {\n      _containsBalancedBracketsBit = containsBalancedBrackets ? 1 : 0;\n    }\n    if (fontStyle !== -1 /* NotSet */) {\n      _fontStyle = fontStyle;\n    }\n    if (foreground !== 0) {\n      _foreground = foreground;\n    }\n    if (background !== 0) {\n      _background = background;\n    }\n    return (_languageId << 0 /* LANGUAGEID_OFFSET */ | _tokenType << 8 /* TOKEN_TYPE_OFFSET */ | _containsBalancedBracketsBit << 10 /* BALANCED_BRACKETS_OFFSET */ | _fontStyle << 11 /* FONT_STYLE_OFFSET */ | _foreground << 15 /* FOREGROUND_OFFSET */ | _background << 24 /* BACKGROUND_OFFSET */) >>> 0;\n  }\n};\nfunction toOptionalTokenType(standardType) {\n  return standardType;\n}\nfunction fromOptionalTokenType(standardType) {\n  return standardType;\n}\n\n// src/matcher.ts\nfunction createMatchers(selector, matchesName) {\n  const results = [];\n  const tokenizer = newTokenizer(selector);\n  let token = tokenizer.next();\n  while (token !== null) {\n    let priority = 0;\n    if (token.length === 2 && token.charAt(1) === \":\") {\n      switch (token.charAt(0)) {\n        case \"R\":\n          priority = 1;\n          break;\n        case \"L\":\n          priority = -1;\n          break;\n        default:\n          console.log(`Unknown priority ${token} in scope selector`);\n      }\n      token = tokenizer.next();\n    }\n    let matcher = parseConjunction();\n    results.push({ matcher, priority });\n    if (token !== \",\") {\n      break;\n    }\n    token = tokenizer.next();\n  }\n  return results;\n  function parseOperand() {\n    if (token === \"-\") {\n      token = tokenizer.next();\n      const expressionToNegate = parseOperand();\n      return (matcherInput) => !!expressionToNegate && !expressionToNegate(matcherInput);\n    }\n    if (token === \"(\") {\n      token = tokenizer.next();\n      const expressionInParents = parseInnerExpression();\n      if (token === \")\") {\n        token = tokenizer.next();\n      }\n      return expressionInParents;\n    }\n    if (isIdentifier(token)) {\n      const identifiers = [];\n      do {\n        identifiers.push(token);\n        token = tokenizer.next();\n      } while (isIdentifier(token));\n      return (matcherInput) => matchesName(identifiers, matcherInput);\n    }\n    return null;\n  }\n  function parseConjunction() {\n    const matchers = [];\n    let matcher = parseOperand();\n    while (matcher) {\n      matchers.push(matcher);\n      matcher = parseOperand();\n    }\n    return (matcherInput) => matchers.every((matcher2) => matcher2(matcherInput));\n  }\n  function parseInnerExpression() {\n    const matchers = [];\n    let matcher = parseConjunction();\n    while (matcher) {\n      matchers.push(matcher);\n      if (token === \"|\" || token === \",\") {\n        do {\n          token = tokenizer.next();\n        } while (token === \"|\" || token === \",\");\n      } else {\n        break;\n      }\n      matcher = parseConjunction();\n    }\n    return (matcherInput) => matchers.some((matcher2) => matcher2(matcherInput));\n  }\n}\nfunction isIdentifier(token) {\n  return !!token && !!token.match(/[\\w\\.:]+/);\n}\nfunction newTokenizer(input) {\n  let regex = /([LR]:|[\\w\\.:][\\w\\.:\\-]*|[\\,\\|\\-\\(\\)])/g;\n  let match = regex.exec(input);\n  return {\n    next: () => {\n      if (!match) {\n        return null;\n      }\n      const res = match[0];\n      match = regex.exec(input);\n      return res;\n    }\n  };\n}\n\n// src/onigLib.ts\nvar FindOption = /* @__PURE__ */ ((FindOption2) => {\n  FindOption2[FindOption2[\"None\"] = 0] = \"None\";\n  FindOption2[FindOption2[\"NotBeginString\"] = 1] = \"NotBeginString\";\n  FindOption2[FindOption2[\"NotEndString\"] = 2] = \"NotEndString\";\n  FindOption2[FindOption2[\"NotBeginPosition\"] = 4] = \"NotBeginPosition\";\n  FindOption2[FindOption2[\"DebugCall\"] = 8] = \"DebugCall\";\n  return FindOption2;\n})(FindOption || {});\nfunction disposeOnigString(str) {\n  if (typeof str.dispose === \"function\") {\n    str.dispose();\n  }\n}\n\n// src/grammar/grammarDependencies.ts\nvar TopLevelRuleReference = class {\n  constructor(scopeName) {\n    this.scopeName = scopeName;\n  }\n  toKey() {\n    return this.scopeName;\n  }\n};\nvar TopLevelRepositoryRuleReference = class {\n  constructor(scopeName, ruleName) {\n    this.scopeName = scopeName;\n    this.ruleName = ruleName;\n  }\n  toKey() {\n    return `${this.scopeName}#${this.ruleName}`;\n  }\n};\nvar ExternalReferenceCollector = class {\n  _references = [];\n  _seenReferenceKeys = /* @__PURE__ */ new Set();\n  get references() {\n    return this._references;\n  }\n  visitedRule = /* @__PURE__ */ new Set();\n  add(reference) {\n    const key = reference.toKey();\n    if (this._seenReferenceKeys.has(key)) {\n      return;\n    }\n    this._seenReferenceKeys.add(key);\n    this._references.push(reference);\n  }\n};\nvar ScopeDependencyProcessor = class {\n  constructor(repo, initialScopeName) {\n    this.repo = repo;\n    this.initialScopeName = initialScopeName;\n    this.seenFullScopeRequests.add(this.initialScopeName);\n    this.Q = [new TopLevelRuleReference(this.initialScopeName)];\n  }\n  seenFullScopeRequests = /* @__PURE__ */ new Set();\n  seenPartialScopeRequests = /* @__PURE__ */ new Set();\n  Q;\n  processQueue() {\n    const q = this.Q;\n    this.Q = [];\n    const deps = new ExternalReferenceCollector();\n    for (const dep of q) {\n      collectReferencesOfReference(dep, this.initialScopeName, this.repo, deps);\n    }\n    for (const dep of deps.references) {\n      if (dep instanceof TopLevelRuleReference) {\n        if (this.seenFullScopeRequests.has(dep.scopeName)) {\n          continue;\n        }\n        this.seenFullScopeRequests.add(dep.scopeName);\n        this.Q.push(dep);\n      } else {\n        if (this.seenFullScopeRequests.has(dep.scopeName)) {\n          continue;\n        }\n        if (this.seenPartialScopeRequests.has(dep.toKey())) {\n          continue;\n        }\n        this.seenPartialScopeRequests.add(dep.toKey());\n        this.Q.push(dep);\n      }\n    }\n  }\n};\nfunction collectReferencesOfReference(reference, baseGrammarScopeName, repo, result) {\n  const selfGrammar = repo.lookup(reference.scopeName);\n  if (!selfGrammar) {\n    if (reference.scopeName === baseGrammarScopeName) {\n      throw new Error(`No grammar provided for <${baseGrammarScopeName}>`);\n    }\n    return;\n  }\n  const baseGrammar = repo.lookup(baseGrammarScopeName);\n  if (reference instanceof TopLevelRuleReference) {\n    collectExternalReferencesInTopLevelRule({ baseGrammar, selfGrammar }, result);\n  } else {\n    collectExternalReferencesInTopLevelRepositoryRule(\n      reference.ruleName,\n      { baseGrammar, selfGrammar, repository: selfGrammar.repository },\n      result\n    );\n  }\n  const injections = repo.injections(reference.scopeName);\n  if (injections) {\n    for (const injection of injections) {\n      result.add(new TopLevelRuleReference(injection));\n    }\n  }\n}\nfunction collectExternalReferencesInTopLevelRepositoryRule(ruleName, context, result) {\n  if (context.repository && context.repository[ruleName]) {\n    const rule = context.repository[ruleName];\n    collectExternalReferencesInRules([rule], context, result);\n  }\n}\nfunction collectExternalReferencesInTopLevelRule(context, result) {\n  if (context.selfGrammar.patterns && Array.isArray(context.selfGrammar.patterns)) {\n    collectExternalReferencesInRules(\n      context.selfGrammar.patterns,\n      { ...context, repository: context.selfGrammar.repository },\n      result\n    );\n  }\n  if (context.selfGrammar.injections) {\n    collectExternalReferencesInRules(\n      Object.values(context.selfGrammar.injections),\n      { ...context, repository: context.selfGrammar.repository },\n      result\n    );\n  }\n}\nfunction collectExternalReferencesInRules(rules, context, result) {\n  for (const rule of rules) {\n    if (result.visitedRule.has(rule)) {\n      continue;\n    }\n    result.visitedRule.add(rule);\n    const patternRepository = rule.repository ? mergeObjects({}, context.repository, rule.repository) : context.repository;\n    if (Array.isArray(rule.patterns)) {\n      collectExternalReferencesInRules(rule.patterns, { ...context, repository: patternRepository }, result);\n    }\n    const include = rule.include;\n    if (!include) {\n      continue;\n    }\n    const reference = parseInclude(include);\n    switch (reference.kind) {\n      case 0 /* Base */:\n        collectExternalReferencesInTopLevelRule({ ...context, selfGrammar: context.baseGrammar }, result);\n        break;\n      case 1 /* Self */:\n        collectExternalReferencesInTopLevelRule(context, result);\n        break;\n      case 2 /* RelativeReference */:\n        collectExternalReferencesInTopLevelRepositoryRule(reference.ruleName, { ...context, repository: patternRepository }, result);\n        break;\n      case 3 /* TopLevelReference */:\n      case 4 /* TopLevelRepositoryReference */:\n        const selfGrammar = reference.scopeName === context.selfGrammar.scopeName ? context.selfGrammar : reference.scopeName === context.baseGrammar.scopeName ? context.baseGrammar : void 0;\n        if (selfGrammar) {\n          const newContext = { baseGrammar: context.baseGrammar, selfGrammar, repository: patternRepository };\n          if (reference.kind === 4 /* TopLevelRepositoryReference */) {\n            collectExternalReferencesInTopLevelRepositoryRule(reference.ruleName, newContext, result);\n          } else {\n            collectExternalReferencesInTopLevelRule(newContext, result);\n          }\n        } else {\n          if (reference.kind === 4 /* TopLevelRepositoryReference */) {\n            result.add(new TopLevelRepositoryRuleReference(reference.scopeName, reference.ruleName));\n          } else {\n            result.add(new TopLevelRuleReference(reference.scopeName));\n          }\n        }\n        break;\n    }\n  }\n}\nvar BaseReference = class {\n  kind = 0 /* Base */;\n};\nvar SelfReference = class {\n  kind = 1 /* Self */;\n};\nvar RelativeReference = class {\n  constructor(ruleName) {\n    this.ruleName = ruleName;\n  }\n  kind = 2 /* RelativeReference */;\n};\nvar TopLevelReference = class {\n  constructor(scopeName) {\n    this.scopeName = scopeName;\n  }\n  kind = 3 /* TopLevelReference */;\n};\nvar TopLevelRepositoryReference = class {\n  constructor(scopeName, ruleName) {\n    this.scopeName = scopeName;\n    this.ruleName = ruleName;\n  }\n  kind = 4 /* TopLevelRepositoryReference */;\n};\nfunction parseInclude(include) {\n  if (include === \"$base\") {\n    return new BaseReference();\n  } else if (include === \"$self\") {\n    return new SelfReference();\n  }\n  const indexOfSharp = include.indexOf(\"#\");\n  if (indexOfSharp === -1) {\n    return new TopLevelReference(include);\n  } else if (indexOfSharp === 0) {\n    return new RelativeReference(include.substring(1));\n  } else {\n    const scopeName = include.substring(0, indexOfSharp);\n    const ruleName = include.substring(indexOfSharp + 1);\n    return new TopLevelRepositoryReference(scopeName, ruleName);\n  }\n}\n\n// src/rule.ts\nvar HAS_BACK_REFERENCES = /\\\\(\\d+)/;\nvar BACK_REFERENCING_END = /\\\\(\\d+)/g;\nvar ruleIdSymbol = Symbol(\"RuleId\");\nvar endRuleId = -1;\nvar whileRuleId = -2;\nfunction ruleIdFromNumber(id) {\n  return id;\n}\nfunction ruleIdToNumber(id) {\n  return id;\n}\nvar Rule = class {\n  $location;\n  id;\n  _nameIsCapturing;\n  _name;\n  _contentNameIsCapturing;\n  _contentName;\n  constructor($location, id, name, contentName) {\n    this.$location = $location;\n    this.id = id;\n    this._name = name || null;\n    this._nameIsCapturing = RegexSource.hasCaptures(this._name);\n    this._contentName = contentName || null;\n    this._contentNameIsCapturing = RegexSource.hasCaptures(this._contentName);\n  }\n  get debugName() {\n    const location = this.$location ? `${basename(this.$location.filename)}:${this.$location.line}` : \"unknown\";\n    return `${this.constructor.name}#${this.id} @ ${location}`;\n  }\n  getName(lineText, captureIndices) {\n    if (!this._nameIsCapturing || this._name === null || lineText === null || captureIndices === null) {\n      return this._name;\n    }\n    return RegexSource.replaceCaptures(this._name, lineText, captureIndices);\n  }\n  getContentName(lineText, captureIndices) {\n    if (!this._contentNameIsCapturing || this._contentName === null) {\n      return this._contentName;\n    }\n    return RegexSource.replaceCaptures(this._contentName, lineText, captureIndices);\n  }\n};\nvar CaptureRule = class extends Rule {\n  retokenizeCapturedWithRuleId;\n  constructor($location, id, name, contentName, retokenizeCapturedWithRuleId) {\n    super($location, id, name, contentName);\n    this.retokenizeCapturedWithRuleId = retokenizeCapturedWithRuleId;\n  }\n  dispose() {\n  }\n  collectPatterns(grammar, out) {\n    throw new Error(\"Not supported!\");\n  }\n  compile(grammar, endRegexSource) {\n    throw new Error(\"Not supported!\");\n  }\n  compileAG(grammar, endRegexSource, allowA, allowG) {\n    throw new Error(\"Not supported!\");\n  }\n};\nvar MatchRule = class extends Rule {\n  _match;\n  captures;\n  _cachedCompiledPatterns;\n  constructor($location, id, name, match, captures) {\n    super($location, id, name, null);\n    this._match = new RegExpSource(match, this.id);\n    this.captures = captures;\n    this._cachedCompiledPatterns = null;\n  }\n  dispose() {\n    if (this._cachedCompiledPatterns) {\n      this._cachedCompiledPatterns.dispose();\n      this._cachedCompiledPatterns = null;\n    }\n  }\n  get debugMatchRegExp() {\n    return `${this._match.source}`;\n  }\n  collectPatterns(grammar, out) {\n    out.push(this._match);\n  }\n  compile(grammar, endRegexSource) {\n    return this._getCachedCompiledPatterns(grammar).compile(grammar);\n  }\n  compileAG(grammar, endRegexSource, allowA, allowG) {\n    return this._getCachedCompiledPatterns(grammar).compileAG(grammar, allowA, allowG);\n  }\n  _getCachedCompiledPatterns(grammar) {\n    if (!this._cachedCompiledPatterns) {\n      this._cachedCompiledPatterns = new RegExpSourceList();\n      this.collectPatterns(grammar, this._cachedCompiledPatterns);\n    }\n    return this._cachedCompiledPatterns;\n  }\n};\nvar IncludeOnlyRule = class extends Rule {\n  hasMissingPatterns;\n  patterns;\n  _cachedCompiledPatterns;\n  constructor($location, id, name, contentName, patterns) {\n    super($location, id, name, contentName);\n    this.patterns = patterns.patterns;\n    this.hasMissingPatterns = patterns.hasMissingPatterns;\n    this._cachedCompiledPatterns = null;\n  }\n  dispose() {\n    if (this._cachedCompiledPatterns) {\n      this._cachedCompiledPatterns.dispose();\n      this._cachedCompiledPatterns = null;\n    }\n  }\n  collectPatterns(grammar, out) {\n    for (const pattern of this.patterns) {\n      const rule = grammar.getRule(pattern);\n      rule.collectPatterns(grammar, out);\n    }\n  }\n  compile(grammar, endRegexSource) {\n    return this._getCachedCompiledPatterns(grammar).compile(grammar);\n  }\n  compileAG(grammar, endRegexSource, allowA, allowG) {\n    return this._getCachedCompiledPatterns(grammar).compileAG(grammar, allowA, allowG);\n  }\n  _getCachedCompiledPatterns(grammar) {\n    if (!this._cachedCompiledPatterns) {\n      this._cachedCompiledPatterns = new RegExpSourceList();\n      this.collectPatterns(grammar, this._cachedCompiledPatterns);\n    }\n    return this._cachedCompiledPatterns;\n  }\n};\nvar BeginEndRule = class extends Rule {\n  _begin;\n  beginCaptures;\n  _end;\n  endHasBackReferences;\n  endCaptures;\n  applyEndPatternLast;\n  hasMissingPatterns;\n  patterns;\n  _cachedCompiledPatterns;\n  constructor($location, id, name, contentName, begin, beginCaptures, end, endCaptures, applyEndPatternLast, patterns) {\n    super($location, id, name, contentName);\n    this._begin = new RegExpSource(begin, this.id);\n    this.beginCaptures = beginCaptures;\n    this._end = new RegExpSource(end ? end : \"\\uFFFF\", -1);\n    this.endHasBackReferences = this._end.hasBackReferences;\n    this.endCaptures = endCaptures;\n    this.applyEndPatternLast = applyEndPatternLast || false;\n    this.patterns = patterns.patterns;\n    this.hasMissingPatterns = patterns.hasMissingPatterns;\n    this._cachedCompiledPatterns = null;\n  }\n  dispose() {\n    if (this._cachedCompiledPatterns) {\n      this._cachedCompiledPatterns.dispose();\n      this._cachedCompiledPatterns = null;\n    }\n  }\n  get debugBeginRegExp() {\n    return `${this._begin.source}`;\n  }\n  get debugEndRegExp() {\n    return `${this._end.source}`;\n  }\n  getEndWithResolvedBackReferences(lineText, captureIndices) {\n    return this._end.resolveBackReferences(lineText, captureIndices);\n  }\n  collectPatterns(grammar, out) {\n    out.push(this._begin);\n  }\n  compile(grammar, endRegexSource) {\n    return this._getCachedCompiledPatterns(grammar, endRegexSource).compile(grammar);\n  }\n  compileAG(grammar, endRegexSource, allowA, allowG) {\n    return this._getCachedCompiledPatterns(grammar, endRegexSource).compileAG(grammar, allowA, allowG);\n  }\n  _getCachedCompiledPatterns(grammar, endRegexSource) {\n    if (!this._cachedCompiledPatterns) {\n      this._cachedCompiledPatterns = new RegExpSourceList();\n      for (const pattern of this.patterns) {\n        const rule = grammar.getRule(pattern);\n        rule.collectPatterns(grammar, this._cachedCompiledPatterns);\n      }\n      if (this.applyEndPatternLast) {\n        this._cachedCompiledPatterns.push(this._end.hasBackReferences ? this._end.clone() : this._end);\n      } else {\n        this._cachedCompiledPatterns.unshift(this._end.hasBackReferences ? this._end.clone() : this._end);\n      }\n    }\n    if (this._end.hasBackReferences) {\n      if (this.applyEndPatternLast) {\n        this._cachedCompiledPatterns.setSource(this._cachedCompiledPatterns.length() - 1, endRegexSource);\n      } else {\n        this._cachedCompiledPatterns.setSource(0, endRegexSource);\n      }\n    }\n    return this._cachedCompiledPatterns;\n  }\n};\nvar BeginWhileRule = class extends Rule {\n  _begin;\n  beginCaptures;\n  whileCaptures;\n  _while;\n  whileHasBackReferences;\n  hasMissingPatterns;\n  patterns;\n  _cachedCompiledPatterns;\n  _cachedCompiledWhilePatterns;\n  constructor($location, id, name, contentName, begin, beginCaptures, _while, whileCaptures, patterns) {\n    super($location, id, name, contentName);\n    this._begin = new RegExpSource(begin, this.id);\n    this.beginCaptures = beginCaptures;\n    this.whileCaptures = whileCaptures;\n    this._while = new RegExpSource(_while, whileRuleId);\n    this.whileHasBackReferences = this._while.hasBackReferences;\n    this.patterns = patterns.patterns;\n    this.hasMissingPatterns = patterns.hasMissingPatterns;\n    this._cachedCompiledPatterns = null;\n    this._cachedCompiledWhilePatterns = null;\n  }\n  dispose() {\n    if (this._cachedCompiledPatterns) {\n      this._cachedCompiledPatterns.dispose();\n      this._cachedCompiledPatterns = null;\n    }\n    if (this._cachedCompiledWhilePatterns) {\n      this._cachedCompiledWhilePatterns.dispose();\n      this._cachedCompiledWhilePatterns = null;\n    }\n  }\n  get debugBeginRegExp() {\n    return `${this._begin.source}`;\n  }\n  get debugWhileRegExp() {\n    return `${this._while.source}`;\n  }\n  getWhileWithResolvedBackReferences(lineText, captureIndices) {\n    return this._while.resolveBackReferences(lineText, captureIndices);\n  }\n  collectPatterns(grammar, out) {\n    out.push(this._begin);\n  }\n  compile(grammar, endRegexSource) {\n    return this._getCachedCompiledPatterns(grammar).compile(grammar);\n  }\n  compileAG(grammar, endRegexSource, allowA, allowG) {\n    return this._getCachedCompiledPatterns(grammar).compileAG(grammar, allowA, allowG);\n  }\n  _getCachedCompiledPatterns(grammar) {\n    if (!this._cachedCompiledPatterns) {\n      this._cachedCompiledPatterns = new RegExpSourceList();\n      for (const pattern of this.patterns) {\n        const rule = grammar.getRule(pattern);\n        rule.collectPatterns(grammar, this._cachedCompiledPatterns);\n      }\n    }\n    return this._cachedCompiledPatterns;\n  }\n  compileWhile(grammar, endRegexSource) {\n    return this._getCachedCompiledWhilePatterns(grammar, endRegexSource).compile(grammar);\n  }\n  compileWhileAG(grammar, endRegexSource, allowA, allowG) {\n    return this._getCachedCompiledWhilePatterns(grammar, endRegexSource).compileAG(grammar, allowA, allowG);\n  }\n  _getCachedCompiledWhilePatterns(grammar, endRegexSource) {\n    if (!this._cachedCompiledWhilePatterns) {\n      this._cachedCompiledWhilePatterns = new RegExpSourceList();\n      this._cachedCompiledWhilePatterns.push(this._while.hasBackReferences ? this._while.clone() : this._while);\n    }\n    if (this._while.hasBackReferences) {\n      this._cachedCompiledWhilePatterns.setSource(0, endRegexSource ? endRegexSource : \"\\uFFFF\");\n    }\n    return this._cachedCompiledWhilePatterns;\n  }\n};\nvar RuleFactory = class _RuleFactory {\n  static createCaptureRule(helper, $location, name, contentName, retokenizeCapturedWithRuleId) {\n    return helper.registerRule((id) => {\n      return new CaptureRule($location, id, name, contentName, retokenizeCapturedWithRuleId);\n    });\n  }\n  static getCompiledRuleId(desc, helper, repository) {\n    if (!desc.id) {\n      helper.registerRule((id) => {\n        desc.id = id;\n        if (desc.match) {\n          return new MatchRule(\n            desc.$vscodeTextmateLocation,\n            desc.id,\n            desc.name,\n            desc.match,\n            _RuleFactory._compileCaptures(desc.captures, helper, repository)\n          );\n        }\n        if (typeof desc.begin === \"undefined\") {\n          if (desc.repository) {\n            repository = mergeObjects({}, repository, desc.repository);\n          }\n          let patterns = desc.patterns;\n          if (typeof patterns === \"undefined\" && desc.include) {\n            patterns = [{ include: desc.include }];\n          }\n          return new IncludeOnlyRule(\n            desc.$vscodeTextmateLocation,\n            desc.id,\n            desc.name,\n            desc.contentName,\n            _RuleFactory._compilePatterns(patterns, helper, repository)\n          );\n        }\n        if (desc.while) {\n          return new BeginWhileRule(\n            desc.$vscodeTextmateLocation,\n            desc.id,\n            desc.name,\n            desc.contentName,\n            desc.begin,\n            _RuleFactory._compileCaptures(desc.beginCaptures || desc.captures, helper, repository),\n            desc.while,\n            _RuleFactory._compileCaptures(desc.whileCaptures || desc.captures, helper, repository),\n            _RuleFactory._compilePatterns(desc.patterns, helper, repository)\n          );\n        }\n        return new BeginEndRule(\n          desc.$vscodeTextmateLocation,\n          desc.id,\n          desc.name,\n          desc.contentName,\n          desc.begin,\n          _RuleFactory._compileCaptures(desc.beginCaptures || desc.captures, helper, repository),\n          desc.end,\n          _RuleFactory._compileCaptures(desc.endCaptures || desc.captures, helper, repository),\n          desc.applyEndPatternLast,\n          _RuleFactory._compilePatterns(desc.patterns, helper, repository)\n        );\n      });\n    }\n    return desc.id;\n  }\n  static _compileCaptures(captures, helper, repository) {\n    let r = [];\n    if (captures) {\n      let maximumCaptureId = 0;\n      for (const captureId in captures) {\n        if (captureId === \"$vscodeTextmateLocation\") {\n          continue;\n        }\n        const numericCaptureId = parseInt(captureId, 10);\n        if (numericCaptureId > maximumCaptureId) {\n          maximumCaptureId = numericCaptureId;\n        }\n      }\n      for (let i = 0; i <= maximumCaptureId; i++) {\n        r[i] = null;\n      }\n      for (const captureId in captures) {\n        if (captureId === \"$vscodeTextmateLocation\") {\n          continue;\n        }\n        const numericCaptureId = parseInt(captureId, 10);\n        let retokenizeCapturedWithRuleId = 0;\n        if (captures[captureId].patterns) {\n          retokenizeCapturedWithRuleId = _RuleFactory.getCompiledRuleId(captures[captureId], helper, repository);\n        }\n        r[numericCaptureId] = _RuleFactory.createCaptureRule(helper, captures[captureId].$vscodeTextmateLocation, captures[captureId].name, captures[captureId].contentName, retokenizeCapturedWithRuleId);\n      }\n    }\n    return r;\n  }\n  static _compilePatterns(patterns, helper, repository) {\n    let r = [];\n    if (patterns) {\n      for (let i = 0, len = patterns.length; i < len; i++) {\n        const pattern = patterns[i];\n        let ruleId = -1;\n        if (pattern.include) {\n          const reference = parseInclude(pattern.include);\n          switch (reference.kind) {\n            case 0 /* Base */:\n            case 1 /* Self */:\n              ruleId = _RuleFactory.getCompiledRuleId(repository[pattern.include], helper, repository);\n              break;\n            case 2 /* RelativeReference */:\n              let localIncludedRule = repository[reference.ruleName];\n              if (localIncludedRule) {\n                ruleId = _RuleFactory.getCompiledRuleId(localIncludedRule, helper, repository);\n              } else {\n              }\n              break;\n            case 3 /* TopLevelReference */:\n            case 4 /* TopLevelRepositoryReference */:\n              const externalGrammarName = reference.scopeName;\n              const externalGrammarInclude = reference.kind === 4 /* TopLevelRepositoryReference */ ? reference.ruleName : null;\n              const externalGrammar = helper.getExternalGrammar(externalGrammarName, repository);\n              if (externalGrammar) {\n                if (externalGrammarInclude) {\n                  let externalIncludedRule = externalGrammar.repository[externalGrammarInclude];\n                  if (externalIncludedRule) {\n                    ruleId = _RuleFactory.getCompiledRuleId(externalIncludedRule, helper, externalGrammar.repository);\n                  } else {\n                  }\n                } else {\n                  ruleId = _RuleFactory.getCompiledRuleId(externalGrammar.repository.$self, helper, externalGrammar.repository);\n                }\n              } else {\n              }\n              break;\n          }\n        } else {\n          ruleId = _RuleFactory.getCompiledRuleId(pattern, helper, repository);\n        }\n        if (ruleId !== -1) {\n          const rule = helper.getRule(ruleId);\n          let skipRule = false;\n          if (rule instanceof IncludeOnlyRule || rule instanceof BeginEndRule || rule instanceof BeginWhileRule) {\n            if (rule.hasMissingPatterns && rule.patterns.length === 0) {\n              skipRule = true;\n            }\n          }\n          if (skipRule) {\n            continue;\n          }\n          r.push(ruleId);\n        }\n      }\n    }\n    return {\n      patterns: r,\n      hasMissingPatterns: (patterns ? patterns.length : 0) !== r.length\n    };\n  }\n};\nvar RegExpSource = class _RegExpSource {\n  source;\n  ruleId;\n  hasAnchor;\n  hasBackReferences;\n  _anchorCache;\n  constructor(regExpSource, ruleId) {\n    if (regExpSource && typeof regExpSource === \"string\") {\n      const len = regExpSource.length;\n      let lastPushedPos = 0;\n      let output = [];\n      let hasAnchor = false;\n      for (let pos = 0; pos < len; pos++) {\n        const ch = regExpSource.charAt(pos);\n        if (ch === \"\\\\\") {\n          if (pos + 1 < len) {\n            const nextCh = regExpSource.charAt(pos + 1);\n            if (nextCh === \"z\") {\n              output.push(regExpSource.substring(lastPushedPos, pos));\n              output.push(\"$(?!\\\\n)(?<!\\\\n)\");\n              lastPushedPos = pos + 2;\n            } else if (nextCh === \"A\" || nextCh === \"G\") {\n              hasAnchor = true;\n            }\n            pos++;\n          }\n        }\n      }\n      this.hasAnchor = hasAnchor;\n      if (lastPushedPos === 0) {\n        this.source = regExpSource;\n      } else {\n        output.push(regExpSource.substring(lastPushedPos, len));\n        this.source = output.join(\"\");\n      }\n    } else {\n      this.hasAnchor = false;\n      this.source = regExpSource;\n    }\n    if (this.hasAnchor) {\n      this._anchorCache = this._buildAnchorCache();\n    } else {\n      this._anchorCache = null;\n    }\n    this.ruleId = ruleId;\n    if (typeof this.source === \"string\") {\n      this.hasBackReferences = HAS_BACK_REFERENCES.test(this.source);\n    } else {\n      this.hasBackReferences = false;\n    }\n  }\n  clone() {\n    return new _RegExpSource(this.source, this.ruleId);\n  }\n  setSource(newSource) {\n    if (this.source === newSource) {\n      return;\n    }\n    this.source = newSource;\n    if (this.hasAnchor) {\n      this._anchorCache = this._buildAnchorCache();\n    }\n  }\n  resolveBackReferences(lineText, captureIndices) {\n    if (typeof this.source !== \"string\") {\n      throw new Error(\"This method should only be called if the source is a string\");\n    }\n    let capturedValues = captureIndices.map((capture) => {\n      return lineText.substring(capture.start, capture.end);\n    });\n    BACK_REFERENCING_END.lastIndex = 0;\n    return this.source.replace(BACK_REFERENCING_END, (match, g1) => {\n      return escapeRegExpCharacters(capturedValues[parseInt(g1, 10)] || \"\");\n    });\n  }\n  _buildAnchorCache() {\n    if (typeof this.source !== \"string\") {\n      throw new Error(\"This method should only be called if the source is a string\");\n    }\n    let A0_G0_result = [];\n    let A0_G1_result = [];\n    let A1_G0_result = [];\n    let A1_G1_result = [];\n    let pos, len, ch, nextCh;\n    for (pos = 0, len = this.source.length; pos < len; pos++) {\n      ch = this.source.charAt(pos);\n      A0_G0_result[pos] = ch;\n      A0_G1_result[pos] = ch;\n      A1_G0_result[pos] = ch;\n      A1_G1_result[pos] = ch;\n      if (ch === \"\\\\\") {\n        if (pos + 1 < len) {\n          nextCh = this.source.charAt(pos + 1);\n          if (nextCh === \"A\") {\n            A0_G0_result[pos + 1] = \"\\uFFFF\";\n            A0_G1_result[pos + 1] = \"\\uFFFF\";\n            A1_G0_result[pos + 1] = \"A\";\n            A1_G1_result[pos + 1] = \"A\";\n          } else if (nextCh === \"G\") {\n            A0_G0_result[pos + 1] = \"\\uFFFF\";\n            A0_G1_result[pos + 1] = \"G\";\n            A1_G0_result[pos + 1] = \"\\uFFFF\";\n            A1_G1_result[pos + 1] = \"G\";\n          } else {\n            A0_G0_result[pos + 1] = nextCh;\n            A0_G1_result[pos + 1] = nextCh;\n            A1_G0_result[pos + 1] = nextCh;\n            A1_G1_result[pos + 1] = nextCh;\n          }\n          pos++;\n        }\n      }\n    }\n    return {\n      A0_G0: A0_G0_result.join(\"\"),\n      A0_G1: A0_G1_result.join(\"\"),\n      A1_G0: A1_G0_result.join(\"\"),\n      A1_G1: A1_G1_result.join(\"\")\n    };\n  }\n  resolveAnchors(allowA, allowG) {\n    if (!this.hasAnchor || !this._anchorCache || typeof this.source !== \"string\") {\n      return this.source;\n    }\n    if (allowA) {\n      if (allowG) {\n        return this._anchorCache.A1_G1;\n      } else {\n        return this._anchorCache.A1_G0;\n      }\n    } else {\n      if (allowG) {\n        return this._anchorCache.A0_G1;\n      } else {\n        return this._anchorCache.A0_G0;\n      }\n    }\n  }\n};\nvar RegExpSourceList = class {\n  _items;\n  _hasAnchors;\n  _cached;\n  _anchorCache;\n  constructor() {\n    this._items = [];\n    this._hasAnchors = false;\n    this._cached = null;\n    this._anchorCache = {\n      A0_G0: null,\n      A0_G1: null,\n      A1_G0: null,\n      A1_G1: null\n    };\n  }\n  dispose() {\n    this._disposeCaches();\n  }\n  _disposeCaches() {\n    if (this._cached) {\n      this._cached.dispose();\n      this._cached = null;\n    }\n    if (this._anchorCache.A0_G0) {\n      this._anchorCache.A0_G0.dispose();\n      this._anchorCache.A0_G0 = null;\n    }\n    if (this._anchorCache.A0_G1) {\n      this._anchorCache.A0_G1.dispose();\n      this._anchorCache.A0_G1 = null;\n    }\n    if (this._anchorCache.A1_G0) {\n      this._anchorCache.A1_G0.dispose();\n      this._anchorCache.A1_G0 = null;\n    }\n    if (this._anchorCache.A1_G1) {\n      this._anchorCache.A1_G1.dispose();\n      this._anchorCache.A1_G1 = null;\n    }\n  }\n  push(item) {\n    this._items.push(item);\n    this._hasAnchors = this._hasAnchors || item.hasAnchor;\n  }\n  unshift(item) {\n    this._items.unshift(item);\n    this._hasAnchors = this._hasAnchors || item.hasAnchor;\n  }\n  length() {\n    return this._items.length;\n  }\n  setSource(index, newSource) {\n    if (this._items[index].source !== newSource) {\n      this._disposeCaches();\n      this._items[index].setSource(newSource);\n    }\n  }\n  compile(onigLib) {\n    if (!this._cached) {\n      let regExps = this._items.map((e) => e.source);\n      this._cached = new CompiledRule(onigLib, regExps, this._items.map((e) => e.ruleId));\n    }\n    return this._cached;\n  }\n  compileAG(onigLib, allowA, allowG) {\n    if (!this._hasAnchors) {\n      return this.compile(onigLib);\n    } else {\n      if (allowA) {\n        if (allowG) {\n          if (!this._anchorCache.A1_G1) {\n            this._anchorCache.A1_G1 = this._resolveAnchors(onigLib, allowA, allowG);\n          }\n          return this._anchorCache.A1_G1;\n        } else {\n          if (!this._anchorCache.A1_G0) {\n            this._anchorCache.A1_G0 = this._resolveAnchors(onigLib, allowA, allowG);\n          }\n          return this._anchorCache.A1_G0;\n        }\n      } else {\n        if (allowG) {\n          if (!this._anchorCache.A0_G1) {\n            this._anchorCache.A0_G1 = this._resolveAnchors(onigLib, allowA, allowG);\n          }\n          return this._anchorCache.A0_G1;\n        } else {\n          if (!this._anchorCache.A0_G0) {\n            this._anchorCache.A0_G0 = this._resolveAnchors(onigLib, allowA, allowG);\n          }\n          return this._anchorCache.A0_G0;\n        }\n      }\n    }\n  }\n  _resolveAnchors(onigLib, allowA, allowG) {\n    let regExps = this._items.map((e) => e.resolveAnchors(allowA, allowG));\n    return new CompiledRule(onigLib, regExps, this._items.map((e) => e.ruleId));\n  }\n};\nvar CompiledRule = class {\n  constructor(onigLib, regExps, rules) {\n    this.regExps = regExps;\n    this.rules = rules;\n    this.scanner = onigLib.createOnigScanner(regExps);\n  }\n  scanner;\n  dispose() {\n    if (typeof this.scanner.dispose === \"function\") {\n      this.scanner.dispose();\n    }\n  }\n  toString() {\n    const r = [];\n    for (let i = 0, len = this.rules.length; i < len; i++) {\n      r.push(\"   - \" + this.rules[i] + \": \" + this.regExps[i]);\n    }\n    return r.join(\"\\n\");\n  }\n  findNextMatchSync(string, startPosition, options) {\n    const result = this.scanner.findNextMatchSync(string, startPosition, options);\n    if (!result) {\n      return null;\n    }\n    return {\n      ruleId: this.rules[result.index],\n      captureIndices: result.captureIndices\n    };\n  }\n};\n\n// src/grammar/basicScopesAttributeProvider.ts\nvar BasicScopeAttributes = class {\n  constructor(languageId, tokenType) {\n    this.languageId = languageId;\n    this.tokenType = tokenType;\n  }\n};\nvar BasicScopeAttributesProvider = class _BasicScopeAttributesProvider {\n  _defaultAttributes;\n  _embeddedLanguagesMatcher;\n  constructor(initialLanguageId, embeddedLanguages) {\n    this._defaultAttributes = new BasicScopeAttributes(initialLanguageId, 8 /* NotSet */);\n    this._embeddedLanguagesMatcher = new ScopeMatcher(Object.entries(embeddedLanguages || {}));\n  }\n  getDefaultAttributes() {\n    return this._defaultAttributes;\n  }\n  getBasicScopeAttributes(scopeName) {\n    if (scopeName === null) {\n      return _BasicScopeAttributesProvider._NULL_SCOPE_METADATA;\n    }\n    return this._getBasicScopeAttributes.get(scopeName);\n  }\n  static _NULL_SCOPE_METADATA = new BasicScopeAttributes(0, 0);\n  _getBasicScopeAttributes = new CachedFn((scopeName) => {\n    const languageId = this._scopeToLanguage(scopeName);\n    const standardTokenType = this._toStandardTokenType(scopeName);\n    return new BasicScopeAttributes(languageId, standardTokenType);\n  });\n  /**\n   * Given a produced TM scope, return the language that token describes or null if unknown.\n   * e.g. source.html => html, source.css.embedded.html => css, punctuation.definition.tag.html => null\n   */\n  _scopeToLanguage(scope) {\n    return this._embeddedLanguagesMatcher.match(scope) || 0;\n  }\n  _toStandardTokenType(scopeName) {\n    const m = scopeName.match(_BasicScopeAttributesProvider.STANDARD_TOKEN_TYPE_REGEXP);\n    if (!m) {\n      return 8 /* NotSet */;\n    }\n    switch (m[1]) {\n      case \"comment\":\n        return 1 /* Comment */;\n      case \"string\":\n        return 2 /* String */;\n      case \"regex\":\n        return 3 /* RegEx */;\n      case \"meta.embedded\":\n        return 0 /* Other */;\n    }\n    throw new Error(\"Unexpected match for standard token type!\");\n  }\n  static STANDARD_TOKEN_TYPE_REGEXP = /\\b(comment|string|regex|meta\\.embedded)\\b/;\n};\nvar ScopeMatcher = class {\n  values;\n  scopesRegExp;\n  constructor(values) {\n    if (values.length === 0) {\n      this.values = null;\n      this.scopesRegExp = null;\n    } else {\n      this.values = new Map(values);\n      const escapedScopes = values.map(\n        ([scopeName, value]) => escapeRegExpCharacters(scopeName)\n      );\n      escapedScopes.sort();\n      escapedScopes.reverse();\n      this.scopesRegExp = new RegExp(\n        `^((${escapedScopes.join(\")|(\")}))($|\\\\.)`,\n        \"\"\n      );\n    }\n  }\n  match(scope) {\n    if (!this.scopesRegExp) {\n      return void 0;\n    }\n    const m = scope.match(this.scopesRegExp);\n    if (!m) {\n      return void 0;\n    }\n    return this.values.get(m[1]);\n  }\n};\n\n// src/debug.ts\nvar DebugFlags = {\n  InDebugMode: typeof process !== \"undefined\" && !!process.env[\"VSCODE_TEXTMATE_DEBUG\"]\n};\nvar UseOnigurumaFindOptions = false;\n\n// src/grammar/tokenizeString.ts\nvar TokenizeStringResult = class {\n  constructor(stack, stoppedEarly) {\n    this.stack = stack;\n    this.stoppedEarly = stoppedEarly;\n  }\n};\nfunction _tokenizeString(grammar, lineText, isFirstLine, linePos, stack, lineTokens, checkWhileConditions, timeLimit) {\n  const lineLength = lineText.content.length;\n  let STOP = false;\n  let anchorPosition = -1;\n  if (checkWhileConditions) {\n    const whileCheckResult = _checkWhileConditions(\n      grammar,\n      lineText,\n      isFirstLine,\n      linePos,\n      stack,\n      lineTokens\n    );\n    stack = whileCheckResult.stack;\n    linePos = whileCheckResult.linePos;\n    isFirstLine = whileCheckResult.isFirstLine;\n    anchorPosition = whileCheckResult.anchorPosition;\n  }\n  const startTime = Date.now();\n  while (!STOP) {\n    if (timeLimit !== 0) {\n      const elapsedTime = Date.now() - startTime;\n      if (elapsedTime > timeLimit) {\n        return new TokenizeStringResult(stack, true);\n      }\n    }\n    scanNext();\n  }\n  return new TokenizeStringResult(stack, false);\n  function scanNext() {\n    if (false) {\n      console.log(\"\");\n      console.log(\n        `@@scanNext ${linePos}: |${lineText.content.substr(linePos).replace(/\\n$/, \"\\\\n\")}|`\n      );\n    }\n    const r = matchRuleOrInjections(\n      grammar,\n      lineText,\n      isFirstLine,\n      linePos,\n      stack,\n      anchorPosition\n    );\n    if (!r) {\n      lineTokens.produce(stack, lineLength);\n      STOP = true;\n      return;\n    }\n    const captureIndices = r.captureIndices;\n    const matchedRuleId = r.matchedRuleId;\n    const hasAdvanced = captureIndices && captureIndices.length > 0 ? captureIndices[0].end > linePos : false;\n    if (matchedRuleId === endRuleId) {\n      const poppedRule = stack.getRule(grammar);\n      if (false) {\n        console.log(\n          \"  popping \" + poppedRule.debugName + \" - \" + poppedRule.debugEndRegExp\n        );\n      }\n      lineTokens.produce(stack, captureIndices[0].start);\n      stack = stack.withContentNameScopesList(stack.nameScopesList);\n      handleCaptures(\n        grammar,\n        lineText,\n        isFirstLine,\n        stack,\n        lineTokens,\n        poppedRule.endCaptures,\n        captureIndices\n      );\n      lineTokens.produce(stack, captureIndices[0].end);\n      const popped = stack;\n      stack = stack.parent;\n      anchorPosition = popped.getAnchorPos();\n      if (!hasAdvanced && popped.getEnterPos() === linePos) {\n        if (false) {\n          console.error(\n            \"[1] - Grammar is in an endless loop - Grammar pushed & popped a rule without advancing\"\n          );\n        }\n        stack = popped;\n        lineTokens.produce(stack, lineLength);\n        STOP = true;\n        return;\n      }\n    } else {\n      const _rule = grammar.getRule(matchedRuleId);\n      lineTokens.produce(stack, captureIndices[0].start);\n      const beforePush = stack;\n      const scopeName = _rule.getName(lineText.content, captureIndices);\n      const nameScopesList = stack.contentNameScopesList.pushAttributed(\n        scopeName,\n        grammar\n      );\n      stack = stack.push(\n        matchedRuleId,\n        linePos,\n        anchorPosition,\n        captureIndices[0].end === lineLength,\n        null,\n        nameScopesList,\n        nameScopesList\n      );\n      if (_rule instanceof BeginEndRule) {\n        const pushedRule = _rule;\n        if (false) {\n          console.log(\n            \"  pushing \" + pushedRule.debugName + \" - \" + pushedRule.debugBeginRegExp\n          );\n        }\n        handleCaptures(\n          grammar,\n          lineText,\n          isFirstLine,\n          stack,\n          lineTokens,\n          pushedRule.beginCaptures,\n          captureIndices\n        );\n        lineTokens.produce(stack, captureIndices[0].end);\n        anchorPosition = captureIndices[0].end;\n        const contentName = pushedRule.getContentName(\n          lineText.content,\n          captureIndices\n        );\n        const contentNameScopesList = nameScopesList.pushAttributed(\n          contentName,\n          grammar\n        );\n        stack = stack.withContentNameScopesList(contentNameScopesList);\n        if (pushedRule.endHasBackReferences) {\n          stack = stack.withEndRule(\n            pushedRule.getEndWithResolvedBackReferences(\n              lineText.content,\n              captureIndices\n            )\n          );\n        }\n        if (!hasAdvanced && beforePush.hasSameRuleAs(stack)) {\n          if (false) {\n            console.error(\n              \"[2] - Grammar is in an endless loop - Grammar pushed the same rule without advancing\"\n            );\n          }\n          stack = stack.pop();\n          lineTokens.produce(stack, lineLength);\n          STOP = true;\n          return;\n        }\n      } else if (_rule instanceof BeginWhileRule) {\n        const pushedRule = _rule;\n        if (false) {\n          console.log(\"  pushing \" + pushedRule.debugName);\n        }\n        handleCaptures(\n          grammar,\n          lineText,\n          isFirstLine,\n          stack,\n          lineTokens,\n          pushedRule.beginCaptures,\n          captureIndices\n        );\n        lineTokens.produce(stack, captureIndices[0].end);\n        anchorPosition = captureIndices[0].end;\n        const contentName = pushedRule.getContentName(\n          lineText.content,\n          captureIndices\n        );\n        const contentNameScopesList = nameScopesList.pushAttributed(\n          contentName,\n          grammar\n        );\n        stack = stack.withContentNameScopesList(contentNameScopesList);\n        if (pushedRule.whileHasBackReferences) {\n          stack = stack.withEndRule(\n            pushedRule.getWhileWithResolvedBackReferences(\n              lineText.content,\n              captureIndices\n            )\n          );\n        }\n        if (!hasAdvanced && beforePush.hasSameRuleAs(stack)) {\n          if (false) {\n            console.error(\n              \"[3] - Grammar is in an endless loop - Grammar pushed the same rule without advancing\"\n            );\n          }\n          stack = stack.pop();\n          lineTokens.produce(stack, lineLength);\n          STOP = true;\n          return;\n        }\n      } else {\n        const matchingRule = _rule;\n        if (false) {\n          console.log(\n            \"  matched \" + matchingRule.debugName + \" - \" + matchingRule.debugMatchRegExp\n          );\n        }\n        handleCaptures(\n          grammar,\n          lineText,\n          isFirstLine,\n          stack,\n          lineTokens,\n          matchingRule.captures,\n          captureIndices\n        );\n        lineTokens.produce(stack, captureIndices[0].end);\n        stack = stack.pop();\n        if (!hasAdvanced) {\n          if (false) {\n            console.error(\n              \"[4] - Grammar is in an endless loop - Grammar is not advancing, nor is it pushing/popping\"\n            );\n          }\n          stack = stack.safePop();\n          lineTokens.produce(stack, lineLength);\n          STOP = true;\n          return;\n        }\n      }\n    }\n    if (captureIndices[0].end > linePos) {\n      linePos = captureIndices[0].end;\n      isFirstLine = false;\n    }\n  }\n}\nfunction _checkWhileConditions(grammar, lineText, isFirstLine, linePos, stack, lineTokens) {\n  let anchorPosition = stack.beginRuleCapturedEOL ? 0 : -1;\n  const whileRules = [];\n  for (let node = stack; node; node = node.pop()) {\n    const nodeRule = node.getRule(grammar);\n    if (nodeRule instanceof BeginWhileRule) {\n      whileRules.push({\n        rule: nodeRule,\n        stack: node\n      });\n    }\n  }\n  for (let whileRule = whileRules.pop(); whileRule; whileRule = whileRules.pop()) {\n    const { ruleScanner, findOptions } = prepareRuleWhileSearch(whileRule.rule, grammar, whileRule.stack.endRule, isFirstLine, linePos === anchorPosition);\n    const r = ruleScanner.findNextMatchSync(lineText, linePos, findOptions);\n    if (false) {\n      console.log(\"  scanning for while rule\");\n      console.log(ruleScanner.toString());\n    }\n    if (r) {\n      const matchedRuleId = r.ruleId;\n      if (matchedRuleId !== whileRuleId) {\n        stack = whileRule.stack.pop();\n        break;\n      }\n      if (r.captureIndices && r.captureIndices.length) {\n        lineTokens.produce(whileRule.stack, r.captureIndices[0].start);\n        handleCaptures(grammar, lineText, isFirstLine, whileRule.stack, lineTokens, whileRule.rule.whileCaptures, r.captureIndices);\n        lineTokens.produce(whileRule.stack, r.captureIndices[0].end);\n        anchorPosition = r.captureIndices[0].end;\n        if (r.captureIndices[0].end > linePos) {\n          linePos = r.captureIndices[0].end;\n          isFirstLine = false;\n        }\n      }\n    } else {\n      if (false) {\n        console.log(\"  popping \" + whileRule.rule.debugName + \" - \" + whileRule.rule.debugWhileRegExp);\n      }\n      stack = whileRule.stack.pop();\n      break;\n    }\n  }\n  return { stack, linePos, anchorPosition, isFirstLine };\n}\nfunction matchRuleOrInjections(grammar, lineText, isFirstLine, linePos, stack, anchorPosition) {\n  const matchResult = matchRule(grammar, lineText, isFirstLine, linePos, stack, anchorPosition);\n  const injections = grammar.getInjections();\n  if (injections.length === 0) {\n    return matchResult;\n  }\n  const injectionResult = matchInjections(injections, grammar, lineText, isFirstLine, linePos, stack, anchorPosition);\n  if (!injectionResult) {\n    return matchResult;\n  }\n  if (!matchResult) {\n    return injectionResult;\n  }\n  const matchResultScore = matchResult.captureIndices[0].start;\n  const injectionResultScore = injectionResult.captureIndices[0].start;\n  if (injectionResultScore < matchResultScore || injectionResult.priorityMatch && injectionResultScore === matchResultScore) {\n    return injectionResult;\n  }\n  return matchResult;\n}\nfunction matchRule(grammar, lineText, isFirstLine, linePos, stack, anchorPosition) {\n  const rule = stack.getRule(grammar);\n  const { ruleScanner, findOptions } = prepareRuleSearch(rule, grammar, stack.endRule, isFirstLine, linePos === anchorPosition);\n  const r = ruleScanner.findNextMatchSync(lineText, linePos, findOptions);\n  if (r) {\n    return {\n      captureIndices: r.captureIndices,\n      matchedRuleId: r.ruleId\n    };\n  }\n  return null;\n}\nfunction matchInjections(injections, grammar, lineText, isFirstLine, linePos, stack, anchorPosition) {\n  let bestMatchRating = Number.MAX_VALUE;\n  let bestMatchCaptureIndices = null;\n  let bestMatchRuleId;\n  let bestMatchResultPriority = 0;\n  const scopes = stack.contentNameScopesList.getScopeNames();\n  for (let i = 0, len = injections.length; i < len; i++) {\n    const injection = injections[i];\n    if (!injection.matcher(scopes)) {\n      continue;\n    }\n    const rule = grammar.getRule(injection.ruleId);\n    const { ruleScanner, findOptions } = prepareRuleSearch(rule, grammar, null, isFirstLine, linePos === anchorPosition);\n    const matchResult = ruleScanner.findNextMatchSync(lineText, linePos, findOptions);\n    if (!matchResult) {\n      continue;\n    }\n    if (false) {\n      console.log(`  matched injection: ${injection.debugSelector}`);\n      console.log(ruleScanner.toString());\n    }\n    const matchRating = matchResult.captureIndices[0].start;\n    if (matchRating >= bestMatchRating) {\n      continue;\n    }\n    bestMatchRating = matchRating;\n    bestMatchCaptureIndices = matchResult.captureIndices;\n    bestMatchRuleId = matchResult.ruleId;\n    bestMatchResultPriority = injection.priority;\n    if (bestMatchRating === linePos) {\n      break;\n    }\n  }\n  if (bestMatchCaptureIndices) {\n    return {\n      priorityMatch: bestMatchResultPriority === -1,\n      captureIndices: bestMatchCaptureIndices,\n      matchedRuleId: bestMatchRuleId\n    };\n  }\n  return null;\n}\nfunction prepareRuleSearch(rule, grammar, endRegexSource, allowA, allowG) {\n  if (UseOnigurumaFindOptions) {\n    const ruleScanner2 = rule.compile(grammar, endRegexSource);\n    const findOptions = getFindOptions(allowA, allowG);\n    return { ruleScanner: ruleScanner2, findOptions };\n  }\n  const ruleScanner = rule.compileAG(grammar, endRegexSource, allowA, allowG);\n  return { ruleScanner, findOptions: 0 /* None */ };\n}\nfunction prepareRuleWhileSearch(rule, grammar, endRegexSource, allowA, allowG) {\n  if (UseOnigurumaFindOptions) {\n    const ruleScanner2 = rule.compileWhile(grammar, endRegexSource);\n    const findOptions = getFindOptions(allowA, allowG);\n    return { ruleScanner: ruleScanner2, findOptions };\n  }\n  const ruleScanner = rule.compileWhileAG(grammar, endRegexSource, allowA, allowG);\n  return { ruleScanner, findOptions: 0 /* None */ };\n}\nfunction getFindOptions(allowA, allowG) {\n  let options = 0 /* None */;\n  if (!allowA) {\n    options |= 1 /* NotBeginString */;\n  }\n  if (!allowG) {\n    options |= 4 /* NotBeginPosition */;\n  }\n  return options;\n}\nfunction handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, captures, captureIndices) {\n  if (captures.length === 0) {\n    return;\n  }\n  const lineTextContent = lineText.content;\n  const len = Math.min(captures.length, captureIndices.length);\n  const localStack = [];\n  const maxEnd = captureIndices[0].end;\n  for (let i = 0; i < len; i++) {\n    const captureRule = captures[i];\n    if (captureRule === null) {\n      continue;\n    }\n    const captureIndex = captureIndices[i];\n    if (captureIndex.length === 0) {\n      continue;\n    }\n    if (captureIndex.start > maxEnd) {\n      break;\n    }\n    while (localStack.length > 0 && localStack[localStack.length - 1].endPos <= captureIndex.start) {\n      lineTokens.produceFromScopes(localStack[localStack.length - 1].scopes, localStack[localStack.length - 1].endPos);\n      localStack.pop();\n    }\n    if (localStack.length > 0) {\n      lineTokens.produceFromScopes(localStack[localStack.length - 1].scopes, captureIndex.start);\n    } else {\n      lineTokens.produce(stack, captureIndex.start);\n    }\n    if (captureRule.retokenizeCapturedWithRuleId) {\n      const scopeName = captureRule.getName(lineTextContent, captureIndices);\n      const nameScopesList = stack.contentNameScopesList.pushAttributed(scopeName, grammar);\n      const contentName = captureRule.getContentName(lineTextContent, captureIndices);\n      const contentNameScopesList = nameScopesList.pushAttributed(contentName, grammar);\n      const stackClone = stack.push(captureRule.retokenizeCapturedWithRuleId, captureIndex.start, -1, false, null, nameScopesList, contentNameScopesList);\n      const onigSubStr = grammar.createOnigString(lineTextContent.substring(0, captureIndex.end));\n      _tokenizeString(\n        grammar,\n        onigSubStr,\n        isFirstLine && captureIndex.start === 0,\n        captureIndex.start,\n        stackClone,\n        lineTokens,\n        false,\n        /* no time limit */\n        0\n      );\n      disposeOnigString(onigSubStr);\n      continue;\n    }\n    const captureRuleScopeName = captureRule.getName(lineTextContent, captureIndices);\n    if (captureRuleScopeName !== null) {\n      const base = localStack.length > 0 ? localStack[localStack.length - 1].scopes : stack.contentNameScopesList;\n      const captureRuleScopesList = base.pushAttributed(captureRuleScopeName, grammar);\n      localStack.push(new LocalStackElement(captureRuleScopesList, captureIndex.end));\n    }\n  }\n  while (localStack.length > 0) {\n    lineTokens.produceFromScopes(localStack[localStack.length - 1].scopes, localStack[localStack.length - 1].endPos);\n    localStack.pop();\n  }\n}\nvar LocalStackElement = class {\n  scopes;\n  endPos;\n  constructor(scopes, endPos) {\n    this.scopes = scopes;\n    this.endPos = endPos;\n  }\n};\n\n// src/grammar/grammar.ts\nfunction createGrammar(scopeName, grammar, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors, grammarRepository, onigLib) {\n  return new Grammar(\n    scopeName,\n    grammar,\n    initialLanguage,\n    embeddedLanguages,\n    tokenTypes,\n    balancedBracketSelectors,\n    grammarRepository,\n    onigLib\n  );\n}\nfunction collectInjections(result, selector, rule, ruleFactoryHelper, grammar) {\n  const matchers = createMatchers(selector, nameMatcher);\n  const ruleId = RuleFactory.getCompiledRuleId(rule, ruleFactoryHelper, grammar.repository);\n  for (const matcher of matchers) {\n    result.push({\n      debugSelector: selector,\n      matcher: matcher.matcher,\n      ruleId,\n      grammar,\n      priority: matcher.priority\n    });\n  }\n}\nfunction nameMatcher(identifers, scopes) {\n  if (scopes.length < identifers.length) {\n    return false;\n  }\n  let lastIndex = 0;\n  return identifers.every((identifier) => {\n    for (let i = lastIndex; i < scopes.length; i++) {\n      if (scopesAreMatching(scopes[i], identifier)) {\n        lastIndex = i + 1;\n        return true;\n      }\n    }\n    return false;\n  });\n}\nfunction scopesAreMatching(thisScopeName, scopeName) {\n  if (!thisScopeName) {\n    return false;\n  }\n  if (thisScopeName === scopeName) {\n    return true;\n  }\n  const len = scopeName.length;\n  return thisScopeName.length > len && thisScopeName.substr(0, len) === scopeName && thisScopeName[len] === \".\";\n}\nvar Grammar = class {\n  constructor(_rootScopeName, grammar, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors, grammarRepository, _onigLib) {\n    this._rootScopeName = _rootScopeName;\n    this.balancedBracketSelectors = balancedBracketSelectors;\n    this._onigLib = _onigLib;\n    this._basicScopeAttributesProvider = new BasicScopeAttributesProvider(\n      initialLanguage,\n      embeddedLanguages\n    );\n    this._rootId = -1;\n    this._lastRuleId = 0;\n    this._ruleId2desc = [null];\n    this._includedGrammars = {};\n    this._grammarRepository = grammarRepository;\n    this._grammar = initGrammar(grammar, null);\n    this._injections = null;\n    this._tokenTypeMatchers = [];\n    if (tokenTypes) {\n      for (const selector of Object.keys(tokenTypes)) {\n        const matchers = createMatchers(selector, nameMatcher);\n        for (const matcher of matchers) {\n          this._tokenTypeMatchers.push({\n            matcher: matcher.matcher,\n            type: tokenTypes[selector]\n          });\n        }\n      }\n    }\n  }\n  _rootId;\n  _lastRuleId;\n  _ruleId2desc;\n  _includedGrammars;\n  _grammarRepository;\n  _grammar;\n  _injections;\n  _basicScopeAttributesProvider;\n  _tokenTypeMatchers;\n  get themeProvider() {\n    return this._grammarRepository;\n  }\n  dispose() {\n    for (const rule of this._ruleId2desc) {\n      if (rule) {\n        rule.dispose();\n      }\n    }\n  }\n  createOnigScanner(sources) {\n    return this._onigLib.createOnigScanner(sources);\n  }\n  createOnigString(sources) {\n    return this._onigLib.createOnigString(sources);\n  }\n  getMetadataForScope(scope) {\n    return this._basicScopeAttributesProvider.getBasicScopeAttributes(scope);\n  }\n  _collectInjections() {\n    const grammarRepository = {\n      lookup: (scopeName2) => {\n        if (scopeName2 === this._rootScopeName) {\n          return this._grammar;\n        }\n        return this.getExternalGrammar(scopeName2);\n      },\n      injections: (scopeName2) => {\n        return this._grammarRepository.injections(scopeName2);\n      }\n    };\n    const result = [];\n    const scopeName = this._rootScopeName;\n    const grammar = grammarRepository.lookup(scopeName);\n    if (grammar) {\n      const rawInjections = grammar.injections;\n      if (rawInjections) {\n        for (let expression in rawInjections) {\n          collectInjections(\n            result,\n            expression,\n            rawInjections[expression],\n            this,\n            grammar\n          );\n        }\n      }\n      const injectionScopeNames = this._grammarRepository.injections(scopeName);\n      if (injectionScopeNames) {\n        injectionScopeNames.forEach((injectionScopeName) => {\n          const injectionGrammar = this.getExternalGrammar(injectionScopeName);\n          if (injectionGrammar) {\n            const selector = injectionGrammar.injectionSelector;\n            if (selector) {\n              collectInjections(\n                result,\n                selector,\n                injectionGrammar,\n                this,\n                injectionGrammar\n              );\n            }\n          }\n        });\n      }\n    }\n    result.sort((i1, i2) => i1.priority - i2.priority);\n    return result;\n  }\n  getInjections() {\n    if (this._injections === null) {\n      this._injections = this._collectInjections();\n    }\n    return this._injections;\n  }\n  registerRule(factory) {\n    const id = ++this._lastRuleId;\n    const result = factory(ruleIdFromNumber(id));\n    this._ruleId2desc[id] = result;\n    return result;\n  }\n  getRule(ruleId) {\n    return this._ruleId2desc[ruleIdToNumber(ruleId)];\n  }\n  getExternalGrammar(scopeName, repository) {\n    if (this._includedGrammars[scopeName]) {\n      return this._includedGrammars[scopeName];\n    } else if (this._grammarRepository) {\n      const rawIncludedGrammar = this._grammarRepository.lookup(scopeName);\n      if (rawIncludedGrammar) {\n        this._includedGrammars[scopeName] = initGrammar(\n          rawIncludedGrammar,\n          repository && repository.$base\n        );\n        return this._includedGrammars[scopeName];\n      }\n    }\n    return void 0;\n  }\n  tokenizeLine(lineText, prevState, timeLimit = 0) {\n    const r = this._tokenize(lineText, prevState, false, timeLimit);\n    return {\n      tokens: r.lineTokens.getResult(r.ruleStack, r.lineLength),\n      ruleStack: r.ruleStack,\n      stoppedEarly: r.stoppedEarly\n    };\n  }\n  tokenizeLine2(lineText, prevState, timeLimit = 0) {\n    const r = this._tokenize(lineText, prevState, true, timeLimit);\n    return {\n      tokens: r.lineTokens.getBinaryResult(r.ruleStack, r.lineLength),\n      ruleStack: r.ruleStack,\n      stoppedEarly: r.stoppedEarly\n    };\n  }\n  _tokenize(lineText, prevState, emitBinaryTokens, timeLimit) {\n    if (this._rootId === -1) {\n      this._rootId = RuleFactory.getCompiledRuleId(\n        this._grammar.repository.$self,\n        this,\n        this._grammar.repository\n      );\n      this.getInjections();\n    }\n    let isFirstLine;\n    if (!prevState || prevState === StateStackImpl.NULL) {\n      isFirstLine = true;\n      const rawDefaultMetadata = this._basicScopeAttributesProvider.getDefaultAttributes();\n      const defaultStyle = this.themeProvider.getDefaults();\n      const defaultMetadata = EncodedTokenMetadata.set(\n        0,\n        rawDefaultMetadata.languageId,\n        rawDefaultMetadata.tokenType,\n        null,\n        defaultStyle.fontStyle,\n        defaultStyle.foregroundId,\n        defaultStyle.backgroundId\n      );\n      const rootScopeName = this.getRule(this._rootId).getName(\n        null,\n        null\n      );\n      let scopeList;\n      if (rootScopeName) {\n        scopeList = AttributedScopeStack.createRootAndLookUpScopeName(\n          rootScopeName,\n          defaultMetadata,\n          this\n        );\n      } else {\n        scopeList = AttributedScopeStack.createRoot(\n          \"unknown\",\n          defaultMetadata\n        );\n      }\n      prevState = new StateStackImpl(\n        null,\n        this._rootId,\n        -1,\n        -1,\n        false,\n        null,\n        scopeList,\n        scopeList\n      );\n    } else {\n      isFirstLine = false;\n      prevState.reset();\n    }\n    lineText = lineText + \"\\n\";\n    const onigLineText = this.createOnigString(lineText);\n    const lineLength = onigLineText.content.length;\n    const lineTokens = new LineTokens(\n      emitBinaryTokens,\n      lineText,\n      this._tokenTypeMatchers,\n      this.balancedBracketSelectors\n    );\n    const r = _tokenizeString(\n      this,\n      onigLineText,\n      isFirstLine,\n      0,\n      prevState,\n      lineTokens,\n      true,\n      timeLimit\n    );\n    disposeOnigString(onigLineText);\n    return {\n      lineLength,\n      lineTokens,\n      ruleStack: r.stack,\n      stoppedEarly: r.stoppedEarly\n    };\n  }\n};\nfunction initGrammar(grammar, base) {\n  grammar = clone(grammar);\n  grammar.repository = grammar.repository || {};\n  grammar.repository.$self = {\n    $vscodeTextmateLocation: grammar.$vscodeTextmateLocation,\n    patterns: grammar.patterns,\n    name: grammar.scopeName\n  };\n  grammar.repository.$base = base || grammar.repository.$self;\n  return grammar;\n}\nvar AttributedScopeStack = class _AttributedScopeStack {\n  /**\n   * Invariant:\n   * ```\n   * if (parent && !scopePath.extends(parent.scopePath)) {\n   * \tthrow new Error();\n   * }\n   * ```\n   */\n  constructor(parent, scopePath, tokenAttributes) {\n    this.parent = parent;\n    this.scopePath = scopePath;\n    this.tokenAttributes = tokenAttributes;\n  }\n  static fromExtension(namesScopeList, contentNameScopesList) {\n    let current = namesScopeList;\n    let scopeNames = namesScopeList?.scopePath ?? null;\n    for (const frame of contentNameScopesList) {\n      scopeNames = ScopeStack.push(scopeNames, frame.scopeNames);\n      current = new _AttributedScopeStack(current, scopeNames, frame.encodedTokenAttributes);\n    }\n    return current;\n  }\n  static createRoot(scopeName, tokenAttributes) {\n    return new _AttributedScopeStack(null, new ScopeStack(null, scopeName), tokenAttributes);\n  }\n  static createRootAndLookUpScopeName(scopeName, tokenAttributes, grammar) {\n    const rawRootMetadata = grammar.getMetadataForScope(scopeName);\n    const scopePath = new ScopeStack(null, scopeName);\n    const rootStyle = grammar.themeProvider.themeMatch(scopePath);\n    const resolvedTokenAttributes = _AttributedScopeStack.mergeAttributes(\n      tokenAttributes,\n      rawRootMetadata,\n      rootStyle\n    );\n    return new _AttributedScopeStack(null, scopePath, resolvedTokenAttributes);\n  }\n  get scopeName() {\n    return this.scopePath.scopeName;\n  }\n  toString() {\n    return this.getScopeNames().join(\" \");\n  }\n  equals(other) {\n    return _AttributedScopeStack.equals(this, other);\n  }\n  static equals(a, b) {\n    do {\n      if (a === b) {\n        return true;\n      }\n      if (!a && !b) {\n        return true;\n      }\n      if (!a || !b) {\n        return false;\n      }\n      if (a.scopeName !== b.scopeName || a.tokenAttributes !== b.tokenAttributes) {\n        return false;\n      }\n      a = a.parent;\n      b = b.parent;\n    } while (true);\n  }\n  static mergeAttributes(existingTokenAttributes, basicScopeAttributes, styleAttributes) {\n    let fontStyle = -1 /* NotSet */;\n    let foreground = 0;\n    let background = 0;\n    if (styleAttributes !== null) {\n      fontStyle = styleAttributes.fontStyle;\n      foreground = styleAttributes.foregroundId;\n      background = styleAttributes.backgroundId;\n    }\n    return EncodedTokenMetadata.set(\n      existingTokenAttributes,\n      basicScopeAttributes.languageId,\n      basicScopeAttributes.tokenType,\n      null,\n      fontStyle,\n      foreground,\n      background\n    );\n  }\n  pushAttributed(scopePath, grammar) {\n    if (scopePath === null) {\n      return this;\n    }\n    if (scopePath.indexOf(\" \") === -1) {\n      return _AttributedScopeStack._pushAttributed(this, scopePath, grammar);\n    }\n    const scopes = scopePath.split(/ /g);\n    let result = this;\n    for (const scope of scopes) {\n      result = _AttributedScopeStack._pushAttributed(result, scope, grammar);\n    }\n    return result;\n  }\n  static _pushAttributed(target, scopeName, grammar) {\n    const rawMetadata = grammar.getMetadataForScope(scopeName);\n    const newPath = target.scopePath.push(scopeName);\n    const scopeThemeMatchResult = grammar.themeProvider.themeMatch(newPath);\n    const metadata = _AttributedScopeStack.mergeAttributes(\n      target.tokenAttributes,\n      rawMetadata,\n      scopeThemeMatchResult\n    );\n    return new _AttributedScopeStack(target, newPath, metadata);\n  }\n  getScopeNames() {\n    return this.scopePath.getSegments();\n  }\n  getExtensionIfDefined(base) {\n    const result = [];\n    let self = this;\n    while (self && self !== base) {\n      result.push({\n        encodedTokenAttributes: self.tokenAttributes,\n        scopeNames: self.scopePath.getExtensionIfDefined(self.parent?.scopePath ?? null)\n      });\n      self = self.parent;\n    }\n    return self === base ? result.reverse() : void 0;\n  }\n};\nvar StateStackImpl = class _StateStackImpl {\n  /**\n   * Invariant:\n   * ```\n   * if (contentNameScopesList !== nameScopesList && contentNameScopesList?.parent !== nameScopesList) {\n   * \tthrow new Error();\n   * }\n   * if (this.parent && !nameScopesList.extends(this.parent.contentNameScopesList)) {\n   * \tthrow new Error();\n   * }\n   * ```\n   */\n  constructor(parent, ruleId, enterPos, anchorPos, beginRuleCapturedEOL, endRule, nameScopesList, contentNameScopesList) {\n    this.parent = parent;\n    this.ruleId = ruleId;\n    this.beginRuleCapturedEOL = beginRuleCapturedEOL;\n    this.endRule = endRule;\n    this.nameScopesList = nameScopesList;\n    this.contentNameScopesList = contentNameScopesList;\n    this.depth = this.parent ? this.parent.depth + 1 : 1;\n    this._enterPos = enterPos;\n    this._anchorPos = anchorPos;\n  }\n  _stackElementBrand = void 0;\n  // TODO remove me\n  static NULL = new _StateStackImpl(\n    null,\n    0,\n    0,\n    0,\n    false,\n    null,\n    null,\n    null\n  );\n  /**\n   * The position on the current line where this state was pushed.\n   * This is relevant only while tokenizing a line, to detect endless loops.\n   * Its value is meaningless across lines.\n   */\n  _enterPos;\n  /**\n   * The captured anchor position when this stack element was pushed.\n   * This is relevant only while tokenizing a line, to restore the anchor position when popping.\n   * Its value is meaningless across lines.\n   */\n  _anchorPos;\n  /**\n   * The depth of the stack.\n   */\n  depth;\n  equals(other) {\n    if (other === null) {\n      return false;\n    }\n    return _StateStackImpl._equals(this, other);\n  }\n  static _equals(a, b) {\n    if (a === b) {\n      return true;\n    }\n    if (!this._structuralEquals(a, b)) {\n      return false;\n    }\n    return AttributedScopeStack.equals(a.contentNameScopesList, b.contentNameScopesList);\n  }\n  /**\n   * A structural equals check. Does not take into account `scopes`.\n   */\n  static _structuralEquals(a, b) {\n    do {\n      if (a === b) {\n        return true;\n      }\n      if (!a && !b) {\n        return true;\n      }\n      if (!a || !b) {\n        return false;\n      }\n      if (a.depth !== b.depth || a.ruleId !== b.ruleId || a.endRule !== b.endRule) {\n        return false;\n      }\n      a = a.parent;\n      b = b.parent;\n    } while (true);\n  }\n  clone() {\n    return this;\n  }\n  static _reset(el) {\n    while (el) {\n      el._enterPos = -1;\n      el._anchorPos = -1;\n      el = el.parent;\n    }\n  }\n  reset() {\n    _StateStackImpl._reset(this);\n  }\n  pop() {\n    return this.parent;\n  }\n  safePop() {\n    if (this.parent) {\n      return this.parent;\n    }\n    return this;\n  }\n  push(ruleId, enterPos, anchorPos, beginRuleCapturedEOL, endRule, nameScopesList, contentNameScopesList) {\n    return new _StateStackImpl(\n      this,\n      ruleId,\n      enterPos,\n      anchorPos,\n      beginRuleCapturedEOL,\n      endRule,\n      nameScopesList,\n      contentNameScopesList\n    );\n  }\n  getEnterPos() {\n    return this._enterPos;\n  }\n  getAnchorPos() {\n    return this._anchorPos;\n  }\n  getRule(grammar) {\n    return grammar.getRule(this.ruleId);\n  }\n  toString() {\n    const r = [];\n    this._writeString(r, 0);\n    return \"[\" + r.join(\",\") + \"]\";\n  }\n  _writeString(res, outIndex) {\n    if (this.parent) {\n      outIndex = this.parent._writeString(res, outIndex);\n    }\n    res[outIndex++] = `(${this.ruleId}, ${this.nameScopesList?.toString()}, ${this.contentNameScopesList?.toString()})`;\n    return outIndex;\n  }\n  withContentNameScopesList(contentNameScopeStack) {\n    if (this.contentNameScopesList === contentNameScopeStack) {\n      return this;\n    }\n    return this.parent.push(\n      this.ruleId,\n      this._enterPos,\n      this._anchorPos,\n      this.beginRuleCapturedEOL,\n      this.endRule,\n      this.nameScopesList,\n      contentNameScopeStack\n    );\n  }\n  withEndRule(endRule) {\n    if (this.endRule === endRule) {\n      return this;\n    }\n    return new _StateStackImpl(\n      this.parent,\n      this.ruleId,\n      this._enterPos,\n      this._anchorPos,\n      this.beginRuleCapturedEOL,\n      endRule,\n      this.nameScopesList,\n      this.contentNameScopesList\n    );\n  }\n  // Used to warn of endless loops\n  hasSameRuleAs(other) {\n    let el = this;\n    while (el && el._enterPos === other._enterPos) {\n      if (el.ruleId === other.ruleId) {\n        return true;\n      }\n      el = el.parent;\n    }\n    return false;\n  }\n  toStateStackFrame() {\n    return {\n      ruleId: ruleIdToNumber(this.ruleId),\n      beginRuleCapturedEOL: this.beginRuleCapturedEOL,\n      endRule: this.endRule,\n      nameScopesList: this.nameScopesList?.getExtensionIfDefined(this.parent?.nameScopesList ?? null) ?? [],\n      contentNameScopesList: this.contentNameScopesList?.getExtensionIfDefined(this.nameScopesList) ?? []\n    };\n  }\n  static pushFrame(self, frame) {\n    const namesScopeList = AttributedScopeStack.fromExtension(self?.nameScopesList ?? null, frame.nameScopesList);\n    return new _StateStackImpl(\n      self,\n      ruleIdFromNumber(frame.ruleId),\n      frame.enterPos ?? -1,\n      frame.anchorPos ?? -1,\n      frame.beginRuleCapturedEOL,\n      frame.endRule,\n      namesScopeList,\n      AttributedScopeStack.fromExtension(namesScopeList, frame.contentNameScopesList)\n    );\n  }\n};\nvar BalancedBracketSelectors = class {\n  balancedBracketScopes;\n  unbalancedBracketScopes;\n  allowAny = false;\n  constructor(balancedBracketScopes, unbalancedBracketScopes) {\n    this.balancedBracketScopes = balancedBracketScopes.flatMap(\n      (selector) => {\n        if (selector === \"*\") {\n          this.allowAny = true;\n          return [];\n        }\n        return createMatchers(selector, nameMatcher).map((m) => m.matcher);\n      }\n    );\n    this.unbalancedBracketScopes = unbalancedBracketScopes.flatMap(\n      (selector) => createMatchers(selector, nameMatcher).map((m) => m.matcher)\n    );\n  }\n  get matchesAlways() {\n    return this.allowAny && this.unbalancedBracketScopes.length === 0;\n  }\n  get matchesNever() {\n    return this.balancedBracketScopes.length === 0 && !this.allowAny;\n  }\n  match(scopes) {\n    for (const excluder of this.unbalancedBracketScopes) {\n      if (excluder(scopes)) {\n        return false;\n      }\n    }\n    for (const includer of this.balancedBracketScopes) {\n      if (includer(scopes)) {\n        return true;\n      }\n    }\n    return this.allowAny;\n  }\n};\nvar LineTokens = class {\n  constructor(emitBinaryTokens, lineText, tokenTypeOverrides, balancedBracketSelectors) {\n    this.balancedBracketSelectors = balancedBracketSelectors;\n    this._emitBinaryTokens = emitBinaryTokens;\n    this._tokenTypeOverrides = tokenTypeOverrides;\n    if (false) {\n      this._lineText = lineText;\n    } else {\n      this._lineText = null;\n    }\n    this._tokens = [];\n    this._binaryTokens = [];\n    this._lastTokenEndIndex = 0;\n  }\n  _emitBinaryTokens;\n  /**\n   * defined only if `false`.\n   */\n  _lineText;\n  /**\n   * used only if `_emitBinaryTokens` is false.\n   */\n  _tokens;\n  /**\n   * used only if `_emitBinaryTokens` is true.\n   */\n  _binaryTokens;\n  _lastTokenEndIndex;\n  _tokenTypeOverrides;\n  produce(stack, endIndex) {\n    this.produceFromScopes(stack.contentNameScopesList, endIndex);\n  }\n  produceFromScopes(scopesList, endIndex) {\n    if (this._lastTokenEndIndex >= endIndex) {\n      return;\n    }\n    if (this._emitBinaryTokens) {\n      let metadata = scopesList?.tokenAttributes ?? 0;\n      let containsBalancedBrackets = false;\n      if (this.balancedBracketSelectors?.matchesAlways) {\n        containsBalancedBrackets = true;\n      }\n      if (this._tokenTypeOverrides.length > 0 || this.balancedBracketSelectors && !this.balancedBracketSelectors.matchesAlways && !this.balancedBracketSelectors.matchesNever) {\n        const scopes2 = scopesList?.getScopeNames() ?? [];\n        for (const tokenType of this._tokenTypeOverrides) {\n          if (tokenType.matcher(scopes2)) {\n            metadata = EncodedTokenMetadata.set(\n              metadata,\n              0,\n              toOptionalTokenType(tokenType.type),\n              null,\n              -1 /* NotSet */,\n              0,\n              0\n            );\n          }\n        }\n        if (this.balancedBracketSelectors) {\n          containsBalancedBrackets = this.balancedBracketSelectors.match(scopes2);\n        }\n      }\n      if (containsBalancedBrackets) {\n        metadata = EncodedTokenMetadata.set(\n          metadata,\n          0,\n          8 /* NotSet */,\n          containsBalancedBrackets,\n          -1 /* NotSet */,\n          0,\n          0\n        );\n      }\n      if (this._binaryTokens.length > 0 && this._binaryTokens[this._binaryTokens.length - 1] === metadata) {\n        this._lastTokenEndIndex = endIndex;\n        return;\n      }\n      this._binaryTokens.push(this._lastTokenEndIndex);\n      this._binaryTokens.push(metadata);\n      this._lastTokenEndIndex = endIndex;\n      return;\n    }\n    const scopes = scopesList?.getScopeNames() ?? [];\n    this._tokens.push({\n      startIndex: this._lastTokenEndIndex,\n      endIndex,\n      // value: lineText.substring(lastTokenEndIndex, endIndex),\n      scopes\n    });\n    this._lastTokenEndIndex = endIndex;\n  }\n  getResult(stack, lineLength) {\n    if (this._tokens.length > 0 && this._tokens[this._tokens.length - 1].startIndex === lineLength - 1) {\n      this._tokens.pop();\n    }\n    if (this._tokens.length === 0) {\n      this._lastTokenEndIndex = -1;\n      this.produce(stack, lineLength);\n      this._tokens[this._tokens.length - 1].startIndex = 0;\n    }\n    return this._tokens;\n  }\n  getBinaryResult(stack, lineLength) {\n    if (this._binaryTokens.length > 0 && this._binaryTokens[this._binaryTokens.length - 2] === lineLength - 1) {\n      this._binaryTokens.pop();\n      this._binaryTokens.pop();\n    }\n    if (this._binaryTokens.length === 0) {\n      this._lastTokenEndIndex = -1;\n      this.produce(stack, lineLength);\n      this._binaryTokens[this._binaryTokens.length - 2] = 0;\n    }\n    const result = new Uint32Array(this._binaryTokens.length);\n    for (let i = 0, len = this._binaryTokens.length; i < len; i++) {\n      result[i] = this._binaryTokens[i];\n    }\n    return result;\n  }\n};\n\n// src/registry.ts\nvar SyncRegistry = class {\n  constructor(theme, _onigLib) {\n    this._onigLib = _onigLib;\n    this._theme = theme;\n  }\n  _grammars = /* @__PURE__ */ new Map();\n  _rawGrammars = /* @__PURE__ */ new Map();\n  _injectionGrammars = /* @__PURE__ */ new Map();\n  _theme;\n  dispose() {\n    for (const grammar of this._grammars.values()) {\n      grammar.dispose();\n    }\n  }\n  setTheme(theme) {\n    this._theme = theme;\n  }\n  getColorMap() {\n    return this._theme.getColorMap();\n  }\n  /**\n   * Add `grammar` to registry and return a list of referenced scope names\n   */\n  addGrammar(grammar, injectionScopeNames) {\n    this._rawGrammars.set(grammar.scopeName, grammar);\n    if (injectionScopeNames) {\n      this._injectionGrammars.set(grammar.scopeName, injectionScopeNames);\n    }\n  }\n  /**\n   * Lookup a raw grammar.\n   */\n  lookup(scopeName) {\n    return this._rawGrammars.get(scopeName);\n  }\n  /**\n   * Returns the injections for the given grammar\n   */\n  injections(targetScope) {\n    return this._injectionGrammars.get(targetScope);\n  }\n  /**\n   * Get the default theme settings\n   */\n  getDefaults() {\n    return this._theme.getDefaults();\n  }\n  /**\n   * Match a scope in the theme.\n   */\n  themeMatch(scopePath) {\n    return this._theme.match(scopePath);\n  }\n  /**\n   * Lookup a grammar.\n   */\n  grammarForScopeName(scopeName, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors) {\n    if (!this._grammars.has(scopeName)) {\n      let rawGrammar = this._rawGrammars.get(scopeName);\n      if (!rawGrammar) {\n        return null;\n      }\n      this._grammars.set(scopeName, createGrammar(\n        scopeName,\n        rawGrammar,\n        initialLanguage,\n        embeddedLanguages,\n        tokenTypes,\n        balancedBracketSelectors,\n        this,\n        this._onigLib\n      ));\n    }\n    return this._grammars.get(scopeName);\n  }\n};\n\n// src/index.ts\nvar Registry = class {\n  _options;\n  _syncRegistry;\n  _ensureGrammarCache;\n  constructor(options) {\n    this._options = options;\n    this._syncRegistry = new SyncRegistry(\n      Theme.createFromRawTheme(options.theme, options.colorMap),\n      options.onigLib\n    );\n    this._ensureGrammarCache = /* @__PURE__ */ new Map();\n  }\n  dispose() {\n    this._syncRegistry.dispose();\n  }\n  /**\n   * Change the theme. Once called, no previous `ruleStack` should be used anymore.\n   */\n  setTheme(theme, colorMap) {\n    this._syncRegistry.setTheme(Theme.createFromRawTheme(theme, colorMap));\n  }\n  /**\n   * Returns a lookup array for color ids.\n   */\n  getColorMap() {\n    return this._syncRegistry.getColorMap();\n  }\n  /**\n   * Load the grammar for `scopeName` and all referenced included grammars asynchronously.\n   * Please do not use language id 0.\n   */\n  loadGrammarWithEmbeddedLanguages(initialScopeName, initialLanguage, embeddedLanguages) {\n    return this.loadGrammarWithConfiguration(initialScopeName, initialLanguage, { embeddedLanguages });\n  }\n  /**\n   * Load the grammar for `scopeName` and all referenced included grammars asynchronously.\n   * Please do not use language id 0.\n   */\n  loadGrammarWithConfiguration(initialScopeName, initialLanguage, configuration) {\n    return this._loadGrammar(\n      initialScopeName,\n      initialLanguage,\n      configuration.embeddedLanguages,\n      configuration.tokenTypes,\n      new BalancedBracketSelectors(\n        configuration.balancedBracketSelectors || [],\n        configuration.unbalancedBracketSelectors || []\n      )\n    );\n  }\n  /**\n   * Load the grammar for `scopeName` and all referenced included grammars asynchronously.\n   */\n  loadGrammar(initialScopeName) {\n    return this._loadGrammar(initialScopeName, 0, null, null, null);\n  }\n  _loadGrammar(initialScopeName, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors) {\n    const dependencyProcessor = new ScopeDependencyProcessor(this._syncRegistry, initialScopeName);\n    while (dependencyProcessor.Q.length > 0) {\n      dependencyProcessor.Q.map((request) => this._loadSingleGrammar(request.scopeName));\n      dependencyProcessor.processQueue();\n    }\n    return this._grammarForScopeName(\n      initialScopeName,\n      initialLanguage,\n      embeddedLanguages,\n      tokenTypes,\n      balancedBracketSelectors\n    );\n  }\n  _loadSingleGrammar(scopeName) {\n    if (!this._ensureGrammarCache.has(scopeName)) {\n      this._doLoadSingleGrammar(scopeName);\n      this._ensureGrammarCache.set(scopeName, true);\n    }\n  }\n  _doLoadSingleGrammar(scopeName) {\n    const grammar = this._options.loadGrammar(scopeName);\n    if (grammar) {\n      const injections = typeof this._options.getInjections === \"function\" ? this._options.getInjections(scopeName) : void 0;\n      this._syncRegistry.addGrammar(grammar, injections);\n    }\n  }\n  /**\n   * Adds a rawGrammar.\n   */\n  addGrammar(rawGrammar, injections = [], initialLanguage = 0, embeddedLanguages = null) {\n    this._syncRegistry.addGrammar(rawGrammar, injections);\n    return this._grammarForScopeName(rawGrammar.scopeName, initialLanguage, embeddedLanguages);\n  }\n  /**\n   * Get the grammar for `scopeName`. The grammar must first be created via `loadGrammar` or `addGrammar`.\n   */\n  _grammarForScopeName(scopeName, initialLanguage = 0, embeddedLanguages = null, tokenTypes = null, balancedBracketSelectors = null) {\n    return this._syncRegistry.grammarForScopeName(\n      scopeName,\n      initialLanguage,\n      embeddedLanguages,\n      tokenTypes,\n      balancedBracketSelectors\n    );\n  }\n};\nvar INITIAL = StateStackImpl.NULL;\nexport {\n  EncodedTokenMetadata,\n  FindOption,\n  FontStyle,\n  INITIAL,\n  Registry,\n  Theme,\n  disposeOnigString\n};\n","/**\n * @import {Schema as SchemaType, Space} from 'property-information'\n */\n\n/** @type {SchemaType} */\nexport class Schema {\n  /**\n   * @param {SchemaType['property']} property\n   *   Property.\n   * @param {SchemaType['normal']} normal\n   *   Normal.\n   * @param {Space | undefined} [space]\n   *   Space.\n   * @returns\n   *   Schema.\n   */\n  constructor(property, normal, space) {\n    this.normal = normal\n    this.property = property\n\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\nSchema.prototype.normal = {}\nSchema.prototype.property = {}\nSchema.prototype.space = undefined\n","/**\n * @import {Info, Space} from 'property-information'\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {ReadonlyArray<Schema>} definitions\n *   Definitions.\n * @param {Space | undefined} [space]\n *   Space.\n * @returns {Schema}\n *   Schema.\n */\nexport function merge(definitions, space) {\n  /** @type {Record<string, Info>} */\n  const property = {}\n  /** @type {Record<string, string>} */\n  const normal = {}\n\n  for (const definition of definitions) {\n    Object.assign(property, definition.property)\n    Object.assign(normal, definition.normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * Get the cleaned case insensitive form of an attribute or property.\n *\n * @param {string} value\n *   An attribute-like or property-like name.\n * @returns {string}\n *   Value that can be used to look up the properly cased property on a\n *   `Schema`.\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","/**\n * @import {Info as InfoType} from 'property-information'\n */\n\n/** @type {InfoType} */\nexport class Info {\n  /**\n   * @param {string} property\n   *   Property.\n   * @param {string} attribute\n   *   Attribute.\n   * @returns\n   *   Info.\n   */\n  constructor(property, attribute) {\n    this.attribute = attribute\n    this.property = property\n  }\n}\n\nInfo.prototype.attribute = ''\nInfo.prototype.booleanish = false\nInfo.prototype.boolean = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.defined = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.number = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.property = ''\nInfo.prototype.spaceSeparated = false\nInfo.prototype.space = undefined\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","/**\n * @import {Space} from 'property-information'\n */\n\nimport {Info} from './info.js'\nimport * as types from './types.js'\n\nconst checks = /** @type {ReadonlyArray<keyof typeof types>} */ (\n  Object.keys(types)\n)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   *   Property.\n   * @param {string} attribute\n   *   Attribute.\n   * @param {number | null | undefined} [mask]\n   *   Mask.\n   * @param {Space | undefined} [space]\n   *   Space.\n   * @returns\n   *   Info.\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @template {keyof DefinedInfo} Key\n *   Key type.\n * @param {DefinedInfo} values\n *   Info.\n * @param {Key} key\n *   Key.\n * @param {DefinedInfo[Key]} value\n *   Value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction mark(values, key, value) {\n  if (value) {\n    values[key] = value\n  }\n}\n","/**\n * @import {Info, Space} from 'property-information'\n */\n\n/**\n * @typedef Definition\n *   Definition of a schema.\n * @property {Record<string, string> | undefined} [attributes]\n *   Normalzed names to special attribute case.\n * @property {ReadonlyArray<string> | undefined} [mustUseProperty]\n *   Normalized names that must be set as properties.\n * @property {Record<string, number | null>} properties\n *   Property names to their types.\n * @property {Space | undefined} [space]\n *   Space.\n * @property {Transform} transform\n *   Transform a property name.\n */\n\n/**\n * @callback Transform\n *   Transform.\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} property\n *   Property.\n * @returns {string}\n *   Attribute.\n */\n\nimport {normalize} from '../normalize.js'\nimport {DefinedInfo} from './defined-info.js'\nimport {Schema} from './schema.js'\n\n/**\n * @param {Definition} definition\n *   Definition.\n * @returns {Schema}\n *   Schema.\n */\nexport function create(definition) {\n  /** @type {Record<string, Info>} */\n  const properties = {}\n  /** @type {Record<string, string>} */\n  const normals = {}\n\n  for (const [property, value] of Object.entries(definition.properties)) {\n    const info = new DefinedInfo(\n      property,\n      definition.transform(definition.attributes || {}, property),\n      value,\n      definition.space\n    )\n\n    if (\n      definition.mustUseProperty &&\n      definition.mustUseProperty.includes(property)\n    ) {\n      info.mustUseProperty = true\n    }\n\n    properties[property] = info\n\n    normals[normalize(property)] = property\n    normals[normalize(info.attribute)] = property\n  }\n\n  return new Schema(properties, normals, definition.space)\n}\n","import {create} from './util/create.js'\nimport {booleanish, number, spaceSeparated} from './util/types.js'\n\nexport const aria = create({\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  },\n  transform(_, property) {\n    return property === 'role'\n      ? property\n      : 'aria-' + property.slice(4).toLowerCase()\n  }\n})\n","/**\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} attribute\n *   Attribute.\n * @returns {string}\n *   Transformed attribute.\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} property\n *   Property.\n * @returns {string}\n *   Transformed property.\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\nimport {create} from './util/create.js'\nimport {\n  booleanish,\n  boolean,\n  commaSeparated,\n  number,\n  overloadedBoolean,\n  spaceSeparated\n} from './util/types.js'\n\nexport const html = create({\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: overloadedBoolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  },\n  space: 'html',\n  transform: caseInsensitiveTransform\n})\n","import {caseSensitiveTransform} from './util/case-sensitive-transform.js'\nimport {create} from './util/create.js'\nimport {\n  boolean,\n  commaOrSpaceSeparated,\n  commaSeparated,\n  number,\n  spaceSeparated\n} from './util/types.js'\n\nexport const svg = create({\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  },\n  space: 'svg',\n  transform: caseSensitiveTransform\n})\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  },\n  space: 'xlink',\n  transform(_, property) {\n    return 'xlink:' + property.slice(5).toLowerCase()\n  }\n})\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  properties: {xmlnsXLink: null, xmlns: null},\n  space: 'xmlns',\n  transform: caseInsensitiveTransform\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  properties: {xmlBase: null, xmlLang: null, xmlSpace: null},\n  space: 'xml',\n  transform(_, property) {\n    return 'xml:' + property.slice(3).toLowerCase()\n  }\n})\n","/**\n * @import {Schema} from 'property-information'\n */\n\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\nimport {normalize} from './normalize.js'\n\nconst cap = /[A-Z]/g\nconst dash = /-[a-z]/g\nconst valid = /^data[-\\w.:]+$/i\n\n/**\n * Look up info on a property.\n *\n * In most cases the given `schema` contains info on the property.\n * All standard,\n * most legacy,\n * and some non-standard properties are supported.\n * For these cases,\n * the returned `Info` has hints about the value of the property.\n *\n * `name` can also be a valid data attribute or property,\n * in which case an `Info` object with the correctly cased `attribute` and\n * `property` is returned.\n *\n * `name` can be an unknown attribute,\n * in which case an `Info` object with `attribute` and `property` set to the\n * given name is returned.\n * It is not recommended to provide unsupported legacy or recently specced\n * properties.\n *\n *\n * @param {Schema} schema\n *   Schema;\n *   either the `html` or `svg` export.\n * @param {string} value\n *   An attribute-like or property-like name;\n *   it will be passed through `normalize` to hopefully find the correct info.\n * @returns {Info}\n *   Info.\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let property = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      property = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(property, value)\n}\n\n/**\n * @param {string} $0\n *   Value.\n * @returns {string}\n *   Kebab.\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n *   Value.\n * @returns {string}\n *   Camel.\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","// Note: types exposed from `index.d.ts`.\nimport {merge} from './lib/util/merge.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\nimport {xlink} from './lib/xlink.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {xml} from './lib/xml.js'\n\nexport {hastToReact} from './lib/hast-to-react.js'\n\nexport const html = merge([aria, htmlBase, xlink, xmlns, xml], 'html')\n\nexport {find} from './lib/find.js'\nexport {normalize} from './lib/normalize.js'\n\nexport const svg = merge([aria, svgBase, xlink, xmlns, xml], 'svg')\n","/**\n * @typedef CoreOptions\n * @property {ReadonlyArray<string>} [subset=[]]\n *   Whether to only escape the given subset of characters.\n * @property {boolean} [escapeOnly=false]\n *   Whether to only escape possibly dangerous characters.\n *   Those characters are `\"`, `&`, `'`, `<`, `>`, and `` ` ``.\n *\n * @typedef FormatOptions\n * @property {(code: number, next: number, options: CoreWithFormatOptions) => string} format\n *   Format strategy.\n *\n * @typedef {CoreOptions & FormatOptions & import('./util/format-smart.js').FormatSmartOptions} CoreWithFormatOptions\n */\n\nconst defaultSubsetRegex = /[\"&'<>`]/g\nconst surrogatePairsRegex = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g\nconst controlCharactersRegex =\n  // eslint-disable-next-line no-control-regex, unicorn/no-hex-escape\n  /[\\x01-\\t\\v\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g\nconst regexEscapeRegex = /[|\\\\{}()[\\]^$+*?.]/g\n\n/** @type {WeakMap<ReadonlyArray<string>, RegExp>} */\nconst subsetToRegexCache = new WeakMap()\n\n/**\n * Encode certain characters in `value`.\n *\n * @param {string} value\n * @param {CoreWithFormatOptions} options\n * @returns {string}\n */\nexport function core(value, options) {\n  value = value.replace(\n    options.subset\n      ? charactersToExpressionCached(options.subset)\n      : defaultSubsetRegex,\n    basic\n  )\n\n  if (options.subset || options.escapeOnly) {\n    return value\n  }\n\n  return (\n    value\n      // Surrogate pairs.\n      .replace(surrogatePairsRegex, surrogate)\n      // BMP control characters (C0 except for LF, CR, SP; DEL; and some more\n      // non-ASCII ones).\n      .replace(controlCharactersRegex, basic)\n  )\n\n  /**\n   * @param {string} pair\n   * @param {number} index\n   * @param {string} all\n   */\n  function surrogate(pair, index, all) {\n    return options.format(\n      (pair.charCodeAt(0) - 0xd800) * 0x400 +\n        pair.charCodeAt(1) -\n        0xdc00 +\n        0x10000,\n      all.charCodeAt(index + 2),\n      options\n    )\n  }\n\n  /**\n   * @param {string} character\n   * @param {number} index\n   * @param {string} all\n   */\n  function basic(character, index, all) {\n    return options.format(\n      character.charCodeAt(0),\n      all.charCodeAt(index + 1),\n      options\n    )\n  }\n}\n\n/**\n * A wrapper function that caches the result of `charactersToExpression` with a WeakMap.\n * This can improve performance when tooling calls `charactersToExpression` repeatedly\n * with the same subset.\n *\n * @param {ReadonlyArray<string>} subset\n * @returns {RegExp}\n */\nfunction charactersToExpressionCached(subset) {\n  let cached = subsetToRegexCache.get(subset)\n\n  if (!cached) {\n    cached = charactersToExpression(subset)\n    subsetToRegexCache.set(subset, cached)\n  }\n\n  return cached\n}\n\n/**\n * @param {ReadonlyArray<string>} subset\n * @returns {RegExp}\n */\nfunction charactersToExpression(subset) {\n  /** @type {Array<string>} */\n  const groups = []\n  let index = -1\n\n  while (++index < subset.length) {\n    groups.push(subset[index].replace(regexEscapeRegex, '\\\\$&'))\n  }\n\n  return new RegExp('(?:' + groups.join('|') + ')', 'g')\n}\n","const hexadecimalRegex = /[\\dA-Fa-f]/\n\n/**\n * Configurable ways to encode characters as hexadecimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nexport function toHexadecimal(code, next, omit) {\n  const value = '&#x' + code.toString(16).toUpperCase()\n  return omit && next && !hexadecimalRegex.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n","const decimalRegex = /\\d/\n\n/**\n * Configurable ways to encode characters as decimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nexport function toDecimal(code, next, omit) {\n  const value = '&#' + String(code)\n  return omit && next && !decimalRegex.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n","/**\n * List of legacy HTML named character references that don’t need a trailing semicolon.\n *\n * @type {Array<string>}\n */\nexport const characterEntitiesLegacy = [\n  'AElig',\n  'AMP',\n  'Aacute',\n  'Acirc',\n  'Agrave',\n  'Aring',\n  'Atilde',\n  'Auml',\n  'COPY',\n  'Ccedil',\n  'ETH',\n  'Eacute',\n  'Ecirc',\n  'Egrave',\n  'Euml',\n  'GT',\n  'Iacute',\n  'Icirc',\n  'Igrave',\n  'Iuml',\n  'LT',\n  'Ntilde',\n  'Oacute',\n  'Ocirc',\n  'Ograve',\n  'Oslash',\n  'Otilde',\n  'Ouml',\n  'QUOT',\n  'REG',\n  'THORN',\n  'Uacute',\n  'Ucirc',\n  'Ugrave',\n  'Uuml',\n  'Yacute',\n  'aacute',\n  'acirc',\n  'acute',\n  'aelig',\n  'agrave',\n  'amp',\n  'aring',\n  'atilde',\n  'auml',\n  'brvbar',\n  'ccedil',\n  'cedil',\n  'cent',\n  'copy',\n  'curren',\n  'deg',\n  'divide',\n  'eacute',\n  'ecirc',\n  'egrave',\n  'eth',\n  'euml',\n  'frac12',\n  'frac14',\n  'frac34',\n  'gt',\n  'iacute',\n  'icirc',\n  'iexcl',\n  'igrave',\n  'iquest',\n  'iuml',\n  'laquo',\n  'lt',\n  'macr',\n  'micro',\n  'middot',\n  'nbsp',\n  'not',\n  'ntilde',\n  'oacute',\n  'ocirc',\n  'ograve',\n  'ordf',\n  'ordm',\n  'oslash',\n  'otilde',\n  'ouml',\n  'para',\n  'plusmn',\n  'pound',\n  'quot',\n  'raquo',\n  'reg',\n  'sect',\n  'shy',\n  'sup1',\n  'sup2',\n  'sup3',\n  'szlig',\n  'thorn',\n  'times',\n  'uacute',\n  'ucirc',\n  'ugrave',\n  'uml',\n  'uuml',\n  'yacute',\n  'yen',\n  'yuml'\n]\n","/**\n * Map of named character references from HTML 4.\n *\n * @type {Record<string, string>}\n */\nexport const characterEntitiesHtml4 = {\n  nbsp: ' ',\n  iexcl: '¡',\n  cent: '¢',\n  pound: '£',\n  curren: '¤',\n  yen: '¥',\n  brvbar: '¦',\n  sect: '§',\n  uml: '¨',\n  copy: '©',\n  ordf: 'ª',\n  laquo: '«',\n  not: '¬',\n  shy: '­',\n  reg: '®',\n  macr: '¯',\n  deg: '°',\n  plusmn: '±',\n  sup2: '²',\n  sup3: '³',\n  acute: '´',\n  micro: 'µ',\n  para: '¶',\n  middot: '·',\n  cedil: '¸',\n  sup1: '¹',\n  ordm: 'º',\n  raquo: '»',\n  frac14: '¼',\n  frac12: '½',\n  frac34: '¾',\n  iquest: '¿',\n  Agrave: 'À',\n  Aacute: 'Á',\n  Acirc: 'Â',\n  Atilde: 'Ã',\n  Auml: 'Ä',\n  Aring: 'Å',\n  AElig: 'Æ',\n  Ccedil: 'Ç',\n  Egrave: 'È',\n  Eacute: 'É',\n  Ecirc: 'Ê',\n  Euml: 'Ë',\n  Igrave: 'Ì',\n  Iacute: 'Í',\n  Icirc: 'Î',\n  Iuml: 'Ï',\n  ETH: 'Ð',\n  Ntilde: 'Ñ',\n  Ograve: 'Ò',\n  Oacute: 'Ó',\n  Ocirc: 'Ô',\n  Otilde: 'Õ',\n  Ouml: 'Ö',\n  times: '×',\n  Oslash: 'Ø',\n  Ugrave: 'Ù',\n  Uacute: 'Ú',\n  Ucirc: 'Û',\n  Uuml: 'Ü',\n  Yacute: 'Ý',\n  THORN: 'Þ',\n  szlig: 'ß',\n  agrave: 'à',\n  aacute: 'á',\n  acirc: 'â',\n  atilde: 'ã',\n  auml: 'ä',\n  aring: 'å',\n  aelig: 'æ',\n  ccedil: 'ç',\n  egrave: 'è',\n  eacute: 'é',\n  ecirc: 'ê',\n  euml: 'ë',\n  igrave: 'ì',\n  iacute: 'í',\n  icirc: 'î',\n  iuml: 'ï',\n  eth: 'ð',\n  ntilde: 'ñ',\n  ograve: 'ò',\n  oacute: 'ó',\n  ocirc: 'ô',\n  otilde: 'õ',\n  ouml: 'ö',\n  divide: '÷',\n  oslash: 'ø',\n  ugrave: 'ù',\n  uacute: 'ú',\n  ucirc: 'û',\n  uuml: 'ü',\n  yacute: 'ý',\n  thorn: 'þ',\n  yuml: 'ÿ',\n  fnof: 'ƒ',\n  Alpha: 'Α',\n  Beta: 'Β',\n  Gamma: 'Γ',\n  Delta: 'Δ',\n  Epsilon: 'Ε',\n  Zeta: 'Ζ',\n  Eta: 'Η',\n  Theta: 'Θ',\n  Iota: 'Ι',\n  Kappa: 'Κ',\n  Lambda: 'Λ',\n  Mu: 'Μ',\n  Nu: 'Ν',\n  Xi: 'Ξ',\n  Omicron: 'Ο',\n  Pi: 'Π',\n  Rho: 'Ρ',\n  Sigma: 'Σ',\n  Tau: 'Τ',\n  Upsilon: 'Υ',\n  Phi: 'Φ',\n  Chi: 'Χ',\n  Psi: 'Ψ',\n  Omega: 'Ω',\n  alpha: 'α',\n  beta: 'β',\n  gamma: 'γ',\n  delta: 'δ',\n  epsilon: 'ε',\n  zeta: 'ζ',\n  eta: 'η',\n  theta: 'θ',\n  iota: 'ι',\n  kappa: 'κ',\n  lambda: 'λ',\n  mu: 'μ',\n  nu: 'ν',\n  xi: 'ξ',\n  omicron: 'ο',\n  pi: 'π',\n  rho: 'ρ',\n  sigmaf: 'ς',\n  sigma: 'σ',\n  tau: 'τ',\n  upsilon: 'υ',\n  phi: 'φ',\n  chi: 'χ',\n  psi: 'ψ',\n  omega: 'ω',\n  thetasym: 'ϑ',\n  upsih: 'ϒ',\n  piv: 'ϖ',\n  bull: '•',\n  hellip: '…',\n  prime: '′',\n  Prime: '″',\n  oline: '‾',\n  frasl: '⁄',\n  weierp: '℘',\n  image: 'ℑ',\n  real: 'ℜ',\n  trade: '™',\n  alefsym: 'ℵ',\n  larr: '←',\n  uarr: '↑',\n  rarr: '→',\n  darr: '↓',\n  harr: '↔',\n  crarr: '↵',\n  lArr: '⇐',\n  uArr: '⇑',\n  rArr: '⇒',\n  dArr: '⇓',\n  hArr: '⇔',\n  forall: '∀',\n  part: '∂',\n  exist: '∃',\n  empty: '∅',\n  nabla: '∇',\n  isin: '∈',\n  notin: '∉',\n  ni: '∋',\n  prod: '∏',\n  sum: '∑',\n  minus: '−',\n  lowast: '∗',\n  radic: '√',\n  prop: '∝',\n  infin: '∞',\n  ang: '∠',\n  and: '∧',\n  or: '∨',\n  cap: '∩',\n  cup: '∪',\n  int: '∫',\n  there4: '∴',\n  sim: '∼',\n  cong: '≅',\n  asymp: '≈',\n  ne: '≠',\n  equiv: '≡',\n  le: '≤',\n  ge: '≥',\n  sub: '⊂',\n  sup: '⊃',\n  nsub: '⊄',\n  sube: '⊆',\n  supe: '⊇',\n  oplus: '⊕',\n  otimes: '⊗',\n  perp: '⊥',\n  sdot: '⋅',\n  lceil: '⌈',\n  rceil: '⌉',\n  lfloor: '⌊',\n  rfloor: '⌋',\n  lang: '〈',\n  rang: '〉',\n  loz: '◊',\n  spades: '♠',\n  clubs: '♣',\n  hearts: '♥',\n  diams: '♦',\n  quot: '\"',\n  amp: '&',\n  lt: '<',\n  gt: '>',\n  OElig: 'Œ',\n  oelig: 'œ',\n  Scaron: 'Š',\n  scaron: 'š',\n  Yuml: 'Ÿ',\n  circ: 'ˆ',\n  tilde: '˜',\n  ensp: ' ',\n  emsp: ' ',\n  thinsp: ' ',\n  zwnj: '‌',\n  zwj: '‍',\n  lrm: '‎',\n  rlm: '‏',\n  ndash: '–',\n  mdash: '—',\n  lsquo: '‘',\n  rsquo: '’',\n  sbquo: '‚',\n  ldquo: '“',\n  rdquo: '”',\n  bdquo: '„',\n  dagger: '†',\n  Dagger: '‡',\n  permil: '‰',\n  lsaquo: '‹',\n  rsaquo: '›',\n  euro: '€'\n}\n","/**\n * List of legacy (that don’t need a trailing `;`) named references which could,\n * depending on what follows them, turn into a different meaning\n *\n * @type {Array<string>}\n */\nexport const dangerous = [\n  'cent',\n  'copy',\n  'divide',\n  'gt',\n  'lt',\n  'not',\n  'para',\n  'times'\n]\n","import {characterEntitiesLegacy} from 'character-entities-legacy'\nimport {characterEntitiesHtml4} from 'character-entities-html4'\nimport {dangerous} from '../constant/dangerous.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * `characterEntitiesHtml4` but inverted.\n *\n * @type {Record<string, string>}\n */\nconst characters = {}\n\n/** @type {string} */\nlet key\n\nfor (key in characterEntitiesHtml4) {\n  if (own.call(characterEntitiesHtml4, key)) {\n    characters[characterEntitiesHtml4[key]] = key\n  }\n}\n\nconst notAlphanumericRegex = /[^\\dA-Za-z]/\n\n/**\n * Configurable ways to encode characters as named references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @param {boolean|undefined} attribute\n * @returns {string}\n */\nexport function toNamed(code, next, omit, attribute) {\n  const character = String.fromCharCode(code)\n\n  if (own.call(characters, character)) {\n    const name = characters[character]\n    const value = '&' + name\n\n    if (\n      omit &&\n      characterEntitiesLegacy.includes(name) &&\n      !dangerous.includes(name) &&\n      (!attribute ||\n        (next &&\n          next !== 61 /* `=` */ &&\n          notAlphanumericRegex.test(String.fromCharCode(next))))\n    ) {\n      return value\n    }\n\n    return value + ';'\n  }\n\n  return ''\n}\n","/**\n * @typedef FormatSmartOptions\n * @property {boolean} [useNamedReferences=false]\n *   Prefer named character references (`&amp;`) where possible.\n * @property {boolean} [useShortestReferences=false]\n *   Prefer the shortest possible reference, if that results in less bytes.\n *   **Note**: `useNamedReferences` can be omitted when using `useShortestReferences`.\n * @property {boolean} [omitOptionalSemicolons=false]\n *   Whether to omit semicolons when possible.\n *   **Note**: This creates what HTML calls “parse errors” but is otherwise still valid HTML — don’t use this except when building a minifier.\n *   Omitting semicolons is possible for certain named and numeric references in some cases.\n * @property {boolean} [attribute=false]\n *   Create character references which don’t fail in attributes.\n *   **Note**: `attribute` only applies when operating dangerously with\n *   `omitOptionalSemicolons: true`.\n */\n\nimport {toHexadecimal} from './to-hexadecimal.js'\nimport {toDecimal} from './to-decimal.js'\nimport {toNamed} from './to-named.js'\n\n/**\n * Configurable ways to encode a character yielding pretty or small results.\n *\n * @param {number} code\n * @param {number} next\n * @param {FormatSmartOptions} options\n * @returns {string}\n */\nexport function formatSmart(code, next, options) {\n  let numeric = toHexadecimal(code, next, options.omitOptionalSemicolons)\n  /** @type {string|undefined} */\n  let named\n\n  if (options.useNamedReferences || options.useShortestReferences) {\n    named = toNamed(\n      code,\n      next,\n      options.omitOptionalSemicolons,\n      options.attribute\n    )\n  }\n\n  // Use the shortest numeric reference when requested.\n  // A simple algorithm would use decimal for all code points under 100, as\n  // those are shorter than hexadecimal:\n  //\n  // * `&#99;` vs `&#x63;` (decimal shorter)\n  // * `&#100;` vs `&#x64;` (equal)\n  //\n  // However, because we take `next` into consideration when `omit` is used,\n  // And it would be possible that decimals are shorter on bigger values as\n  // well if `next` is hexadecimal but not decimal, we instead compare both.\n  if (\n    (options.useShortestReferences || !named) &&\n    options.useShortestReferences\n  ) {\n    const decimal = toDecimal(code, next, options.omitOptionalSemicolons)\n\n    if (decimal.length < numeric.length) {\n      numeric = decimal\n    }\n  }\n\n  return named &&\n    (!options.useShortestReferences || named.length < numeric.length)\n    ? named\n    : numeric\n}\n","/**\n * @typedef {import('./core.js').CoreOptions & import('./util/format-smart.js').FormatSmartOptions} Options\n * @typedef {import('./core.js').CoreOptions} LightOptions\n */\n\nimport {core} from './core.js'\nimport {formatSmart} from './util/format-smart.js'\nimport {formatBasic} from './util/format-basic.js'\n\n/**\n * Encode special characters in `value`.\n *\n * @param {string} value\n *   Value to encode.\n * @param {Options} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nexport function stringifyEntities(value, options) {\n  return core(value, Object.assign({format: formatSmart}, options))\n}\n\n/**\n * Encode special characters in `value` as hexadecimals.\n *\n * @param {string} value\n *   Value to encode.\n * @param {LightOptions} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nexport function stringifyEntitiesLight(value, options) {\n  return core(value, Object.assign({format: formatBasic}, options))\n}\n","/**\n * @import {Comment, Parents} from 'hast'\n * @import {State} from '../index.js'\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\nconst htmlCommentRegex = /^>|^->|<!--|-->|--!>|<!-$/g\n\n// Declare arrays as variables so it can be cached by `stringifyEntities`\nconst bogusCommentEntitySubset = ['>']\nconst commentEntitySubset = ['<', '>']\n\n/**\n * Serialize a comment.\n *\n * @param {Comment} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function comment(node, _1, _2, state) {\n  // See: <https://html.spec.whatwg.org/multipage/syntax.html#comments>\n  return state.settings.bogusComments\n    ? '<?' +\n        stringifyEntities(\n          node.value,\n          Object.assign({}, state.settings.characterReferences, {\n            subset: bogusCommentEntitySubset\n          })\n        ) +\n        '>'\n    : '<!--' + node.value.replace(htmlCommentRegex, encode) + '-->'\n\n  /**\n   * @param {string} $0\n   */\n  function encode($0) {\n    return stringifyEntities(\n      $0,\n      Object.assign({}, state.settings.characterReferences, {\n        subset: commentEntitySubset\n      })\n    )\n  }\n}\n","/**\n * @import {Doctype, Parents} from 'hast'\n * @import {State} from '../index.js'\n */\n\n/**\n * Serialize a doctype.\n *\n * @param {Doctype} _1\n *   Node to handle.\n * @param {number | undefined} _2\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _3\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function doctype(_1, _2, _3, state) {\n  return (\n    '<!' +\n    (state.settings.upperDoctype ? 'DOCTYPE' : 'doctype') +\n    (state.settings.tightDoctype ? '' : ' ') +\n    'html>'\n  )\n}\n","/**\n * @import {Parents, RootContent} from 'hast'\n */\n\nimport {whitespace} from 'hast-util-whitespace'\n\nexport const siblingAfter = siblings(1)\nexport const siblingBefore = siblings(-1)\n\n/** @type {Array<RootContent>} */\nconst emptyChildren = []\n\n/**\n * Factory to check siblings in a direction.\n *\n * @param {number} increment\n */\nfunction siblings(increment) {\n  return sibling\n\n  /**\n   * Find applicable siblings in a direction.\n   *\n   * @template {Parents} Parent\n   *   Parent type.\n   * @param {Parent | undefined} parent\n   *   Parent.\n   * @param {number | undefined} index\n   *   Index of child in `parent`.\n   * @param {boolean | undefined} [includeWhitespace=false]\n   *   Whether to include whitespace (default: `false`).\n   * @returns {Parent extends {children: Array<infer Child>} ? Child | undefined : never}\n   *   Child of parent.\n   */\n  function sibling(parent, index, includeWhitespace) {\n    const siblings = parent ? parent.children : emptyChildren\n    let offset = (index || 0) + increment\n    let next = siblings[offset]\n\n    if (!includeWhitespace) {\n      while (next && whitespace(next)) {\n        offset += increment\n        next = siblings[offset]\n      }\n    }\n\n    // @ts-expect-error: it’s a correct child.\n    return next\n  }\n}\n","/**\n * @import {Element, Parents} from 'hast'\n */\n\n/**\n * @callback OmitHandle\n *   Check if a tag can be omitted.\n * @param {Element} element\n *   Element to check.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether to omit a tag.\n *\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Factory to check if a given node can have a tag omitted.\n *\n * @param {Record<string, OmitHandle>} handlers\n *   Omission handlers, where each key is a tag name, and each value is the\n *   corresponding handler.\n * @returns {OmitHandle}\n *   Whether to omit a tag of an element.\n */\nexport function omission(handlers) {\n  return omit\n\n  /**\n   * Check if a given node can have a tag omitted.\n   *\n   * @type {OmitHandle}\n   */\n  function omit(node, index, parent) {\n    return (\n      own.call(handlers, node.tagName) &&\n      handlers[node.tagName](node, index, parent)\n    )\n  }\n}\n","/**\n * @import {Element, Parents} from 'hast'\n */\n\nimport {whitespace} from 'hast-util-whitespace'\nimport {siblingAfter} from './util/siblings.js'\nimport {omission} from './omission.js'\n\nexport const closing = omission({\n  body,\n  caption: headOrColgroupOrCaption,\n  colgroup: headOrColgroupOrCaption,\n  dd,\n  dt,\n  head: headOrColgroupOrCaption,\n  html,\n  li,\n  optgroup,\n  option,\n  p,\n  rp: rubyElement,\n  rt: rubyElement,\n  tbody,\n  td: cells,\n  tfoot,\n  th: cells,\n  thead,\n  tr\n})\n\n/**\n * Macro for `</head>`, `</colgroup>`, and `</caption>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction headOrColgroupOrCaption(_, index, parent) {\n  const next = siblingAfter(parent, index, true)\n  return (\n    !next ||\n    (next.type !== 'comment' &&\n      !(next.type === 'text' && whitespace(next.value.charAt(0))))\n  )\n}\n\n/**\n * Whether to omit `</html>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction html(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || next.type !== 'comment'\n}\n\n/**\n * Whether to omit `</body>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction body(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || next.type !== 'comment'\n}\n\n/**\n * Whether to omit `</p>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction p(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return next\n    ? next.type === 'element' &&\n        (next.tagName === 'address' ||\n          next.tagName === 'article' ||\n          next.tagName === 'aside' ||\n          next.tagName === 'blockquote' ||\n          next.tagName === 'details' ||\n          next.tagName === 'div' ||\n          next.tagName === 'dl' ||\n          next.tagName === 'fieldset' ||\n          next.tagName === 'figcaption' ||\n          next.tagName === 'figure' ||\n          next.tagName === 'footer' ||\n          next.tagName === 'form' ||\n          next.tagName === 'h1' ||\n          next.tagName === 'h2' ||\n          next.tagName === 'h3' ||\n          next.tagName === 'h4' ||\n          next.tagName === 'h5' ||\n          next.tagName === 'h6' ||\n          next.tagName === 'header' ||\n          next.tagName === 'hgroup' ||\n          next.tagName === 'hr' ||\n          next.tagName === 'main' ||\n          next.tagName === 'menu' ||\n          next.tagName === 'nav' ||\n          next.tagName === 'ol' ||\n          next.tagName === 'p' ||\n          next.tagName === 'pre' ||\n          next.tagName === 'section' ||\n          next.tagName === 'table' ||\n          next.tagName === 'ul')\n    : !parent ||\n        // Confusing parent.\n        !(\n          parent.type === 'element' &&\n          (parent.tagName === 'a' ||\n            parent.tagName === 'audio' ||\n            parent.tagName === 'del' ||\n            parent.tagName === 'ins' ||\n            parent.tagName === 'map' ||\n            parent.tagName === 'noscript' ||\n            parent.tagName === 'video')\n        )\n}\n\n/**\n * Whether to omit `</li>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction li(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'li')\n}\n\n/**\n * Whether to omit `</dt>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dt(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return Boolean(\n    next &&\n      next.type === 'element' &&\n      (next.tagName === 'dt' || next.tagName === 'dd')\n  )\n}\n\n/**\n * Whether to omit `</dd>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dd(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'dt' || next.tagName === 'dd'))\n  )\n}\n\n/**\n * Whether to omit `</rt>` or `</rp>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction rubyElement(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'rp' || next.tagName === 'rt'))\n  )\n}\n\n/**\n * Whether to omit `</optgroup>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction optgroup(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'optgroup')\n}\n\n/**\n * Whether to omit `</option>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction option(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'option' || next.tagName === 'optgroup'))\n  )\n}\n\n/**\n * Whether to omit `</thead>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction thead(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return Boolean(\n    next &&\n      next.type === 'element' &&\n      (next.tagName === 'tbody' || next.tagName === 'tfoot')\n  )\n}\n\n/**\n * Whether to omit `</tbody>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tbody(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'tbody' || next.tagName === 'tfoot'))\n  )\n}\n\n/**\n * Whether to omit `</tfoot>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tfoot(_, index, parent) {\n  return !siblingAfter(parent, index)\n}\n\n/**\n * Whether to omit `</tr>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tr(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'tr')\n}\n\n/**\n * Whether to omit `</td>` or `</th>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction cells(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'td' || next.tagName === 'th'))\n  )\n}\n","/**\n * @import {Element, Parents} from 'hast'\n */\n\nimport {whitespace} from 'hast-util-whitespace'\nimport {siblingAfter, siblingBefore} from './util/siblings.js'\nimport {closing} from './closing.js'\nimport {omission} from './omission.js'\n\nexport const opening = omission({\n  body,\n  colgroup,\n  head,\n  html,\n  tbody\n})\n\n/**\n * Whether to omit `<html>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction html(node) {\n  const head = siblingAfter(node, -1)\n  return !head || head.type !== 'comment'\n}\n\n/**\n * Whether to omit `<head>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction head(node) {\n  /** @type {Set<string>} */\n  const seen = new Set()\n\n  // Whether `srcdoc` or not,\n  // make sure the content model at least doesn’t have too many `base`s/`title`s.\n  for (const child of node.children) {\n    if (\n      child.type === 'element' &&\n      (child.tagName === 'base' || child.tagName === 'title')\n    ) {\n      if (seen.has(child.tagName)) return false\n      seen.add(child.tagName)\n    }\n  }\n\n  // “May be omitted if the element is empty,\n  // or if the first thing inside the head element is an element.”\n  const child = node.children[0]\n  return !child || child.type === 'element'\n}\n\n/**\n * Whether to omit `<body>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction body(node) {\n  const head = siblingAfter(node, -1, true)\n\n  return (\n    !head ||\n    (head.type !== 'comment' &&\n      !(head.type === 'text' && whitespace(head.value.charAt(0))) &&\n      !(\n        head.type === 'element' &&\n        (head.tagName === 'meta' ||\n          head.tagName === 'link' ||\n          head.tagName === 'script' ||\n          head.tagName === 'style' ||\n          head.tagName === 'template')\n      ))\n  )\n}\n\n/**\n * Whether to omit `<colgroup>`.\n * The spec describes some logic for the opening tag, but it’s easier to\n * implement in the closing tag, to the same effect, so we handle it there\n * instead.\n *\n * @param {Element} node\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction colgroup(node, index, parent) {\n  const previous = siblingBefore(parent, index)\n  const head = siblingAfter(node, -1, true)\n\n  // Previous colgroup was already omitted.\n  if (\n    parent &&\n    previous &&\n    previous.type === 'element' &&\n    previous.tagName === 'colgroup' &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return Boolean(head && head.type === 'element' && head.tagName === 'col')\n}\n\n/**\n * Whether to omit `<tbody>`.\n *\n * @param {Element} node\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction tbody(node, index, parent) {\n  const previous = siblingBefore(parent, index)\n  const head = siblingAfter(node, -1)\n\n  // Previous table section was already omitted.\n  if (\n    parent &&\n    previous &&\n    previous.type === 'element' &&\n    (previous.tagName === 'thead' || previous.tagName === 'tbody') &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return Boolean(head && head.type === 'element' && head.tagName === 'tr')\n}\n","/**\n * @import {Element, Parents, Properties} from 'hast'\n * @import {State} from '../index.js'\n */\n\nimport {ccount} from 'ccount'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {find, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringifyEntities} from 'stringify-entities'\nimport {closing} from '../omission/closing.js'\nimport {opening} from '../omission/opening.js'\n\n/**\n * Maps of subsets.\n *\n * Each value is a matrix of tuples.\n * The value at `0` causes parse errors, the value at `1` is valid.\n * Of both, the value at `0` is unsafe, and the value at `1` is safe.\n *\n * @type {Record<'double' | 'name' | 'single' | 'unquoted', Array<[Array<string>, Array<string>]>>}\n */\nconst constants = {\n  // See: <https://html.spec.whatwg.org/#attribute-name-state>.\n  name: [\n    ['\\t\\n\\f\\r &/=>'.split(''), '\\t\\n\\f\\r \"&\\'/=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'/<=>'.split(''), '\\0\\t\\n\\f\\r \"&\\'/<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(unquoted)-state>.\n  unquoted: [\n    ['\\t\\n\\f\\r &>'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'<=>`'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(single-quoted)-state>.\n  single: [\n    [\"&'\".split(''), '\"&\\'`'.split('')],\n    [\"\\0&'\".split(''), '\\0\"&\\'`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(double-quoted)-state>.\n  double: [\n    ['\"&'.split(''), '\"&\\'`'.split('')],\n    ['\\0\"&'.split(''), '\\0\"&\\'`'.split('')]\n  ]\n}\n\n/**\n * Serialize an element node.\n *\n * @param {Element} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function element(node, index, parent, state) {\n  const schema = state.schema\n  const omit = schema.space === 'svg' ? false : state.settings.omitOptionalTags\n  let selfClosing =\n    schema.space === 'svg'\n      ? state.settings.closeEmptyElements\n      : state.settings.voids.includes(node.tagName.toLowerCase())\n  /** @type {Array<string>} */\n  const parts = []\n  /** @type {string} */\n  let last\n\n  if (schema.space === 'html' && node.tagName === 'svg') {\n    state.schema = svg\n  }\n\n  const attributes = serializeAttributes(state, node.properties)\n\n  const content = state.all(\n    schema.space === 'html' && node.tagName === 'template' ? node.content : node\n  )\n\n  state.schema = schema\n\n  // If the node is categorised as void, but it has children, remove the\n  // categorisation.\n  // This enables for example `menuitem`s, which are void in W3C HTML but not\n  // void in WHATWG HTML, to be stringified properly.\n  // Note: `menuitem` has since been removed from the HTML spec, and so is no\n  // longer void.\n  if (content) selfClosing = false\n\n  if (attributes || !omit || !opening(node, index, parent)) {\n    parts.push('<', node.tagName, attributes ? ' ' + attributes : '')\n\n    if (\n      selfClosing &&\n      (schema.space === 'svg' || state.settings.closeSelfClosing)\n    ) {\n      last = attributes.charAt(attributes.length - 1)\n      if (\n        !state.settings.tightSelfClosing ||\n        last === '/' ||\n        (last && last !== '\"' && last !== \"'\")\n      ) {\n        parts.push(' ')\n      }\n\n      parts.push('/')\n    }\n\n    parts.push('>')\n  }\n\n  parts.push(content)\n\n  if (!selfClosing && (!omit || !closing(node, index, parent))) {\n    parts.push('</' + node.tagName + '>')\n  }\n\n  return parts.join('')\n}\n\n/**\n * @param {State} state\n * @param {Properties | null | undefined} properties\n * @returns {string}\n */\nfunction serializeAttributes(state, properties) {\n  /** @type {Array<string>} */\n  const values = []\n  let index = -1\n  /** @type {string} */\n  let key\n\n  if (properties) {\n    for (key in properties) {\n      if (properties[key] !== null && properties[key] !== undefined) {\n        const value = serializeAttribute(state, key, properties[key])\n        if (value) values.push(value)\n      }\n    }\n  }\n\n  while (++index < values.length) {\n    const last = state.settings.tightAttributes\n      ? values[index].charAt(values[index].length - 1)\n      : undefined\n\n    // In tight mode, don’t add a space after quoted attributes.\n    if (index !== values.length - 1 && last !== '\"' && last !== \"'\") {\n      values[index] += ' '\n    }\n  }\n\n  return values.join('')\n}\n\n/**\n * @param {State} state\n * @param {string} key\n * @param {Properties[keyof Properties]} value\n * @returns {string}\n */\nfunction serializeAttribute(state, key, value) {\n  const info = find(state.schema, key)\n  const x =\n    state.settings.allowParseErrors && state.schema.space === 'html' ? 0 : 1\n  const y = state.settings.allowDangerousCharacters ? 0 : 1\n  let quote = state.quote\n  /** @type {string | undefined} */\n  let result\n\n  if (info.overloadedBoolean && (value === info.attribute || value === '')) {\n    value = true\n  } else if (\n    (info.boolean || info.overloadedBoolean) &&\n    (typeof value !== 'string' || value === info.attribute || value === '')\n  ) {\n    value = Boolean(value)\n  }\n\n  if (\n    value === null ||\n    value === undefined ||\n    value === false ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return ''\n  }\n\n  const name = stringifyEntities(\n    info.attribute,\n    Object.assign({}, state.settings.characterReferences, {\n      // Always encode without parse errors in non-HTML.\n      subset: constants.name[x][y]\n    })\n  )\n\n  // No value.\n  // There is currently only one boolean property in SVG: `[download]` on\n  // `<a>`.\n  // This property does not seem to work in browsers (Firefox, Safari, Chrome),\n  // so I can’t test if dropping the value works.\n  // But I assume that it should:\n  //\n  // ```html\n  // <!doctype html>\n  // <svg viewBox=\"0 0 100 100\">\n  //   <a href=https://example.com download>\n  //     <circle cx=50 cy=40 r=35 />\n  //   </a>\n  // </svg>\n  // ```\n  //\n  // See: <https://github.com/wooorm/property-information/blob/main/lib/svg.js>\n  if (value === true) return name\n\n  // `spaces` doesn’t accept a second argument, but it’s given here just to\n  // keep the code cleaner.\n  value = Array.isArray(value)\n    ? (info.commaSeparated ? commas : spaces)(value, {\n        padLeft: !state.settings.tightCommaSeparatedLists\n      })\n    : String(value)\n\n  if (state.settings.collapseEmptyAttributes && !value) return name\n\n  // Check unquoted value.\n  if (state.settings.preferUnquoted) {\n    result = stringifyEntities(\n      value,\n      Object.assign({}, state.settings.characterReferences, {\n        attribute: true,\n        subset: constants.unquoted[x][y]\n      })\n    )\n  }\n\n  // If we don’t want unquoted, or if `value` contains character references when\n  // unquoted…\n  if (result !== value) {\n    // If the alternative is less common than `quote`, switch.\n    if (\n      state.settings.quoteSmart &&\n      ccount(value, quote) > ccount(value, state.alternative)\n    ) {\n      quote = state.alternative\n    }\n\n    result =\n      quote +\n      stringifyEntities(\n        value,\n        Object.assign({}, state.settings.characterReferences, {\n          // Always encode without parse errors in non-HTML.\n          subset: (quote === \"'\" ? constants.single : constants.double)[x][y],\n          attribute: true\n        })\n      ) +\n      quote\n  }\n\n  // Don’t add a `=` for unquoted empties.\n  return name + (result ? '=' + result : result)\n}\n","/**\n * @import {Parents, Text} from 'hast'\n * @import {Raw} from 'mdast-util-to-hast'\n * @import {State} from '../index.js'\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\n// Declare array as variable so it can be cached by `stringifyEntities`\nconst textEntitySubset = ['<', '&']\n\n/**\n * Serialize a text node.\n *\n * @param {Raw | Text} node\n *   Node to handle.\n * @param {number | undefined} _\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function text(node, _, parent, state) {\n  // Check if content of `node` should be escaped.\n  return parent &&\n    parent.type === 'element' &&\n    (parent.tagName === 'script' || parent.tagName === 'style')\n    ? node.value\n    : stringifyEntities(\n        node.value,\n        Object.assign({}, state.settings.characterReferences, {\n          subset: textEntitySubset\n        })\n      )\n}\n","/**\n * @import {Parents} from 'hast'\n * @import {Raw} from 'mdast-util-to-hast'\n * @import {State} from '../index.js'\n */\n\nimport {text} from './text.js'\n\n/**\n * Serialize a raw node.\n *\n * @param {Raw} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function raw(node, index, parent, state) {\n  return state.settings.allowDangerousHtml\n    ? node.value\n    : text(node, index, parent, state)\n}\n","/**\n * @import {Parents, Root} from 'hast'\n * @import {State} from '../index.js'\n */\n\n/**\n * Serialize a root.\n *\n * @param {Root} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function root(node, _1, _2, state) {\n  return state.all(node)\n}\n","/**\n * @import {Nodes, Parents} from 'hast'\n * @import {State} from '../index.js'\n */\n\nimport {zwitch} from 'zwitch'\nimport {comment} from './comment.js'\nimport {doctype} from './doctype.js'\nimport {element} from './element.js'\nimport {raw} from './raw.js'\nimport {root} from './root.js'\nimport {text} from './text.js'\n\n/**\n * @type {(node: Nodes, index: number | undefined, parent: Parents | undefined, state: State) => string}\n */\nexport const handle = zwitch('type', {\n  invalid,\n  unknown,\n  handlers: {comment, doctype, element, raw, root, text}\n})\n\n/**\n * Fail when a non-node is found in the tree.\n *\n * @param {unknown} node\n *   Unknown value.\n * @returns {never}\n *   Never.\n */\nfunction invalid(node) {\n  throw new Error('Expected node, not `' + node + '`')\n}\n\n/**\n * Fail when a node with an unknown type is found in the tree.\n *\n * @param {unknown} node_\n *  Unknown node.\n * @returns {never}\n *   Never.\n */\nfunction unknown(node_) {\n  // `type` is guaranteed by runtime JS.\n  const node = /** @type {Nodes} */ (node_)\n  throw new Error('Cannot compile unknown node `' + node.type + '`')\n}\n","/**\n * @import {Nodes, Parents, RootContent} from 'hast'\n * @import {Schema} from 'property-information'\n * @import {Options as StringifyEntitiesOptions} from 'stringify-entities'\n */\n\n/**\n * @typedef {Omit<StringifyEntitiesOptions, 'attribute' | 'escapeOnly' | 'subset'>} CharacterReferences\n *\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [allowDangerousCharacters=false]\n *   Do not encode some characters which cause XSS vulnerabilities in older\n *   browsers (default: `false`).\n *\n *   > ⚠️ **Danger**: only set this if you completely trust the content.\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Allow `raw` nodes and insert them as raw HTML (default: `false`).\n *\n *   When `false`, `Raw` nodes are encoded.\n *\n *   > ⚠️ **Danger**: only set this if you completely trust the content.\n * @property {boolean | null | undefined} [allowParseErrors=false]\n *   Do not encode characters which cause parse errors (even though they work),\n *   to save bytes (default: `false`).\n *\n *   Not used in the SVG space.\n *\n *   > 👉 **Note**: intentionally creates parse errors in markup (how parse\n *   > errors are handled is well defined, so this works but isn’t pretty).\n * @property {boolean | null | undefined} [bogusComments=false]\n *   Use “bogus comments” instead of comments to save byes: `<?charlie>`\n *   instead of `<!--charlie-->` (default: `false`).\n *\n *   > 👉 **Note**: intentionally creates parse errors in markup (how parse\n *   > errors are handled is well defined, so this works but isn’t pretty).\n * @property {CharacterReferences | null | undefined} [characterReferences]\n *   Configure how to serialize character references (optional).\n * @property {boolean | null | undefined} [closeEmptyElements=false]\n *   Close SVG elements without any content with slash (`/`) on the opening tag\n *   instead of an end tag: `<circle />` instead of `<circle></circle>`\n *   (default: `false`).\n *\n *   See `tightSelfClosing` to control whether a space is used before the\n *   slash.\n *\n *   Not used in the HTML space.\n * @property {boolean | null | undefined} [closeSelfClosing=false]\n *   Close self-closing nodes with an extra slash (`/`): `<img />` instead of\n *   `<img>` (default: `false`).\n *\n *   See `tightSelfClosing` to control whether a space is used before the\n *   slash.\n *\n *   Not used in the SVG space.\n * @property {boolean | null | undefined} [collapseEmptyAttributes=false]\n *   Collapse empty attributes: get `class` instead of `class=\"\"` (default:\n *   `false`).\n *\n *   Not used in the SVG space.\n *\n *   > 👉 **Note**: boolean attributes (such as `hidden`) are always collapsed.\n * @property {boolean | null | undefined} [omitOptionalTags=false]\n *   Omit optional opening and closing tags (default: `false`).\n *\n *   For example, in `<ol><li>one</li><li>two</li></ol>`, both `</li>` closing\n *   tags can be omitted.\n *   The first because it’s followed by another `li`, the last because it’s\n *   followed by nothing.\n *\n *   Not used in the SVG space.\n * @property {boolean | null | undefined} [preferUnquoted=false]\n *   Leave attributes unquoted if that results in less bytes (default: `false`).\n *\n *   Not used in the SVG space.\n * @property {boolean | null | undefined} [quoteSmart=false]\n *   Use the other quote if that results in less bytes (default: `false`).\n * @property {Quote | null | undefined} [quote='\"']\n *   Preferred quote to use (default: `'\"'`).\n * @property {Space | null | undefined} [space='html']\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it (default: `'html'`).\n *\n *   > 👉 **Note**: hast is not XML.\n *   > It supports SVG as embedded in HTML.\n *   > It does not support the features available in XML.\n *   > Passing SVG might break but fragments of modern SVG should be fine.\n *   > Use [`xast`][xast] if you need to support SVG as XML.\n * @property {boolean | null | undefined} [tightAttributes=false]\n *   Join attributes together, without whitespace, if possible: get\n *   `class=\"a b\"title=\"c d\"` instead of `class=\"a b\" title=\"c d\"` to save\n *   bytes (default: `false`).\n *\n *   Not used in the SVG space.\n *\n *   > 👉 **Note**: intentionally creates parse errors in markup (how parse\n *   > errors are handled is well defined, so this works but isn’t pretty).\n * @property {boolean | null | undefined} [tightCommaSeparatedLists=false]\n *   Join known comma-separated attribute values with just a comma (`,`),\n *   instead of padding them on the right as well (`,␠`, where `␠` represents a\n *   space) (default: `false`).\n * @property {boolean | null | undefined} [tightDoctype=false]\n *   Drop unneeded spaces in doctypes: `<!doctypehtml>` instead of\n *   `<!doctype html>` to save bytes (default: `false`).\n *\n *   > 👉 **Note**: intentionally creates parse errors in markup (how parse\n *   > errors are handled is well defined, so this works but isn’t pretty).\n * @property {boolean | null | undefined} [tightSelfClosing=false]\n *   Do not use an extra space when closing self-closing elements: `<img/>`\n *   instead of `<img />` (default: `false`).\n *\n *   > 👉 **Note**: only used if `closeSelfClosing: true` or\n *   > `closeEmptyElements: true`.\n * @property {boolean | null | undefined} [upperDoctype=false]\n *   Use a `<!DOCTYPE…` instead of `<!doctype…` (default: `false`).\n *\n *   Useless except for XHTML.\n * @property {ReadonlyArray<string> | null | undefined} [voids]\n *   Tag names of elements to serialize without closing tag (default: `html-void-elements`).\n *\n *   Not used in the SVG space.\n *\n *   > 👉 **Note**: It’s highly unlikely that you want to pass this, because\n *   > hast is not for XML, and HTML will not add more void elements.\n *\n * @typedef {'\"' | \"'\"} Quote\n *   HTML quotes for attribute values.\n *\n * @typedef {Omit<Required<{[key in keyof Options]: Exclude<Options[key], null | undefined>}>, 'space' | 'quote'>} Settings\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {(node: Parents | undefined) => string} all\n *   Serialize the children of a parent node.\n * @property {Quote} alternative\n *   Alternative quote.\n * @property {(node: Nodes, index: number | undefined, parent: Parents | undefined) => string} one\n *   Serialize one node.\n * @property {Quote} quote\n *   Preferred quote.\n * @property {Schema} schema\n *   Current schema.\n * @property {Settings} settings\n *   User configuration.\n */\n\nimport {htmlVoidElements} from 'html-void-elements'\nimport {html, svg} from 'property-information'\nimport {handle} from './handle/index.js'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/** @type {CharacterReferences} */\nconst emptyCharacterReferences = {}\n\n/** @type {Array<never>} */\nconst emptyChildren = []\n\n/**\n * Serialize hast as HTML.\n *\n * @param {Array<RootContent> | Nodes} tree\n *   Tree to serialize.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized HTML.\n */\nexport function toHtml(tree, options) {\n  const options_ = options || emptyOptions\n  const quote = options_.quote || '\"'\n  const alternative = quote === '\"' ? \"'\" : '\"'\n\n  if (quote !== '\"' && quote !== \"'\") {\n    throw new Error('Invalid quote `' + quote + '`, expected `\\'` or `\"`')\n  }\n\n  /** @type {State} */\n  const state = {\n    one,\n    all,\n    settings: {\n      omitOptionalTags: options_.omitOptionalTags || false,\n      allowParseErrors: options_.allowParseErrors || false,\n      allowDangerousCharacters: options_.allowDangerousCharacters || false,\n      quoteSmart: options_.quoteSmart || false,\n      preferUnquoted: options_.preferUnquoted || false,\n      tightAttributes: options_.tightAttributes || false,\n      upperDoctype: options_.upperDoctype || false,\n      tightDoctype: options_.tightDoctype || false,\n      bogusComments: options_.bogusComments || false,\n      tightCommaSeparatedLists: options_.tightCommaSeparatedLists || false,\n      tightSelfClosing: options_.tightSelfClosing || false,\n      collapseEmptyAttributes: options_.collapseEmptyAttributes || false,\n      allowDangerousHtml: options_.allowDangerousHtml || false,\n      voids: options_.voids || htmlVoidElements,\n      characterReferences:\n        options_.characterReferences || emptyCharacterReferences,\n      closeSelfClosing: options_.closeSelfClosing || false,\n      closeEmptyElements: options_.closeEmptyElements || false\n    },\n    schema: options_.space === 'svg' ? svg : html,\n    quote,\n    alternative\n  }\n\n  return state.one(\n    Array.isArray(tree) ? {type: 'root', children: tree} : tree,\n    undefined,\n    undefined\n  )\n}\n\n/**\n * Serialize a node.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Nodes} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(node, index, parent) {\n  return handle(node, index, parent, this)\n}\n\n/**\n * Serialize all children of `parent`.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Parents | undefined} parent\n *   Parent whose children to serialize.\n * @returns {string}\n */\nexport function all(parent) {\n  /** @type {Array<string>} */\n  const results = []\n  const children = (parent && parent.children) || emptyChildren\n  let index = -1\n\n  while (++index < children.length) {\n    results[index] = this.one(children[index], index, parent)\n  }\n\n  return results.join('')\n}\n","import { ShikiError as ShikiError$1 } from '@shikijs/types';\nexport * from '@shikijs/types';\nimport { FontStyle, INITIAL, EncodedTokenMetadata, Registry as Registry$1, Theme } from '@shikijs/vscode-textmate';\nimport { toHtml } from 'hast-util-to-html';\n\nfunction resolveColorReplacements(theme, options) {\n  const replacements = typeof theme === \"string\" ? {} : { ...theme.colorReplacements };\n  const themeName = typeof theme === \"string\" ? theme : theme.name;\n  for (const [key, value] of Object.entries(options?.colorReplacements || {})) {\n    if (typeof value === \"string\")\n      replacements[key] = value;\n    else if (key === themeName)\n      Object.assign(replacements, value);\n  }\n  return replacements;\n}\nfunction applyColorReplacements(color, replacements) {\n  if (!color)\n    return color;\n  return replacements?.[color?.toLowerCase()] || color;\n}\n\nfunction toArray(x) {\n  return Array.isArray(x) ? x : [x];\n}\nasync function normalizeGetter(p) {\n  return Promise.resolve(typeof p === \"function\" ? p() : p).then((r) => r.default || r);\n}\nfunction isPlainLang(lang) {\n  return !lang || [\"plaintext\", \"txt\", \"text\", \"plain\"].includes(lang);\n}\nfunction isSpecialLang(lang) {\n  return lang === \"ansi\" || isPlainLang(lang);\n}\nfunction isNoneTheme(theme) {\n  return theme === \"none\";\n}\nfunction isSpecialTheme(theme) {\n  return isNoneTheme(theme);\n}\n\nfunction addClassToHast(node, className) {\n  if (!className)\n    return node;\n  node.properties ||= {};\n  node.properties.class ||= [];\n  if (typeof node.properties.class === \"string\")\n    node.properties.class = node.properties.class.split(/\\s+/g);\n  if (!Array.isArray(node.properties.class))\n    node.properties.class = [];\n  const targets = Array.isArray(className) ? className : className.split(/\\s+/g);\n  for (const c of targets) {\n    if (c && !node.properties.class.includes(c))\n      node.properties.class.push(c);\n  }\n  return node;\n}\n\nfunction splitLines(code, preserveEnding = false) {\n  const parts = code.split(/(\\r?\\n)/g);\n  let index = 0;\n  const lines = [];\n  for (let i = 0; i < parts.length; i += 2) {\n    const line = preserveEnding ? parts[i] + (parts[i + 1] || \"\") : parts[i];\n    lines.push([line, index]);\n    index += parts[i].length;\n    index += parts[i + 1]?.length || 0;\n  }\n  return lines;\n}\nfunction createPositionConverter(code) {\n  const lines = splitLines(code, true).map(([line]) => line);\n  function indexToPos(index) {\n    if (index === code.length) {\n      return {\n        line: lines.length - 1,\n        character: lines[lines.length - 1].length\n      };\n    }\n    let character = index;\n    let line = 0;\n    for (const lineText of lines) {\n      if (character < lineText.length)\n        break;\n      character -= lineText.length;\n      line++;\n    }\n    return { line, character };\n  }\n  function posToIndex(line, character) {\n    let index = 0;\n    for (let i = 0; i < line; i++)\n      index += lines[i].length;\n    index += character;\n    return index;\n  }\n  return {\n    lines,\n    indexToPos,\n    posToIndex\n  };\n}\nfunction guessEmbeddedLanguages(code, _lang, highlighter) {\n  const langs = /* @__PURE__ */ new Set();\n  for (const match of code.matchAll(/lang=[\"']([\\w-]+)[\"']/g)) {\n    langs.add(match[1]);\n  }\n  for (const match of code.matchAll(/(?:```|~~~)([\\w-]+)/g)) {\n    langs.add(match[1]);\n  }\n  for (const match of code.matchAll(/\\\\begin\\{([\\w-]+)\\}/g)) {\n    langs.add(match[1]);\n  }\n  if (!highlighter)\n    return Array.from(langs);\n  const bundle = highlighter.getBundledLanguages();\n  return Array.from(langs).filter((l) => l && bundle[l]);\n}\n\nconst DEFAULT_COLOR_LIGHT_DARK = \"light-dark()\";\nconst COLOR_KEYS = [\"color\", \"background-color\"];\n\nfunction splitToken(token, offsets) {\n  let lastOffset = 0;\n  const tokens = [];\n  for (const offset of offsets) {\n    if (offset > lastOffset) {\n      tokens.push({\n        ...token,\n        content: token.content.slice(lastOffset, offset),\n        offset: token.offset + lastOffset\n      });\n    }\n    lastOffset = offset;\n  }\n  if (lastOffset < token.content.length) {\n    tokens.push({\n      ...token,\n      content: token.content.slice(lastOffset),\n      offset: token.offset + lastOffset\n    });\n  }\n  return tokens;\n}\nfunction splitTokens(tokens, breakpoints) {\n  const sorted = Array.from(breakpoints instanceof Set ? breakpoints : new Set(breakpoints)).sort((a, b) => a - b);\n  if (!sorted.length)\n    return tokens;\n  return tokens.map((line) => {\n    return line.flatMap((token) => {\n      const breakpointsInToken = sorted.filter((i) => token.offset < i && i < token.offset + token.content.length).map((i) => i - token.offset).sort((a, b) => a - b);\n      if (!breakpointsInToken.length)\n        return token;\n      return splitToken(token, breakpointsInToken);\n    });\n  });\n}\nfunction flatTokenVariants(merged, variantsOrder, cssVariablePrefix, defaultColor, colorsRendering = \"css-vars\") {\n  const token = {\n    content: merged.content,\n    explanation: merged.explanation,\n    offset: merged.offset\n  };\n  const styles = variantsOrder.map((t) => getTokenStyleObject(merged.variants[t]));\n  const styleKeys = new Set(styles.flatMap((t) => Object.keys(t)));\n  const mergedStyles = {};\n  const varKey = (idx, key) => {\n    const keyName = key === \"color\" ? \"\" : key === \"background-color\" ? \"-bg\" : `-${key}`;\n    return cssVariablePrefix + variantsOrder[idx] + (key === \"color\" ? \"\" : keyName);\n  };\n  styles.forEach((cur, idx) => {\n    for (const key of styleKeys) {\n      const value = cur[key] || \"inherit\";\n      if (idx === 0 && defaultColor && COLOR_KEYS.includes(key)) {\n        if (defaultColor === DEFAULT_COLOR_LIGHT_DARK && styles.length > 1) {\n          const lightIndex = variantsOrder.findIndex((t) => t === \"light\");\n          const darkIndex = variantsOrder.findIndex((t) => t === \"dark\");\n          if (lightIndex === -1 || darkIndex === -1)\n            throw new ShikiError$1('When using `defaultColor: \"light-dark()\"`, you must provide both `light` and `dark` themes');\n          const lightValue = styles[lightIndex][key] || \"inherit\";\n          const darkValue = styles[darkIndex][key] || \"inherit\";\n          mergedStyles[key] = `light-dark(${lightValue}, ${darkValue})`;\n          if (colorsRendering === \"css-vars\")\n            mergedStyles[varKey(idx, key)] = value;\n        } else {\n          mergedStyles[key] = value;\n        }\n      } else {\n        if (colorsRendering === \"css-vars\")\n          mergedStyles[varKey(idx, key)] = value;\n      }\n    }\n  });\n  token.htmlStyle = mergedStyles;\n  return token;\n}\nfunction getTokenStyleObject(token) {\n  const styles = {};\n  if (token.color)\n    styles.color = token.color;\n  if (token.bgColor)\n    styles[\"background-color\"] = token.bgColor;\n  if (token.fontStyle) {\n    if (token.fontStyle & FontStyle.Italic)\n      styles[\"font-style\"] = \"italic\";\n    if (token.fontStyle & FontStyle.Bold)\n      styles[\"font-weight\"] = \"bold\";\n    const decorations = [];\n    if (token.fontStyle & FontStyle.Underline)\n      decorations.push(\"underline\");\n    if (token.fontStyle & FontStyle.Strikethrough)\n      decorations.push(\"line-through\");\n    if (decorations.length)\n      styles[\"text-decoration\"] = decorations.join(\" \");\n  }\n  return styles;\n}\nfunction stringifyTokenStyle(token) {\n  if (typeof token === \"string\")\n    return token;\n  return Object.entries(token).map(([key, value]) => `${key}:${value}`).join(\";\");\n}\n\nconst _grammarStateMap = /* @__PURE__ */ new WeakMap();\nfunction setLastGrammarStateToMap(keys, state) {\n  _grammarStateMap.set(keys, state);\n}\nfunction getLastGrammarStateFromMap(keys) {\n  return _grammarStateMap.get(keys);\n}\nclass GrammarState {\n  /**\n   * Theme to Stack mapping\n   */\n  _stacks = {};\n  lang;\n  get themes() {\n    return Object.keys(this._stacks);\n  }\n  get theme() {\n    return this.themes[0];\n  }\n  get _stack() {\n    return this._stacks[this.theme];\n  }\n  /**\n   * Static method to create a initial grammar state.\n   */\n  static initial(lang, themes) {\n    return new GrammarState(\n      Object.fromEntries(toArray(themes).map((theme) => [theme, INITIAL])),\n      lang\n    );\n  }\n  constructor(...args) {\n    if (args.length === 2) {\n      const [stacksMap, lang] = args;\n      this.lang = lang;\n      this._stacks = stacksMap;\n    } else {\n      const [stack, lang, theme] = args;\n      this.lang = lang;\n      this._stacks = { [theme]: stack };\n    }\n  }\n  /**\n   * Get the internal stack object.\n   * @internal\n   */\n  getInternalStack(theme = this.theme) {\n    return this._stacks[theme];\n  }\n  getScopes(theme = this.theme) {\n    return getScopes(this._stacks[theme]);\n  }\n  toJSON() {\n    return {\n      lang: this.lang,\n      theme: this.theme,\n      themes: this.themes,\n      scopes: this.getScopes()\n    };\n  }\n}\nfunction getScopes(stack) {\n  const scopes = [];\n  const visited = /* @__PURE__ */ new Set();\n  function pushScope(stack2) {\n    if (visited.has(stack2))\n      return;\n    visited.add(stack2);\n    const name = stack2?.nameScopesList?.scopeName;\n    if (name)\n      scopes.push(name);\n    if (stack2.parent)\n      pushScope(stack2.parent);\n  }\n  pushScope(stack);\n  return scopes;\n}\nfunction getGrammarStack(state, theme) {\n  if (!(state instanceof GrammarState))\n    throw new ShikiError$1(\"Invalid grammar state\");\n  return state.getInternalStack(theme);\n}\n\nfunction transformerDecorations() {\n  const map = /* @__PURE__ */ new WeakMap();\n  function getContext(shiki) {\n    if (!map.has(shiki.meta)) {\n      let normalizePosition = function(p) {\n        if (typeof p === \"number\") {\n          if (p < 0 || p > shiki.source.length)\n            throw new ShikiError$1(`Invalid decoration offset: ${p}. Code length: ${shiki.source.length}`);\n          return {\n            ...converter.indexToPos(p),\n            offset: p\n          };\n        } else {\n          const line = converter.lines[p.line];\n          if (line === void 0)\n            throw new ShikiError$1(`Invalid decoration position ${JSON.stringify(p)}. Lines length: ${converter.lines.length}`);\n          let character = p.character;\n          if (character < 0)\n            character = line.length + character;\n          if (character < 0 || character > line.length)\n            throw new ShikiError$1(`Invalid decoration position ${JSON.stringify(p)}. Line ${p.line} length: ${line.length}`);\n          return {\n            ...p,\n            character,\n            offset: converter.posToIndex(p.line, character)\n          };\n        }\n      };\n      const converter = createPositionConverter(shiki.source);\n      const decorations = (shiki.options.decorations || []).map((d) => ({\n        ...d,\n        start: normalizePosition(d.start),\n        end: normalizePosition(d.end)\n      }));\n      verifyIntersections(decorations);\n      map.set(shiki.meta, {\n        decorations,\n        converter,\n        source: shiki.source\n      });\n    }\n    return map.get(shiki.meta);\n  }\n  return {\n    name: \"shiki:decorations\",\n    tokens(tokens) {\n      if (!this.options.decorations?.length)\n        return;\n      const ctx = getContext(this);\n      const breakpoints = ctx.decorations.flatMap((d) => [d.start.offset, d.end.offset]);\n      const splitted = splitTokens(tokens, breakpoints);\n      return splitted;\n    },\n    code(codeEl) {\n      if (!this.options.decorations?.length)\n        return;\n      const ctx = getContext(this);\n      const lines = Array.from(codeEl.children).filter((i) => i.type === \"element\" && i.tagName === \"span\");\n      if (lines.length !== ctx.converter.lines.length)\n        throw new ShikiError$1(`Number of lines in code element (${lines.length}) does not match the number of lines in the source (${ctx.converter.lines.length}). Failed to apply decorations.`);\n      function applyLineSection(line, start, end, decoration) {\n        const lineEl = lines[line];\n        let text = \"\";\n        let startIndex = -1;\n        let endIndex = -1;\n        if (start === 0)\n          startIndex = 0;\n        if (end === 0)\n          endIndex = 0;\n        if (end === Number.POSITIVE_INFINITY)\n          endIndex = lineEl.children.length;\n        if (startIndex === -1 || endIndex === -1) {\n          for (let i = 0; i < lineEl.children.length; i++) {\n            text += stringify(lineEl.children[i]);\n            if (startIndex === -1 && text.length === start)\n              startIndex = i + 1;\n            if (endIndex === -1 && text.length === end)\n              endIndex = i + 1;\n          }\n        }\n        if (startIndex === -1)\n          throw new ShikiError$1(`Failed to find start index for decoration ${JSON.stringify(decoration.start)}`);\n        if (endIndex === -1)\n          throw new ShikiError$1(`Failed to find end index for decoration ${JSON.stringify(decoration.end)}`);\n        const children = lineEl.children.slice(startIndex, endIndex);\n        if (!decoration.alwaysWrap && children.length === lineEl.children.length) {\n          applyDecoration(lineEl, decoration, \"line\");\n        } else if (!decoration.alwaysWrap && children.length === 1 && children[0].type === \"element\") {\n          applyDecoration(children[0], decoration, \"token\");\n        } else {\n          const wrapper = {\n            type: \"element\",\n            tagName: \"span\",\n            properties: {},\n            children\n          };\n          applyDecoration(wrapper, decoration, \"wrapper\");\n          lineEl.children.splice(startIndex, children.length, wrapper);\n        }\n      }\n      function applyLine(line, decoration) {\n        lines[line] = applyDecoration(lines[line], decoration, \"line\");\n      }\n      function applyDecoration(el, decoration, type) {\n        const properties = decoration.properties || {};\n        const transform = decoration.transform || ((i) => i);\n        el.tagName = decoration.tagName || \"span\";\n        el.properties = {\n          ...el.properties,\n          ...properties,\n          class: el.properties.class\n        };\n        if (decoration.properties?.class)\n          addClassToHast(el, decoration.properties.class);\n        el = transform(el, type) || el;\n        return el;\n      }\n      const lineApplies = [];\n      const sorted = ctx.decorations.sort((a, b) => b.start.offset - a.start.offset || a.end.offset - b.end.offset);\n      for (const decoration of sorted) {\n        const { start, end } = decoration;\n        if (start.line === end.line) {\n          applyLineSection(start.line, start.character, end.character, decoration);\n        } else if (start.line < end.line) {\n          applyLineSection(start.line, start.character, Number.POSITIVE_INFINITY, decoration);\n          for (let i = start.line + 1; i < end.line; i++)\n            lineApplies.unshift(() => applyLine(i, decoration));\n          applyLineSection(end.line, 0, end.character, decoration);\n        }\n      }\n      lineApplies.forEach((i) => i());\n    }\n  };\n}\nfunction verifyIntersections(items) {\n  for (let i = 0; i < items.length; i++) {\n    const foo = items[i];\n    if (foo.start.offset > foo.end.offset)\n      throw new ShikiError$1(`Invalid decoration range: ${JSON.stringify(foo.start)} - ${JSON.stringify(foo.end)}`);\n    for (let j = i + 1; j < items.length; j++) {\n      const bar = items[j];\n      const isFooHasBarStart = foo.start.offset <= bar.start.offset && bar.start.offset < foo.end.offset;\n      const isFooHasBarEnd = foo.start.offset < bar.end.offset && bar.end.offset <= foo.end.offset;\n      const isBarHasFooStart = bar.start.offset <= foo.start.offset && foo.start.offset < bar.end.offset;\n      const isBarHasFooEnd = bar.start.offset < foo.end.offset && foo.end.offset <= bar.end.offset;\n      if (isFooHasBarStart || isFooHasBarEnd || isBarHasFooStart || isBarHasFooEnd) {\n        if (isFooHasBarStart && isFooHasBarEnd)\n          continue;\n        if (isBarHasFooStart && isBarHasFooEnd)\n          continue;\n        if (isBarHasFooStart && foo.start.offset === foo.end.offset)\n          continue;\n        if (isFooHasBarEnd && bar.start.offset === bar.end.offset)\n          continue;\n        throw new ShikiError$1(`Decorations ${JSON.stringify(foo.start)} and ${JSON.stringify(bar.start)} intersect.`);\n      }\n    }\n  }\n}\nfunction stringify(el) {\n  if (el.type === \"text\")\n    return el.value;\n  if (el.type === \"element\")\n    return el.children.map(stringify).join(\"\");\n  return \"\";\n}\n\nconst builtInTransformers = [\n  /* @__PURE__ */ transformerDecorations()\n];\nfunction getTransformers(options) {\n  const transformers = sortTransformersByEnforcement(options.transformers || []);\n  return [\n    ...transformers.pre,\n    ...transformers.normal,\n    ...transformers.post,\n    ...builtInTransformers\n  ];\n}\nfunction sortTransformersByEnforcement(transformers) {\n  const pre = [];\n  const post = [];\n  const normal = [];\n  for (const transformer of transformers) {\n    switch (transformer.enforce) {\n      case \"pre\":\n        pre.push(transformer);\n        break;\n      case \"post\":\n        post.push(transformer);\n        break;\n      default:\n        normal.push(transformer);\n    }\n  }\n  return { pre, post, normal };\n}\n\n// src/colors.ts\nvar namedColors = [\n  \"black\",\n  \"red\",\n  \"green\",\n  \"yellow\",\n  \"blue\",\n  \"magenta\",\n  \"cyan\",\n  \"white\",\n  \"brightBlack\",\n  \"brightRed\",\n  \"brightGreen\",\n  \"brightYellow\",\n  \"brightBlue\",\n  \"brightMagenta\",\n  \"brightCyan\",\n  \"brightWhite\"\n];\n\n// src/decorations.ts\nvar decorations = {\n  1: \"bold\",\n  2: \"dim\",\n  3: \"italic\",\n  4: \"underline\",\n  7: \"reverse\",\n  8: \"hidden\",\n  9: \"strikethrough\"\n};\n\n// src/parser.ts\nfunction findSequence(value, position) {\n  const nextEscape = value.indexOf(\"\\x1B\", position);\n  if (nextEscape !== -1) {\n    if (value[nextEscape + 1] === \"[\") {\n      const nextClose = value.indexOf(\"m\", nextEscape);\n      if (nextClose !== -1) {\n        return {\n          sequence: value.substring(nextEscape + 2, nextClose).split(\";\"),\n          startPosition: nextEscape,\n          position: nextClose + 1\n        };\n      }\n    }\n  }\n  return {\n    position: value.length\n  };\n}\nfunction parseColor(sequence) {\n  const colorMode = sequence.shift();\n  if (colorMode === \"2\") {\n    const rgb = sequence.splice(0, 3).map((x) => Number.parseInt(x));\n    if (rgb.length !== 3 || rgb.some((x) => Number.isNaN(x)))\n      return;\n    return {\n      type: \"rgb\",\n      rgb\n    };\n  } else if (colorMode === \"5\") {\n    const index = sequence.shift();\n    if (index) {\n      return { type: \"table\", index: Number(index) };\n    }\n  }\n}\nfunction parseSequence(sequence) {\n  const commands = [];\n  while (sequence.length > 0) {\n    const code = sequence.shift();\n    if (!code)\n      continue;\n    const codeInt = Number.parseInt(code);\n    if (Number.isNaN(codeInt))\n      continue;\n    if (codeInt === 0) {\n      commands.push({ type: \"resetAll\" });\n    } else if (codeInt <= 9) {\n      const decoration = decorations[codeInt];\n      if (decoration) {\n        commands.push({\n          type: \"setDecoration\",\n          value: decorations[codeInt]\n        });\n      }\n    } else if (codeInt <= 29) {\n      const decoration = decorations[codeInt - 20];\n      if (decoration) {\n        commands.push({\n          type: \"resetDecoration\",\n          value: decoration\n        });\n        if (decoration === \"dim\") {\n          commands.push({\n            type: \"resetDecoration\",\n            value: \"bold\"\n          });\n        }\n      }\n    } else if (codeInt <= 37) {\n      commands.push({\n        type: \"setForegroundColor\",\n        value: { type: \"named\", name: namedColors[codeInt - 30] }\n      });\n    } else if (codeInt === 38) {\n      const color = parseColor(sequence);\n      if (color) {\n        commands.push({\n          type: \"setForegroundColor\",\n          value: color\n        });\n      }\n    } else if (codeInt === 39) {\n      commands.push({\n        type: \"resetForegroundColor\"\n      });\n    } else if (codeInt <= 47) {\n      commands.push({\n        type: \"setBackgroundColor\",\n        value: { type: \"named\", name: namedColors[codeInt - 40] }\n      });\n    } else if (codeInt === 48) {\n      const color = parseColor(sequence);\n      if (color) {\n        commands.push({\n          type: \"setBackgroundColor\",\n          value: color\n        });\n      }\n    } else if (codeInt === 49) {\n      commands.push({\n        type: \"resetBackgroundColor\"\n      });\n    } else if (codeInt === 53) {\n      commands.push({\n        type: \"setDecoration\",\n        value: \"overline\"\n      });\n    } else if (codeInt === 55) {\n      commands.push({\n        type: \"resetDecoration\",\n        value: \"overline\"\n      });\n    } else if (codeInt >= 90 && codeInt <= 97) {\n      commands.push({\n        type: \"setForegroundColor\",\n        value: { type: \"named\", name: namedColors[codeInt - 90 + 8] }\n      });\n    } else if (codeInt >= 100 && codeInt <= 107) {\n      commands.push({\n        type: \"setBackgroundColor\",\n        value: { type: \"named\", name: namedColors[codeInt - 100 + 8] }\n      });\n    }\n  }\n  return commands;\n}\nfunction createAnsiSequenceParser() {\n  let foreground = null;\n  let background = null;\n  let decorations2 = /* @__PURE__ */ new Set();\n  return {\n    parse(value) {\n      const tokens = [];\n      let position = 0;\n      do {\n        const findResult = findSequence(value, position);\n        const text = findResult.sequence ? value.substring(position, findResult.startPosition) : value.substring(position);\n        if (text.length > 0) {\n          tokens.push({\n            value: text,\n            foreground,\n            background,\n            decorations: new Set(decorations2)\n          });\n        }\n        if (findResult.sequence) {\n          const commands = parseSequence(findResult.sequence);\n          for (const styleToken of commands) {\n            if (styleToken.type === \"resetAll\") {\n              foreground = null;\n              background = null;\n              decorations2.clear();\n            } else if (styleToken.type === \"resetForegroundColor\") {\n              foreground = null;\n            } else if (styleToken.type === \"resetBackgroundColor\") {\n              background = null;\n            } else if (styleToken.type === \"resetDecoration\") {\n              decorations2.delete(styleToken.value);\n            }\n          }\n          for (const styleToken of commands) {\n            if (styleToken.type === \"setForegroundColor\") {\n              foreground = styleToken.value;\n            } else if (styleToken.type === \"setBackgroundColor\") {\n              background = styleToken.value;\n            } else if (styleToken.type === \"setDecoration\") {\n              decorations2.add(styleToken.value);\n            }\n          }\n        }\n        position = findResult.position;\n      } while (position < value.length);\n      return tokens;\n    }\n  };\n}\n\n// src/palette.ts\nvar defaultNamedColorsMap = {\n  black: \"#000000\",\n  red: \"#bb0000\",\n  green: \"#00bb00\",\n  yellow: \"#bbbb00\",\n  blue: \"#0000bb\",\n  magenta: \"#ff00ff\",\n  cyan: \"#00bbbb\",\n  white: \"#eeeeee\",\n  brightBlack: \"#555555\",\n  brightRed: \"#ff5555\",\n  brightGreen: \"#00ff00\",\n  brightYellow: \"#ffff55\",\n  brightBlue: \"#5555ff\",\n  brightMagenta: \"#ff55ff\",\n  brightCyan: \"#55ffff\",\n  brightWhite: \"#ffffff\"\n};\nfunction createColorPalette(namedColorsMap = defaultNamedColorsMap) {\n  function namedColor(name) {\n    return namedColorsMap[name];\n  }\n  function rgbColor(rgb) {\n    return `#${rgb.map((x) => Math.max(0, Math.min(x, 255)).toString(16).padStart(2, \"0\")).join(\"\")}`;\n  }\n  let colorTable;\n  function getColorTable() {\n    if (colorTable) {\n      return colorTable;\n    }\n    colorTable = [];\n    for (let i = 0; i < namedColors.length; i++) {\n      colorTable.push(namedColor(namedColors[i]));\n    }\n    let levels = [0, 95, 135, 175, 215, 255];\n    for (let r = 0; r < 6; r++) {\n      for (let g = 0; g < 6; g++) {\n        for (let b = 0; b < 6; b++) {\n          colorTable.push(rgbColor([levels[r], levels[g], levels[b]]));\n        }\n      }\n    }\n    let level = 8;\n    for (let i = 0; i < 24; i++, level += 10) {\n      colorTable.push(rgbColor([level, level, level]));\n    }\n    return colorTable;\n  }\n  function tableColor(index) {\n    return getColorTable()[index];\n  }\n  function value(color) {\n    switch (color.type) {\n      case \"named\":\n        return namedColor(color.name);\n      case \"rgb\":\n        return rgbColor(color.rgb);\n      case \"table\":\n        return tableColor(color.index);\n    }\n  }\n  return {\n    value\n  };\n}\n\nfunction tokenizeAnsiWithTheme(theme, fileContents, options) {\n  const colorReplacements = resolveColorReplacements(theme, options);\n  const lines = splitLines(fileContents);\n  const colorPalette = createColorPalette(\n    Object.fromEntries(\n      namedColors.map((name) => [\n        name,\n        theme.colors?.[`terminal.ansi${name[0].toUpperCase()}${name.substring(1)}`]\n      ])\n    )\n  );\n  const parser = createAnsiSequenceParser();\n  return lines.map(\n    (line) => parser.parse(line[0]).map((token) => {\n      let color;\n      let bgColor;\n      if (token.decorations.has(\"reverse\")) {\n        color = token.background ? colorPalette.value(token.background) : theme.bg;\n        bgColor = token.foreground ? colorPalette.value(token.foreground) : theme.fg;\n      } else {\n        color = token.foreground ? colorPalette.value(token.foreground) : theme.fg;\n        bgColor = token.background ? colorPalette.value(token.background) : void 0;\n      }\n      color = applyColorReplacements(color, colorReplacements);\n      bgColor = applyColorReplacements(bgColor, colorReplacements);\n      if (token.decorations.has(\"dim\"))\n        color = dimColor(color);\n      let fontStyle = FontStyle.None;\n      if (token.decorations.has(\"bold\"))\n        fontStyle |= FontStyle.Bold;\n      if (token.decorations.has(\"italic\"))\n        fontStyle |= FontStyle.Italic;\n      if (token.decorations.has(\"underline\"))\n        fontStyle |= FontStyle.Underline;\n      if (token.decorations.has(\"strikethrough\"))\n        fontStyle |= FontStyle.Strikethrough;\n      return {\n        content: token.value,\n        offset: line[1],\n        // TODO: more accurate offset? might need to fork ansi-sequence-parser\n        color,\n        bgColor,\n        fontStyle\n      };\n    })\n  );\n}\nfunction dimColor(color) {\n  const hexMatch = color.match(/#([0-9a-f]{3})([0-9a-f]{3})?([0-9a-f]{2})?/);\n  if (hexMatch) {\n    if (hexMatch[3]) {\n      const alpha = Math.round(Number.parseInt(hexMatch[3], 16) / 2).toString(16).padStart(2, \"0\");\n      return `#${hexMatch[1]}${hexMatch[2]}${alpha}`;\n    } else if (hexMatch[2]) {\n      return `#${hexMatch[1]}${hexMatch[2]}80`;\n    } else {\n      return `#${Array.from(hexMatch[1]).map((x) => `${x}${x}`).join(\"\")}80`;\n    }\n  }\n  const cssVarMatch = color.match(/var\\((--[\\w-]+-ansi-[\\w-]+)\\)/);\n  if (cssVarMatch)\n    return `var(${cssVarMatch[1]}-dim)`;\n  return color;\n}\n\nfunction codeToTokensBase(internal, code, options = {}) {\n  const {\n    lang = \"text\",\n    theme: themeName = internal.getLoadedThemes()[0]\n  } = options;\n  if (isPlainLang(lang) || isNoneTheme(themeName))\n    return splitLines(code).map((line) => [{ content: line[0], offset: line[1] }]);\n  const { theme, colorMap } = internal.setTheme(themeName);\n  if (lang === \"ansi\")\n    return tokenizeAnsiWithTheme(theme, code, options);\n  const _grammar = internal.getLanguage(lang);\n  if (options.grammarState) {\n    if (options.grammarState.lang !== _grammar.name) {\n      throw new ShikiError$1(`Grammar state language \"${options.grammarState.lang}\" does not match highlight language \"${_grammar.name}\"`);\n    }\n    if (!options.grammarState.themes.includes(theme.name)) {\n      throw new ShikiError$1(`Grammar state themes \"${options.grammarState.themes}\" do not contain highlight theme \"${theme.name}\"`);\n    }\n  }\n  return tokenizeWithTheme(code, _grammar, theme, colorMap, options);\n}\nfunction getLastGrammarState(...args) {\n  if (args.length === 2) {\n    return getLastGrammarStateFromMap(args[1]);\n  }\n  const [internal, code, options = {}] = args;\n  const {\n    lang = \"text\",\n    theme: themeName = internal.getLoadedThemes()[0]\n  } = options;\n  if (isPlainLang(lang) || isNoneTheme(themeName))\n    throw new ShikiError$1(\"Plain language does not have grammar state\");\n  if (lang === \"ansi\")\n    throw new ShikiError$1(\"ANSI language does not have grammar state\");\n  const { theme, colorMap } = internal.setTheme(themeName);\n  const _grammar = internal.getLanguage(lang);\n  return new GrammarState(\n    _tokenizeWithTheme(code, _grammar, theme, colorMap, options).stateStack,\n    _grammar.name,\n    theme.name\n  );\n}\nfunction tokenizeWithTheme(code, grammar, theme, colorMap, options) {\n  const result = _tokenizeWithTheme(code, grammar, theme, colorMap, options);\n  const grammarState = new GrammarState(\n    _tokenizeWithTheme(code, grammar, theme, colorMap, options).stateStack,\n    grammar.name,\n    theme.name\n  );\n  setLastGrammarStateToMap(result.tokens, grammarState);\n  return result.tokens;\n}\nfunction _tokenizeWithTheme(code, grammar, theme, colorMap, options) {\n  const colorReplacements = resolveColorReplacements(theme, options);\n  const {\n    tokenizeMaxLineLength = 0,\n    tokenizeTimeLimit = 500\n  } = options;\n  const lines = splitLines(code);\n  let stateStack = options.grammarState ? getGrammarStack(options.grammarState, theme.name) ?? INITIAL : options.grammarContextCode != null ? _tokenizeWithTheme(\n    options.grammarContextCode,\n    grammar,\n    theme,\n    colorMap,\n    {\n      ...options,\n      grammarState: void 0,\n      grammarContextCode: void 0\n    }\n  ).stateStack : INITIAL;\n  let actual = [];\n  const final = [];\n  for (let i = 0, len = lines.length; i < len; i++) {\n    const [line, lineOffset] = lines[i];\n    if (line === \"\") {\n      actual = [];\n      final.push([]);\n      continue;\n    }\n    if (tokenizeMaxLineLength > 0 && line.length >= tokenizeMaxLineLength) {\n      actual = [];\n      final.push([{\n        content: line,\n        offset: lineOffset,\n        color: \"\",\n        fontStyle: 0\n      }]);\n      continue;\n    }\n    let resultWithScopes;\n    let tokensWithScopes;\n    let tokensWithScopesIndex;\n    if (options.includeExplanation) {\n      resultWithScopes = grammar.tokenizeLine(line, stateStack, tokenizeTimeLimit);\n      tokensWithScopes = resultWithScopes.tokens;\n      tokensWithScopesIndex = 0;\n    }\n    const result = grammar.tokenizeLine2(line, stateStack, tokenizeTimeLimit);\n    const tokensLength = result.tokens.length / 2;\n    for (let j = 0; j < tokensLength; j++) {\n      const startIndex = result.tokens[2 * j];\n      const nextStartIndex = j + 1 < tokensLength ? result.tokens[2 * j + 2] : line.length;\n      if (startIndex === nextStartIndex)\n        continue;\n      const metadata = result.tokens[2 * j + 1];\n      const color = applyColorReplacements(\n        colorMap[EncodedTokenMetadata.getForeground(metadata)],\n        colorReplacements\n      );\n      const fontStyle = EncodedTokenMetadata.getFontStyle(metadata);\n      const token = {\n        content: line.substring(startIndex, nextStartIndex),\n        offset: lineOffset + startIndex,\n        color,\n        fontStyle\n      };\n      if (options.includeExplanation) {\n        const themeSettingsSelectors = [];\n        if (options.includeExplanation !== \"scopeName\") {\n          for (const setting of theme.settings) {\n            let selectors;\n            switch (typeof setting.scope) {\n              case \"string\":\n                selectors = setting.scope.split(/,/).map((scope) => scope.trim());\n                break;\n              case \"object\":\n                selectors = setting.scope;\n                break;\n              default:\n                continue;\n            }\n            themeSettingsSelectors.push({\n              settings: setting,\n              selectors: selectors.map((selector) => selector.split(/ /))\n            });\n          }\n        }\n        token.explanation = [];\n        let offset = 0;\n        while (startIndex + offset < nextStartIndex) {\n          const tokenWithScopes = tokensWithScopes[tokensWithScopesIndex];\n          const tokenWithScopesText = line.substring(\n            tokenWithScopes.startIndex,\n            tokenWithScopes.endIndex\n          );\n          offset += tokenWithScopesText.length;\n          token.explanation.push({\n            content: tokenWithScopesText,\n            scopes: options.includeExplanation === \"scopeName\" ? explainThemeScopesNameOnly(\n              tokenWithScopes.scopes\n            ) : explainThemeScopesFull(\n              themeSettingsSelectors,\n              tokenWithScopes.scopes\n            )\n          });\n          tokensWithScopesIndex += 1;\n        }\n      }\n      actual.push(token);\n    }\n    final.push(actual);\n    actual = [];\n    stateStack = result.ruleStack;\n  }\n  return {\n    tokens: final,\n    stateStack\n  };\n}\nfunction explainThemeScopesNameOnly(scopes) {\n  return scopes.map((scope) => ({ scopeName: scope }));\n}\nfunction explainThemeScopesFull(themeSelectors, scopes) {\n  const result = [];\n  for (let i = 0, len = scopes.length; i < len; i++) {\n    const scope = scopes[i];\n    result[i] = {\n      scopeName: scope,\n      themeMatches: explainThemeScope(themeSelectors, scope, scopes.slice(0, i))\n    };\n  }\n  return result;\n}\nfunction matchesOne(selector, scope) {\n  return selector === scope || scope.substring(0, selector.length) === selector && scope[selector.length] === \".\";\n}\nfunction matches(selectors, scope, parentScopes) {\n  if (!matchesOne(selectors[selectors.length - 1], scope))\n    return false;\n  let selectorParentIndex = selectors.length - 2;\n  let parentIndex = parentScopes.length - 1;\n  while (selectorParentIndex >= 0 && parentIndex >= 0) {\n    if (matchesOne(selectors[selectorParentIndex], parentScopes[parentIndex]))\n      selectorParentIndex -= 1;\n    parentIndex -= 1;\n  }\n  if (selectorParentIndex === -1)\n    return true;\n  return false;\n}\nfunction explainThemeScope(themeSettingsSelectors, scope, parentScopes) {\n  const result = [];\n  for (const { selectors, settings } of themeSettingsSelectors) {\n    for (const selectorPieces of selectors) {\n      if (matches(selectorPieces, scope, parentScopes)) {\n        result.push(settings);\n        break;\n      }\n    }\n  }\n  return result;\n}\n\nfunction codeToTokensWithThemes(internal, code, options) {\n  const themes = Object.entries(options.themes).filter((i) => i[1]).map((i) => ({ color: i[0], theme: i[1] }));\n  const themedTokens = themes.map((t) => {\n    const tokens2 = codeToTokensBase(internal, code, {\n      ...options,\n      theme: t.theme\n    });\n    const state = getLastGrammarStateFromMap(tokens2);\n    const theme = typeof t.theme === \"string\" ? t.theme : t.theme.name;\n    return {\n      tokens: tokens2,\n      state,\n      theme\n    };\n  });\n  const tokens = syncThemesTokenization(\n    ...themedTokens.map((i) => i.tokens)\n  );\n  const mergedTokens = tokens[0].map(\n    (line, lineIdx) => line.map((_token, tokenIdx) => {\n      const mergedToken = {\n        content: _token.content,\n        variants: {},\n        offset: _token.offset\n      };\n      if (\"includeExplanation\" in options && options.includeExplanation) {\n        mergedToken.explanation = _token.explanation;\n      }\n      tokens.forEach((t, themeIdx) => {\n        const {\n          content: _,\n          explanation: __,\n          offset: ___,\n          ...styles\n        } = t[lineIdx][tokenIdx];\n        mergedToken.variants[themes[themeIdx].color] = styles;\n      });\n      return mergedToken;\n    })\n  );\n  const mergedGrammarState = themedTokens[0].state ? new GrammarState(\n    Object.fromEntries(themedTokens.map((s) => [s.theme, s.state?.getInternalStack(s.theme)])),\n    themedTokens[0].state.lang\n  ) : void 0;\n  if (mergedGrammarState)\n    setLastGrammarStateToMap(mergedTokens, mergedGrammarState);\n  return mergedTokens;\n}\nfunction syncThemesTokenization(...themes) {\n  const outThemes = themes.map(() => []);\n  const count = themes.length;\n  for (let i = 0; i < themes[0].length; i++) {\n    const lines = themes.map((t) => t[i]);\n    const outLines = outThemes.map(() => []);\n    outThemes.forEach((t, i2) => t.push(outLines[i2]));\n    const indexes = lines.map(() => 0);\n    const current = lines.map((l) => l[0]);\n    while (current.every((t) => t)) {\n      const minLength = Math.min(...current.map((t) => t.content.length));\n      for (let n = 0; n < count; n++) {\n        const token = current[n];\n        if (token.content.length === minLength) {\n          outLines[n].push(token);\n          indexes[n] += 1;\n          current[n] = lines[n][indexes[n]];\n        } else {\n          outLines[n].push({\n            ...token,\n            content: token.content.slice(0, minLength)\n          });\n          current[n] = {\n            ...token,\n            content: token.content.slice(minLength),\n            offset: token.offset + minLength\n          };\n        }\n      }\n    }\n  }\n  return outThemes;\n}\n\nfunction codeToTokens(internal, code, options) {\n  let bg;\n  let fg;\n  let tokens;\n  let themeName;\n  let rootStyle;\n  let grammarState;\n  if (\"themes\" in options) {\n    const {\n      defaultColor = \"light\",\n      cssVariablePrefix = \"--shiki-\",\n      colorsRendering = \"css-vars\"\n    } = options;\n    const themes = Object.entries(options.themes).filter((i) => i[1]).map((i) => ({ color: i[0], theme: i[1] })).sort((a, b) => a.color === defaultColor ? -1 : b.color === defaultColor ? 1 : 0);\n    if (themes.length === 0)\n      throw new ShikiError$1(\"`themes` option must not be empty\");\n    const themeTokens = codeToTokensWithThemes(\n      internal,\n      code,\n      options\n    );\n    grammarState = getLastGrammarStateFromMap(themeTokens);\n    if (defaultColor && DEFAULT_COLOR_LIGHT_DARK !== defaultColor && !themes.find((t) => t.color === defaultColor))\n      throw new ShikiError$1(`\\`themes\\` option must contain the defaultColor key \\`${defaultColor}\\``);\n    const themeRegs = themes.map((t) => internal.getTheme(t.theme));\n    const themesOrder = themes.map((t) => t.color);\n    tokens = themeTokens.map((line) => line.map((token) => flatTokenVariants(token, themesOrder, cssVariablePrefix, defaultColor, colorsRendering)));\n    if (grammarState)\n      setLastGrammarStateToMap(tokens, grammarState);\n    const themeColorReplacements = themes.map((t) => resolveColorReplacements(t.theme, options));\n    fg = mapThemeColors(themes, themeRegs, themeColorReplacements, cssVariablePrefix, defaultColor, \"fg\", colorsRendering);\n    bg = mapThemeColors(themes, themeRegs, themeColorReplacements, cssVariablePrefix, defaultColor, \"bg\", colorsRendering);\n    themeName = `shiki-themes ${themeRegs.map((t) => t.name).join(\" \")}`;\n    rootStyle = defaultColor ? void 0 : [fg, bg].join(\";\");\n  } else if (\"theme\" in options) {\n    const colorReplacements = resolveColorReplacements(options.theme, options);\n    tokens = codeToTokensBase(\n      internal,\n      code,\n      options\n    );\n    const _theme = internal.getTheme(options.theme);\n    bg = applyColorReplacements(_theme.bg, colorReplacements);\n    fg = applyColorReplacements(_theme.fg, colorReplacements);\n    themeName = _theme.name;\n    grammarState = getLastGrammarStateFromMap(tokens);\n  } else {\n    throw new ShikiError$1(\"Invalid options, either `theme` or `themes` must be provided\");\n  }\n  return {\n    tokens,\n    fg,\n    bg,\n    themeName,\n    rootStyle,\n    grammarState\n  };\n}\nfunction mapThemeColors(themes, themeRegs, themeColorReplacements, cssVariablePrefix, defaultColor, property, colorsRendering) {\n  return themes.map((t, idx) => {\n    const value = applyColorReplacements(themeRegs[idx][property], themeColorReplacements[idx]) || \"inherit\";\n    const cssVar = `${cssVariablePrefix + t.color}${property === \"bg\" ? \"-bg\" : \"\"}:${value}`;\n    if (idx === 0 && defaultColor) {\n      if (defaultColor === DEFAULT_COLOR_LIGHT_DARK && themes.length > 1) {\n        const lightIndex = themes.findIndex((t2) => t2.color === \"light\");\n        const darkIndex = themes.findIndex((t2) => t2.color === \"dark\");\n        if (lightIndex === -1 || darkIndex === -1)\n          throw new ShikiError$1('When using `defaultColor: \"light-dark()\"`, you must provide both `light` and `dark` themes');\n        const lightValue = applyColorReplacements(themeRegs[lightIndex][property], themeColorReplacements[lightIndex]) || \"inherit\";\n        const darkValue = applyColorReplacements(themeRegs[darkIndex][property], themeColorReplacements[darkIndex]) || \"inherit\";\n        return `light-dark(${lightValue}, ${darkValue});${cssVar}`;\n      }\n      return value;\n    }\n    if (colorsRendering === \"css-vars\") {\n      return cssVar;\n    }\n    return null;\n  }).filter((i) => !!i).join(\";\");\n}\n\nfunction codeToHast(internal, code, options, transformerContext = {\n  meta: {},\n  options,\n  codeToHast: (_code, _options) => codeToHast(internal, _code, _options),\n  codeToTokens: (_code, _options) => codeToTokens(internal, _code, _options)\n}) {\n  let input = code;\n  for (const transformer of getTransformers(options))\n    input = transformer.preprocess?.call(transformerContext, input, options) || input;\n  let {\n    tokens,\n    fg,\n    bg,\n    themeName,\n    rootStyle,\n    grammarState\n  } = codeToTokens(internal, input, options);\n  const {\n    mergeWhitespaces = true,\n    mergeSameStyleTokens = false\n  } = options;\n  if (mergeWhitespaces === true)\n    tokens = mergeWhitespaceTokens(tokens);\n  else if (mergeWhitespaces === \"never\")\n    tokens = splitWhitespaceTokens(tokens);\n  if (mergeSameStyleTokens) {\n    tokens = mergeAdjacentStyledTokens(tokens);\n  }\n  const contextSource = {\n    ...transformerContext,\n    get source() {\n      return input;\n    }\n  };\n  for (const transformer of getTransformers(options))\n    tokens = transformer.tokens?.call(contextSource, tokens) || tokens;\n  return tokensToHast(\n    tokens,\n    {\n      ...options,\n      fg,\n      bg,\n      themeName,\n      rootStyle\n    },\n    contextSource,\n    grammarState\n  );\n}\nfunction tokensToHast(tokens, options, transformerContext, grammarState = getLastGrammarStateFromMap(tokens)) {\n  const transformers = getTransformers(options);\n  const lines = [];\n  const root = {\n    type: \"root\",\n    children: []\n  };\n  const {\n    structure = \"classic\",\n    tabindex = \"0\"\n  } = options;\n  let preNode = {\n    type: \"element\",\n    tagName: \"pre\",\n    properties: {\n      class: `shiki ${options.themeName || \"\"}`,\n      style: options.rootStyle || `background-color:${options.bg};color:${options.fg}`,\n      ...tabindex !== false && tabindex != null ? {\n        tabindex: tabindex.toString()\n      } : {},\n      ...Object.fromEntries(\n        Array.from(\n          Object.entries(options.meta || {})\n        ).filter(([key]) => !key.startsWith(\"_\"))\n      )\n    },\n    children: []\n  };\n  let codeNode = {\n    type: \"element\",\n    tagName: \"code\",\n    properties: {},\n    children: lines\n  };\n  const lineNodes = [];\n  const context = {\n    ...transformerContext,\n    structure,\n    addClassToHast,\n    get source() {\n      return transformerContext.source;\n    },\n    get tokens() {\n      return tokens;\n    },\n    get options() {\n      return options;\n    },\n    get root() {\n      return root;\n    },\n    get pre() {\n      return preNode;\n    },\n    get code() {\n      return codeNode;\n    },\n    get lines() {\n      return lineNodes;\n    }\n  };\n  tokens.forEach((line, idx) => {\n    if (idx) {\n      if (structure === \"inline\")\n        root.children.push({ type: \"element\", tagName: \"br\", properties: {}, children: [] });\n      else if (structure === \"classic\")\n        lines.push({ type: \"text\", value: \"\\n\" });\n    }\n    let lineNode = {\n      type: \"element\",\n      tagName: \"span\",\n      properties: { class: \"line\" },\n      children: []\n    };\n    let col = 0;\n    for (const token of line) {\n      let tokenNode = {\n        type: \"element\",\n        tagName: \"span\",\n        properties: {\n          ...token.htmlAttrs\n        },\n        children: [{ type: \"text\", value: token.content }]\n      };\n      const style = stringifyTokenStyle(token.htmlStyle || getTokenStyleObject(token));\n      if (style)\n        tokenNode.properties.style = style;\n      for (const transformer of transformers)\n        tokenNode = transformer?.span?.call(context, tokenNode, idx + 1, col, lineNode, token) || tokenNode;\n      if (structure === \"inline\")\n        root.children.push(tokenNode);\n      else if (structure === \"classic\")\n        lineNode.children.push(tokenNode);\n      col += token.content.length;\n    }\n    if (structure === \"classic\") {\n      for (const transformer of transformers)\n        lineNode = transformer?.line?.call(context, lineNode, idx + 1) || lineNode;\n      lineNodes.push(lineNode);\n      lines.push(lineNode);\n    }\n  });\n  if (structure === \"classic\") {\n    for (const transformer of transformers)\n      codeNode = transformer?.code?.call(context, codeNode) || codeNode;\n    preNode.children.push(codeNode);\n    for (const transformer of transformers)\n      preNode = transformer?.pre?.call(context, preNode) || preNode;\n    root.children.push(preNode);\n  }\n  let result = root;\n  for (const transformer of transformers)\n    result = transformer?.root?.call(context, result) || result;\n  if (grammarState)\n    setLastGrammarStateToMap(result, grammarState);\n  return result;\n}\nfunction mergeWhitespaceTokens(tokens) {\n  return tokens.map((line) => {\n    const newLine = [];\n    let carryOnContent = \"\";\n    let firstOffset = 0;\n    line.forEach((token, idx) => {\n      const isDecorated = token.fontStyle && (token.fontStyle & FontStyle.Underline || token.fontStyle & FontStyle.Strikethrough);\n      const couldMerge = !isDecorated;\n      if (couldMerge && token.content.match(/^\\s+$/) && line[idx + 1]) {\n        if (!firstOffset)\n          firstOffset = token.offset;\n        carryOnContent += token.content;\n      } else {\n        if (carryOnContent) {\n          if (couldMerge) {\n            newLine.push({\n              ...token,\n              offset: firstOffset,\n              content: carryOnContent + token.content\n            });\n          } else {\n            newLine.push(\n              {\n                content: carryOnContent,\n                offset: firstOffset\n              },\n              token\n            );\n          }\n          firstOffset = 0;\n          carryOnContent = \"\";\n        } else {\n          newLine.push(token);\n        }\n      }\n    });\n    return newLine;\n  });\n}\nfunction splitWhitespaceTokens(tokens) {\n  return tokens.map((line) => {\n    return line.flatMap((token) => {\n      if (token.content.match(/^\\s+$/))\n        return token;\n      const match = token.content.match(/^(\\s*)(.*?)(\\s*)$/);\n      if (!match)\n        return token;\n      const [, leading, content, trailing] = match;\n      if (!leading && !trailing)\n        return token;\n      const expanded = [{\n        ...token,\n        offset: token.offset + leading.length,\n        content\n      }];\n      if (leading) {\n        expanded.unshift({\n          content: leading,\n          offset: token.offset\n        });\n      }\n      if (trailing) {\n        expanded.push({\n          content: trailing,\n          offset: token.offset + leading.length + content.length\n        });\n      }\n      return expanded;\n    });\n  });\n}\nfunction mergeAdjacentStyledTokens(tokens) {\n  return tokens.map((line) => {\n    const newLine = [];\n    for (const token of line) {\n      if (newLine.length === 0) {\n        newLine.push({ ...token });\n        continue;\n      }\n      const prevToken = newLine[newLine.length - 1];\n      const prevStyle = stringifyTokenStyle(prevToken.htmlStyle || getTokenStyleObject(prevToken));\n      const currentStyle = stringifyTokenStyle(token.htmlStyle || getTokenStyleObject(token));\n      const isPrevDecorated = prevToken.fontStyle && (prevToken.fontStyle & FontStyle.Underline || prevToken.fontStyle & FontStyle.Strikethrough);\n      const isDecorated = token.fontStyle && (token.fontStyle & FontStyle.Underline || token.fontStyle & FontStyle.Strikethrough);\n      if (!isPrevDecorated && !isDecorated && prevStyle === currentStyle) {\n        prevToken.content += token.content;\n      } else {\n        newLine.push({ ...token });\n      }\n    }\n    return newLine;\n  });\n}\n\nconst hastToHtml = toHtml;\nfunction codeToHtml(internal, code, options) {\n  const context = {\n    meta: {},\n    options,\n    codeToHast: (_code, _options) => codeToHast(internal, _code, _options),\n    codeToTokens: (_code, _options) => codeToTokens(internal, _code, _options)\n  };\n  let result = hastToHtml(codeToHast(internal, code, options, context));\n  for (const transformer of getTransformers(options))\n    result = transformer.postprocess?.call(context, result, options) || result;\n  return result;\n}\n\nconst VSCODE_FALLBACK_EDITOR_FG = { light: \"#333333\", dark: \"#bbbbbb\" };\nconst VSCODE_FALLBACK_EDITOR_BG = { light: \"#fffffe\", dark: \"#1e1e1e\" };\nconst RESOLVED_KEY = \"__shiki_resolved\";\nfunction normalizeTheme(rawTheme) {\n  if (rawTheme?.[RESOLVED_KEY])\n    return rawTheme;\n  const theme = {\n    ...rawTheme\n  };\n  if (theme.tokenColors && !theme.settings) {\n    theme.settings = theme.tokenColors;\n    delete theme.tokenColors;\n  }\n  theme.type ||= \"dark\";\n  theme.colorReplacements = { ...theme.colorReplacements };\n  theme.settings ||= [];\n  let { bg, fg } = theme;\n  if (!bg || !fg) {\n    const globalSetting = theme.settings ? theme.settings.find((s) => !s.name && !s.scope) : void 0;\n    if (globalSetting?.settings?.foreground)\n      fg = globalSetting.settings.foreground;\n    if (globalSetting?.settings?.background)\n      bg = globalSetting.settings.background;\n    if (!fg && theme?.colors?.[\"editor.foreground\"])\n      fg = theme.colors[\"editor.foreground\"];\n    if (!bg && theme?.colors?.[\"editor.background\"])\n      bg = theme.colors[\"editor.background\"];\n    if (!fg)\n      fg = theme.type === \"light\" ? VSCODE_FALLBACK_EDITOR_FG.light : VSCODE_FALLBACK_EDITOR_FG.dark;\n    if (!bg)\n      bg = theme.type === \"light\" ? VSCODE_FALLBACK_EDITOR_BG.light : VSCODE_FALLBACK_EDITOR_BG.dark;\n    theme.fg = fg;\n    theme.bg = bg;\n  }\n  if (!(theme.settings[0] && theme.settings[0].settings && !theme.settings[0].scope)) {\n    theme.settings.unshift({\n      settings: {\n        foreground: theme.fg,\n        background: theme.bg\n      }\n    });\n  }\n  let replacementCount = 0;\n  const replacementMap = /* @__PURE__ */ new Map();\n  function getReplacementColor(value) {\n    if (replacementMap.has(value))\n      return replacementMap.get(value);\n    replacementCount += 1;\n    const hex = `#${replacementCount.toString(16).padStart(8, \"0\").toLowerCase()}`;\n    if (theme.colorReplacements?.[`#${hex}`])\n      return getReplacementColor(value);\n    replacementMap.set(value, hex);\n    return hex;\n  }\n  theme.settings = theme.settings.map((setting) => {\n    const replaceFg = setting.settings?.foreground && !setting.settings.foreground.startsWith(\"#\");\n    const replaceBg = setting.settings?.background && !setting.settings.background.startsWith(\"#\");\n    if (!replaceFg && !replaceBg)\n      return setting;\n    const clone = {\n      ...setting,\n      settings: {\n        ...setting.settings\n      }\n    };\n    if (replaceFg) {\n      const replacement = getReplacementColor(setting.settings.foreground);\n      theme.colorReplacements[replacement] = setting.settings.foreground;\n      clone.settings.foreground = replacement;\n    }\n    if (replaceBg) {\n      const replacement = getReplacementColor(setting.settings.background);\n      theme.colorReplacements[replacement] = setting.settings.background;\n      clone.settings.background = replacement;\n    }\n    return clone;\n  });\n  for (const key of Object.keys(theme.colors || {})) {\n    if (key === \"editor.foreground\" || key === \"editor.background\" || key.startsWith(\"terminal.ansi\")) {\n      if (!theme.colors[key]?.startsWith(\"#\")) {\n        const replacement = getReplacementColor(theme.colors[key]);\n        theme.colorReplacements[replacement] = theme.colors[key];\n        theme.colors[key] = replacement;\n      }\n    }\n  }\n  Object.defineProperty(theme, RESOLVED_KEY, {\n    enumerable: false,\n    writable: false,\n    value: true\n  });\n  return theme;\n}\n\nasync function resolveLangs(langs) {\n  return Array.from(new Set((await Promise.all(\n    langs.filter((l) => !isSpecialLang(l)).map(async (lang) => await normalizeGetter(lang).then((r) => Array.isArray(r) ? r : [r]))\n  )).flat()));\n}\nasync function resolveThemes(themes) {\n  const resolved = await Promise.all(\n    themes.map(\n      async (theme) => isSpecialTheme(theme) ? null : normalizeTheme(await normalizeGetter(theme))\n    )\n  );\n  return resolved.filter((i) => !!i);\n}\n\nlet _emitDeprecation = 3;\nlet _emitError = false;\nfunction enableDeprecationWarnings(emitDeprecation = true, emitError = false) {\n  _emitDeprecation = emitDeprecation;\n  _emitError = emitError;\n}\nfunction warnDeprecated(message, version = 3) {\n  if (!_emitDeprecation)\n    return;\n  if (typeof _emitDeprecation === \"number\" && version > _emitDeprecation)\n    return;\n  if (_emitError) {\n    throw new Error(`[SHIKI DEPRECATE]: ${message}`);\n  } else {\n    console.trace(`[SHIKI DEPRECATE]: ${message}`);\n  }\n}\n\nclass ShikiError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"ShikiError\";\n  }\n}\n\nclass Registry extends Registry$1 {\n  constructor(_resolver, _themes, _langs, _alias = {}) {\n    super(_resolver);\n    this._resolver = _resolver;\n    this._themes = _themes;\n    this._langs = _langs;\n    this._alias = _alias;\n    this._themes.map((t) => this.loadTheme(t));\n    this.loadLanguages(this._langs);\n  }\n  _resolvedThemes = /* @__PURE__ */ new Map();\n  _resolvedGrammars = /* @__PURE__ */ new Map();\n  _langMap = /* @__PURE__ */ new Map();\n  _langGraph = /* @__PURE__ */ new Map();\n  _textmateThemeCache = /* @__PURE__ */ new WeakMap();\n  _loadedThemesCache = null;\n  _loadedLanguagesCache = null;\n  getTheme(theme) {\n    if (typeof theme === \"string\")\n      return this._resolvedThemes.get(theme);\n    else\n      return this.loadTheme(theme);\n  }\n  loadTheme(theme) {\n    const _theme = normalizeTheme(theme);\n    if (_theme.name) {\n      this._resolvedThemes.set(_theme.name, _theme);\n      this._loadedThemesCache = null;\n    }\n    return _theme;\n  }\n  getLoadedThemes() {\n    if (!this._loadedThemesCache)\n      this._loadedThemesCache = [...this._resolvedThemes.keys()];\n    return this._loadedThemesCache;\n  }\n  // Override and re-implement this method to cache the textmate themes as `TextMateTheme.createFromRawTheme`\n  // is expensive. Themes can switch often especially for dual-theme support.\n  //\n  // The parent class also accepts `colorMap` as the second parameter, but since we don't use that,\n  // we omit here so it's easier to cache the themes.\n  setTheme(theme) {\n    let textmateTheme = this._textmateThemeCache.get(theme);\n    if (!textmateTheme) {\n      textmateTheme = Theme.createFromRawTheme(theme);\n      this._textmateThemeCache.set(theme, textmateTheme);\n    }\n    this._syncRegistry.setTheme(textmateTheme);\n  }\n  getGrammar(name) {\n    if (this._alias[name]) {\n      const resolved = /* @__PURE__ */ new Set([name]);\n      while (this._alias[name]) {\n        name = this._alias[name];\n        if (resolved.has(name))\n          throw new ShikiError(`Circular alias \\`${Array.from(resolved).join(\" -> \")} -> ${name}\\``);\n        resolved.add(name);\n      }\n    }\n    return this._resolvedGrammars.get(name);\n  }\n  loadLanguage(lang) {\n    if (this.getGrammar(lang.name))\n      return;\n    const embeddedLazilyBy = new Set(\n      [...this._langMap.values()].filter((i) => i.embeddedLangsLazy?.includes(lang.name))\n    );\n    this._resolver.addLanguage(lang);\n    const grammarConfig = {\n      balancedBracketSelectors: lang.balancedBracketSelectors || [\"*\"],\n      unbalancedBracketSelectors: lang.unbalancedBracketSelectors || []\n    };\n    this._syncRegistry._rawGrammars.set(lang.scopeName, lang);\n    const g = this.loadGrammarWithConfiguration(lang.scopeName, 1, grammarConfig);\n    g.name = lang.name;\n    this._resolvedGrammars.set(lang.name, g);\n    if (lang.aliases) {\n      lang.aliases.forEach((alias) => {\n        this._alias[alias] = lang.name;\n      });\n    }\n    this._loadedLanguagesCache = null;\n    if (embeddedLazilyBy.size) {\n      for (const e of embeddedLazilyBy) {\n        this._resolvedGrammars.delete(e.name);\n        this._loadedLanguagesCache = null;\n        this._syncRegistry?._injectionGrammars?.delete(e.scopeName);\n        this._syncRegistry?._grammars?.delete(e.scopeName);\n        this.loadLanguage(this._langMap.get(e.name));\n      }\n    }\n  }\n  dispose() {\n    super.dispose();\n    this._resolvedThemes.clear();\n    this._resolvedGrammars.clear();\n    this._langMap.clear();\n    this._langGraph.clear();\n    this._loadedThemesCache = null;\n  }\n  loadLanguages(langs) {\n    for (const lang of langs)\n      this.resolveEmbeddedLanguages(lang);\n    const langsGraphArray = Array.from(this._langGraph.entries());\n    const missingLangs = langsGraphArray.filter(([_, lang]) => !lang);\n    if (missingLangs.length) {\n      const dependents = langsGraphArray.filter(([_, lang]) => lang && lang.embeddedLangs?.some((l) => missingLangs.map(([name]) => name).includes(l))).filter((lang) => !missingLangs.includes(lang));\n      throw new ShikiError(`Missing languages ${missingLangs.map(([name]) => `\\`${name}\\``).join(\", \")}, required by ${dependents.map(([name]) => `\\`${name}\\``).join(\", \")}`);\n    }\n    for (const [_, lang] of langsGraphArray)\n      this._resolver.addLanguage(lang);\n    for (const [_, lang] of langsGraphArray)\n      this.loadLanguage(lang);\n  }\n  getLoadedLanguages() {\n    if (!this._loadedLanguagesCache) {\n      this._loadedLanguagesCache = [\n        .../* @__PURE__ */ new Set([...this._resolvedGrammars.keys(), ...Object.keys(this._alias)])\n      ];\n    }\n    return this._loadedLanguagesCache;\n  }\n  resolveEmbeddedLanguages(lang) {\n    this._langMap.set(lang.name, lang);\n    this._langGraph.set(lang.name, lang);\n    if (lang.embeddedLangs) {\n      for (const embeddedLang of lang.embeddedLangs)\n        this._langGraph.set(embeddedLang, this._langMap.get(embeddedLang));\n    }\n  }\n}\n\nclass Resolver {\n  _langs = /* @__PURE__ */ new Map();\n  _scopeToLang = /* @__PURE__ */ new Map();\n  _injections = /* @__PURE__ */ new Map();\n  _onigLib;\n  constructor(engine, langs) {\n    this._onigLib = {\n      createOnigScanner: (patterns) => engine.createScanner(patterns),\n      createOnigString: (s) => engine.createString(s)\n    };\n    langs.forEach((i) => this.addLanguage(i));\n  }\n  get onigLib() {\n    return this._onigLib;\n  }\n  getLangRegistration(langIdOrAlias) {\n    return this._langs.get(langIdOrAlias);\n  }\n  loadGrammar(scopeName) {\n    return this._scopeToLang.get(scopeName);\n  }\n  addLanguage(l) {\n    this._langs.set(l.name, l);\n    if (l.aliases) {\n      l.aliases.forEach((a) => {\n        this._langs.set(a, l);\n      });\n    }\n    this._scopeToLang.set(l.scopeName, l);\n    if (l.injectTo) {\n      l.injectTo.forEach((i) => {\n        if (!this._injections.get(i))\n          this._injections.set(i, []);\n        this._injections.get(i).push(l.scopeName);\n      });\n    }\n  }\n  getInjections(scopeName) {\n    const scopeParts = scopeName.split(\".\");\n    let injections = [];\n    for (let i = 1; i <= scopeParts.length; i++) {\n      const subScopeName = scopeParts.slice(0, i).join(\".\");\n      injections = [...injections, ...this._injections.get(subScopeName) || []];\n    }\n    return injections;\n  }\n}\n\nlet instancesCount = 0;\nfunction createShikiInternalSync(options) {\n  instancesCount += 1;\n  if (options.warnings !== false && instancesCount >= 10 && instancesCount % 10 === 0)\n    console.warn(`[Shiki] ${instancesCount} instances have been created. Shiki is supposed to be used as a singleton, consider refactoring your code to cache your highlighter instance; Or call \\`highlighter.dispose()\\` to release unused instances.`);\n  let isDisposed = false;\n  if (!options.engine)\n    throw new ShikiError(\"`engine` option is required for synchronous mode\");\n  const langs = (options.langs || []).flat(1);\n  const themes = (options.themes || []).flat(1).map(normalizeTheme);\n  const resolver = new Resolver(options.engine, langs);\n  const _registry = new Registry(resolver, themes, langs, options.langAlias);\n  let _lastTheme;\n  function getLanguage(name) {\n    ensureNotDisposed();\n    const _lang = _registry.getGrammar(typeof name === \"string\" ? name : name.name);\n    if (!_lang)\n      throw new ShikiError(`Language \\`${name}\\` not found, you may need to load it first`);\n    return _lang;\n  }\n  function getTheme(name) {\n    if (name === \"none\")\n      return { bg: \"\", fg: \"\", name: \"none\", settings: [], type: \"dark\" };\n    ensureNotDisposed();\n    const _theme = _registry.getTheme(name);\n    if (!_theme)\n      throw new ShikiError(`Theme \\`${name}\\` not found, you may need to load it first`);\n    return _theme;\n  }\n  function setTheme(name) {\n    ensureNotDisposed();\n    const theme = getTheme(name);\n    if (_lastTheme !== name) {\n      _registry.setTheme(theme);\n      _lastTheme = name;\n    }\n    const colorMap = _registry.getColorMap();\n    return {\n      theme,\n      colorMap\n    };\n  }\n  function getLoadedThemes() {\n    ensureNotDisposed();\n    return _registry.getLoadedThemes();\n  }\n  function getLoadedLanguages() {\n    ensureNotDisposed();\n    return _registry.getLoadedLanguages();\n  }\n  function loadLanguageSync(...langs2) {\n    ensureNotDisposed();\n    _registry.loadLanguages(langs2.flat(1));\n  }\n  async function loadLanguage(...langs2) {\n    return loadLanguageSync(await resolveLangs(langs2));\n  }\n  function loadThemeSync(...themes2) {\n    ensureNotDisposed();\n    for (const theme of themes2.flat(1)) {\n      _registry.loadTheme(theme);\n    }\n  }\n  async function loadTheme(...themes2) {\n    ensureNotDisposed();\n    return loadThemeSync(await resolveThemes(themes2));\n  }\n  function ensureNotDisposed() {\n    if (isDisposed)\n      throw new ShikiError(\"Shiki instance has been disposed\");\n  }\n  function dispose() {\n    if (isDisposed)\n      return;\n    isDisposed = true;\n    _registry.dispose();\n    instancesCount -= 1;\n  }\n  return {\n    setTheme,\n    getTheme,\n    getLanguage,\n    getLoadedThemes,\n    getLoadedLanguages,\n    loadLanguage,\n    loadLanguageSync,\n    loadTheme,\n    loadThemeSync,\n    dispose,\n    [Symbol.dispose]: dispose\n  };\n}\n\nasync function createShikiInternal(options) {\n  if (!options.engine) {\n    warnDeprecated(\"`engine` option is required. Use `createOnigurumaEngine` or `createJavaScriptRegexEngine` to create an engine.\");\n  }\n  const [\n    themes,\n    langs,\n    engine\n  ] = await Promise.all([\n    resolveThemes(options.themes || []),\n    resolveLangs(options.langs || []),\n    options.engine\n  ]);\n  return createShikiInternalSync({\n    ...options,\n    themes,\n    langs,\n    engine\n  });\n}\n\nasync function createHighlighterCore(options) {\n  const internal = await createShikiInternal(options);\n  return {\n    getLastGrammarState: (...args) => getLastGrammarState(internal, ...args),\n    codeToTokensBase: (code, options2) => codeToTokensBase(internal, code, options2),\n    codeToTokensWithThemes: (code, options2) => codeToTokensWithThemes(internal, code, options2),\n    codeToTokens: (code, options2) => codeToTokens(internal, code, options2),\n    codeToHast: (code, options2) => codeToHast(internal, code, options2),\n    codeToHtml: (code, options2) => codeToHtml(internal, code, options2),\n    getBundledLanguages: () => ({}),\n    getBundledThemes: () => ({}),\n    ...internal,\n    getInternalContext: () => internal\n  };\n}\nfunction createHighlighterCoreSync(options) {\n  const internal = createShikiInternalSync(options);\n  return {\n    getLastGrammarState: (...args) => getLastGrammarState(internal, ...args),\n    codeToTokensBase: (code, options2) => codeToTokensBase(internal, code, options2),\n    codeToTokensWithThemes: (code, options2) => codeToTokensWithThemes(internal, code, options2),\n    codeToTokens: (code, options2) => codeToTokens(internal, code, options2),\n    codeToHast: (code, options2) => codeToHast(internal, code, options2),\n    codeToHtml: (code, options2) => codeToHtml(internal, code, options2),\n    getBundledLanguages: () => ({}),\n    getBundledThemes: () => ({}),\n    ...internal,\n    getInternalContext: () => internal\n  };\n}\nfunction makeSingletonHighlighterCore(createHighlighter) {\n  let _shiki;\n  async function getSingletonHighlighterCore2(options) {\n    if (!_shiki) {\n      _shiki = createHighlighter({\n        ...options,\n        themes: options.themes || [],\n        langs: options.langs || []\n      });\n      return _shiki;\n    } else {\n      const s = await _shiki;\n      await Promise.all([\n        s.loadTheme(...options.themes || []),\n        s.loadLanguage(...options.langs || [])\n      ]);\n      return s;\n    }\n  }\n  return getSingletonHighlighterCore2;\n}\nconst getSingletonHighlighterCore = /* @__PURE__ */ makeSingletonHighlighterCore(createHighlighterCore);\n\nfunction createdBundledHighlighter(options) {\n  const bundledLanguages = options.langs;\n  const bundledThemes = options.themes;\n  const engine = options.engine;\n  async function createHighlighter(options2) {\n    function resolveLang(lang) {\n      if (typeof lang === \"string\") {\n        if (isSpecialLang(lang))\n          return [];\n        lang = options2.langAlias?.[lang] || lang;\n        const bundle = bundledLanguages[lang];\n        if (!bundle)\n          throw new ShikiError$1(`Language \\`${lang}\\` is not included in this bundle. You may want to load it from external source.`);\n        return bundle;\n      }\n      return lang;\n    }\n    function resolveTheme(theme) {\n      if (isSpecialTheme(theme))\n        return \"none\";\n      if (typeof theme === \"string\") {\n        const bundle = bundledThemes[theme];\n        if (!bundle)\n          throw new ShikiError$1(`Theme \\`${theme}\\` is not included in this bundle. You may want to load it from external source.`);\n        return bundle;\n      }\n      return theme;\n    }\n    const _themes = (options2.themes ?? []).map((i) => resolveTheme(i));\n    const langs = (options2.langs ?? []).map((i) => resolveLang(i));\n    const core = await createHighlighterCore({\n      engine: options2.engine ?? engine(),\n      ...options2,\n      themes: _themes,\n      langs\n    });\n    return {\n      ...core,\n      loadLanguage(...langs2) {\n        return core.loadLanguage(...langs2.map(resolveLang));\n      },\n      loadTheme(...themes) {\n        return core.loadTheme(...themes.map(resolveTheme));\n      },\n      getBundledLanguages() {\n        return bundledLanguages;\n      },\n      getBundledThemes() {\n        return bundledThemes;\n      }\n    };\n  }\n  return createHighlighter;\n}\nfunction makeSingletonHighlighter(createHighlighter) {\n  let _shiki;\n  async function getSingletonHighlighter(options = {}) {\n    if (!_shiki) {\n      _shiki = createHighlighter({\n        ...options,\n        themes: options.themes || [],\n        langs: options.langs || []\n      });\n      return _shiki;\n    } else {\n      const s = await _shiki;\n      await Promise.all([\n        s.loadTheme(...options.themes || []),\n        s.loadLanguage(...options.langs || [])\n      ]);\n      return s;\n    }\n  }\n  return getSingletonHighlighter;\n}\nfunction createSingletonShorthands(createHighlighter, config) {\n  const getSingletonHighlighter = makeSingletonHighlighter(createHighlighter);\n  async function get(code, options) {\n    const shiki = await getSingletonHighlighter({\n      langs: [options.lang],\n      themes: \"theme\" in options ? [options.theme] : Object.values(options.themes)\n    });\n    const langs = await config?.guessEmbeddedLanguages?.(code, options.lang, shiki);\n    if (langs) {\n      await shiki.loadLanguage(...langs);\n    }\n    return shiki;\n  }\n  return {\n    getSingletonHighlighter(options) {\n      return getSingletonHighlighter(options);\n    },\n    async codeToHtml(code, options) {\n      const shiki = await get(code, options);\n      return shiki.codeToHtml(code, options);\n    },\n    async codeToHast(code, options) {\n      const shiki = await get(code, options);\n      return shiki.codeToHast(code, options);\n    },\n    async codeToTokens(code, options) {\n      const shiki = await get(code, options);\n      return shiki.codeToTokens(code, options);\n    },\n    async codeToTokensBase(code, options) {\n      const shiki = await get(code, options);\n      return shiki.codeToTokensBase(code, options);\n    },\n    async codeToTokensWithThemes(code, options) {\n      const shiki = await get(code, options);\n      return shiki.codeToTokensWithThemes(code, options);\n    },\n    async getLastGrammarState(code, options) {\n      const shiki = await getSingletonHighlighter({\n        langs: [options.lang],\n        themes: [options.theme]\n      });\n      return shiki.getLastGrammarState(code, options);\n    }\n  };\n}\n\nfunction createCssVariablesTheme(options = {}) {\n  const {\n    name = \"css-variables\",\n    variablePrefix = \"--shiki-\",\n    fontStyle = true\n  } = options;\n  const variable = (name2) => {\n    if (options.variableDefaults?.[name2])\n      return `var(${variablePrefix}${name2}, ${options.variableDefaults[name2]})`;\n    return `var(${variablePrefix}${name2})`;\n  };\n  const theme = {\n    name,\n    type: \"dark\",\n    colors: {\n      \"editor.foreground\": variable(\"foreground\"),\n      \"editor.background\": variable(\"background\"),\n      \"terminal.ansiBlack\": variable(\"ansi-black\"),\n      \"terminal.ansiRed\": variable(\"ansi-red\"),\n      \"terminal.ansiGreen\": variable(\"ansi-green\"),\n      \"terminal.ansiYellow\": variable(\"ansi-yellow\"),\n      \"terminal.ansiBlue\": variable(\"ansi-blue\"),\n      \"terminal.ansiMagenta\": variable(\"ansi-magenta\"),\n      \"terminal.ansiCyan\": variable(\"ansi-cyan\"),\n      \"terminal.ansiWhite\": variable(\"ansi-white\"),\n      \"terminal.ansiBrightBlack\": variable(\"ansi-bright-black\"),\n      \"terminal.ansiBrightRed\": variable(\"ansi-bright-red\"),\n      \"terminal.ansiBrightGreen\": variable(\"ansi-bright-green\"),\n      \"terminal.ansiBrightYellow\": variable(\"ansi-bright-yellow\"),\n      \"terminal.ansiBrightBlue\": variable(\"ansi-bright-blue\"),\n      \"terminal.ansiBrightMagenta\": variable(\"ansi-bright-magenta\"),\n      \"terminal.ansiBrightCyan\": variable(\"ansi-bright-cyan\"),\n      \"terminal.ansiBrightWhite\": variable(\"ansi-bright-white\")\n    },\n    tokenColors: [\n      {\n        scope: [\n          \"keyword.operator.accessor\",\n          \"meta.group.braces.round.function.arguments\",\n          \"meta.template.expression\",\n          \"markup.fenced_code meta.embedded.block\"\n        ],\n        settings: {\n          foreground: variable(\"foreground\")\n        }\n      },\n      {\n        scope: \"emphasis\",\n        settings: {\n          fontStyle: \"italic\"\n        }\n      },\n      {\n        scope: [\"strong\", \"markup.heading.markdown\", \"markup.bold.markdown\"],\n        settings: {\n          fontStyle: \"bold\"\n        }\n      },\n      {\n        scope: [\"markup.italic.markdown\"],\n        settings: {\n          fontStyle: \"italic\"\n        }\n      },\n      {\n        scope: \"meta.link.inline.markdown\",\n        settings: {\n          fontStyle: \"underline\",\n          foreground: variable(\"token-link\")\n        }\n      },\n      {\n        scope: [\"string\", \"markup.fenced_code\", \"markup.inline\"],\n        settings: {\n          foreground: variable(\"token-string\")\n        }\n      },\n      {\n        scope: [\"comment\", \"string.quoted.docstring.multi\"],\n        settings: {\n          foreground: variable(\"token-comment\")\n        }\n      },\n      {\n        scope: [\n          \"constant.numeric\",\n          \"constant.language\",\n          \"constant.other.placeholder\",\n          \"constant.character.format.placeholder\",\n          \"variable.language.this\",\n          \"variable.other.object\",\n          \"variable.other.class\",\n          \"variable.other.constant\",\n          \"meta.property-name\",\n          \"meta.property-value\",\n          \"support\"\n        ],\n        settings: {\n          foreground: variable(\"token-constant\")\n        }\n      },\n      {\n        scope: [\n          \"keyword\",\n          \"storage.modifier\",\n          \"storage.type\",\n          \"storage.control.clojure\",\n          \"entity.name.function.clojure\",\n          \"entity.name.tag.yaml\",\n          \"support.function.node\",\n          \"support.type.property-name.json\",\n          \"punctuation.separator.key-value\",\n          \"punctuation.definition.template-expression\"\n        ],\n        settings: {\n          foreground: variable(\"token-keyword\")\n        }\n      },\n      {\n        scope: \"variable.parameter.function\",\n        settings: {\n          foreground: variable(\"token-parameter\")\n        }\n      },\n      {\n        scope: [\n          \"support.function\",\n          \"entity.name.type\",\n          \"entity.other.inherited-class\",\n          \"meta.function-call\",\n          \"meta.instance.constructor\",\n          \"entity.other.attribute-name\",\n          \"entity.name.function\",\n          \"constant.keyword.clojure\"\n        ],\n        settings: {\n          foreground: variable(\"token-function\")\n        }\n      },\n      {\n        scope: [\n          \"entity.name.tag\",\n          \"string.quoted\",\n          \"string.regexp\",\n          \"string.interpolated\",\n          \"string.template\",\n          \"string.unquoted.plain.out.yaml\",\n          \"keyword.other.template\"\n        ],\n        settings: {\n          foreground: variable(\"token-string-expression\")\n        }\n      },\n      {\n        scope: [\n          \"punctuation.definition.arguments\",\n          \"punctuation.definition.dict\",\n          \"punctuation.separator\",\n          \"meta.function-call.arguments\"\n        ],\n        settings: {\n          foreground: variable(\"token-punctuation\")\n        }\n      },\n      {\n        // [Custom] Markdown links\n        scope: [\n          \"markup.underline.link\",\n          \"punctuation.definition.metadata.markdown\"\n        ],\n        settings: {\n          foreground: variable(\"token-link\")\n        }\n      },\n      {\n        // [Custom] Markdown list\n        scope: [\"beginning.punctuation.definition.list.markdown\"],\n        settings: {\n          foreground: variable(\"token-string\")\n        }\n      },\n      {\n        // [Custom] Markdown punctuation definition brackets\n        scope: [\n          \"punctuation.definition.string.begin.markdown\",\n          \"punctuation.definition.string.end.markdown\",\n          \"string.other.link.title.markdown\",\n          \"string.other.link.description.markdown\"\n        ],\n        settings: {\n          foreground: variable(\"token-keyword\")\n        }\n      },\n      {\n        // [Custom] Diff\n        scope: [\n          \"markup.inserted\",\n          \"meta.diff.header.to-file\",\n          \"punctuation.definition.inserted\"\n        ],\n        settings: {\n          foreground: variable(\"token-inserted\")\n        }\n      },\n      {\n        scope: [\n          \"markup.deleted\",\n          \"meta.diff.header.from-file\",\n          \"punctuation.definition.deleted\"\n        ],\n        settings: {\n          foreground: variable(\"token-deleted\")\n        }\n      },\n      {\n        scope: [\n          \"markup.changed\",\n          \"punctuation.definition.changed\"\n        ],\n        settings: {\n          foreground: variable(\"token-changed\")\n        }\n      }\n    ]\n  };\n  if (!fontStyle) {\n    theme.tokenColors = theme.tokenColors?.map((tokenColor) => {\n      if (tokenColor.settings?.fontStyle)\n        delete tokenColor.settings.fontStyle;\n      return tokenColor;\n    });\n  }\n  return theme;\n}\n\nexport { addClassToHast, applyColorReplacements, codeToHast, codeToHtml, codeToTokens, codeToTokensBase, codeToTokensWithThemes, createCssVariablesTheme, createHighlighterCore, createHighlighterCoreSync, createPositionConverter, createShikiInternal, createShikiInternalSync, createSingletonShorthands, createdBundledHighlighter, enableDeprecationWarnings, flatTokenVariants, getSingletonHighlighterCore, getTokenStyleObject, guessEmbeddedLanguages, hastToHtml, isNoneTheme, isPlainLang, isSpecialLang, isSpecialTheme, makeSingletonHighlighter, makeSingletonHighlighterCore, normalizeGetter, normalizeTheme, resolveColorReplacements, splitLines, splitToken, splitTokens, stringifyTokenStyle, toArray, tokenizeAnsiWithTheme, tokenizeWithTheme, tokensToHast, transformerDecorations, warnDeprecated };\n","/**\n * @import {Nodes, Parents} from 'hast'\n */\n\n/**\n * Get the plain-text value of a hast node.\n *\n * @param {Nodes} node\n *   Node to serialize.\n * @returns {string}\n *   Serialized node.\n */\nexport function toString(node) {\n  // “The concatenation of data of all the Text node descendants of the context\n  // object, in tree order.”\n  if ('children' in node) {\n    return all(node)\n  }\n\n  // “Context object’s data.”\n  return 'value' in node ? node.value : ''\n}\n\n/**\n * @param {Nodes} node\n *   Node.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(node) {\n  if (node.type === 'text') {\n    return node.value\n  }\n\n  return 'children' in node ? all(node) : ''\n}\n\n/**\n * @param {Parents} node\n *   Node.\n * @returns {string}\n *   Serialized node.\n */\nfunction all(node) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n\n  while (++index < node.children.length) {\n    result[index] = one(node.children[index])\n  }\n\n  return result.join('')\n}\n","import { isSpecialLang } from 'shiki/core';\nimport { visit } from 'unist-util-visit';\nimport { toString } from 'hast-util-to-string';\n\nconst InlineCodeHandlers = {\n  \"tailing-curly-colon\": (_tree, node) => {\n    const raw = toString(node);\n    const match = raw.match(/(.+)\\{:([\\w-]+)\\}$/);\n    if (!match)\n      return;\n    return {\n      type: \"inline\",\n      code: match[1] ?? raw,\n      lang: match.at(2)\n    };\n  }\n};\nconst languagePrefix$1 = \"language-\";\nconst PreHandler = (_tree, node) => {\n  const head = node.children[0];\n  if (!head || head.type !== \"element\" || head.tagName !== \"code\" || !head.properties) {\n    return;\n  }\n  const classes = head.properties.className;\n  const languageClass = Array.isArray(classes) ? classes.find(\n    (d) => typeof d === \"string\" && d.startsWith(languagePrefix$1)\n  ) : void 0;\n  return {\n    type: \"pre\",\n    lang: typeof languageClass === \"string\" ? languageClass.slice(languagePrefix$1.length) : void 0,\n    code: toString(head),\n    meta: head.data?.meta ?? head.properties.metastring?.toString() ?? \"\"\n  };\n};\n\nconst languagePrefix = \"language-\";\nfunction rehypeShikiFromHighlighter(highlighter, options) {\n  const {\n    addLanguageClass = false,\n    parseMetaString,\n    cache,\n    defaultLanguage,\n    fallbackLanguage,\n    onError,\n    stripEndNewline = true,\n    inline = false,\n    lazy = false,\n    ...rest\n  } = options;\n  function highlight(lang, code, metaString = \"\", meta = {}) {\n    const cacheKey = `${lang}:${metaString}:${code}`;\n    const cachedValue = cache?.get(cacheKey);\n    if (cachedValue) {\n      return cachedValue;\n    }\n    const codeOptions = {\n      ...rest,\n      lang,\n      meta: {\n        ...rest.meta,\n        ...meta,\n        __raw: metaString\n      }\n    };\n    if (addLanguageClass) {\n      codeOptions.transformers = [\n        ...codeOptions.transformers ?? [],\n        {\n          name: \"rehype-shiki:code-language-class\",\n          code(node) {\n            this.addClassToHast(node, `${languagePrefix}${lang}`);\n            return node;\n          }\n        }\n      ];\n    }\n    if (stripEndNewline && code.endsWith(\"\\n\"))\n      code = code.slice(0, -1);\n    try {\n      const fragment = highlighter.codeToHast(code, codeOptions);\n      cache?.set(cacheKey, fragment);\n      return fragment;\n    } catch (error) {\n      if (onError)\n        onError(error);\n      else\n        throw error;\n    }\n  }\n  return (tree) => {\n    const queue = [];\n    visit(tree, \"element\", (node, index, parent) => {\n      let handler;\n      if (!parent || index == null)\n        return;\n      if (node.tagName === \"pre\") {\n        handler = PreHandler;\n      } else if (node.tagName === \"code\" && inline) {\n        handler = InlineCodeHandlers[inline];\n      } else {\n        return;\n      }\n      const parsed = handler(tree, node);\n      if (!parsed)\n        return;\n      let lang;\n      let lazyLoad = false;\n      if (!parsed.lang) {\n        lang = defaultLanguage;\n      } else if (highlighter.getLoadedLanguages().includes(parsed.lang) || isSpecialLang(parsed.lang)) {\n        lang = parsed.lang;\n      } else if (lazy) {\n        lazyLoad = true;\n        lang = parsed.lang;\n      } else if (fallbackLanguage) {\n        lang = fallbackLanguage;\n      }\n      if (!lang)\n        return;\n      const meta = parsed.meta ? parseMetaString?.(parsed.meta, node, tree) : void 0;\n      const processNode = (targetLang) => {\n        const fragment = highlight(targetLang, parsed.code, parsed.meta, meta ?? {});\n        if (!fragment)\n          return;\n        if (parsed.type === \"inline\") {\n          const head = fragment.children[0];\n          if (head.type === \"element\" && head.tagName === \"pre\") {\n            head.tagName = \"span\";\n          }\n        }\n        parent.children[index] = fragment;\n      };\n      if (lazyLoad) {\n        try {\n          queue.push(highlighter.loadLanguage(lang).then(() => processNode(lang)));\n        } catch (error) {\n          if (fallbackLanguage)\n            return processNode(fallbackLanguage);\n          else if (onError)\n            onError(error);\n          else throw error;\n        }\n      } else {\n        processNode(lang);\n      }\n      return \"skip\";\n    });\n    if (queue.length > 0) {\n      async function run() {\n        await Promise.all(queue);\n      }\n      return run();\n    }\n  };\n}\n\nexport { rehypeShikiFromHighlighter as default };\n","const matchers = [\n  [/^(<!--)(.+)(-->)$/, false],\n  [/^(\\/\\*)(.+)(\\*\\/)$/, false],\n  [/^(\\/\\/|[\"'#]|;{1,2}|%{1,2}|--)(.*)$/, true],\n  /**\n   * for multi-line comments like this\n   */\n  [/^(\\*)(.+)$/, true]\n];\nfunction parseComments(lines, jsx, matchAlgorithm) {\n  const out = [];\n  for (const line of lines) {\n    if (matchAlgorithm === \"v3\") {\n      const splittedElements = line.children.flatMap((element, idx) => {\n        if (element.type !== \"element\")\n          return element;\n        const token = element.children[0];\n        if (token.type !== \"text\")\n          return element;\n        const isLast = idx === line.children.length - 1;\n        const isComment = matchToken(token.value, isLast);\n        if (!isComment)\n          return element;\n        const rawSplits = token.value.split(/(\\s+\\/\\/)/);\n        if (rawSplits.length <= 1)\n          return element;\n        let splits = [rawSplits[0]];\n        for (let i = 1; i < rawSplits.length; i += 2) {\n          splits.push(rawSplits[i] + (rawSplits[i + 1] || \"\"));\n        }\n        splits = splits.filter(Boolean);\n        if (splits.length <= 1)\n          return element;\n        return splits.map((split) => {\n          return {\n            ...element,\n            children: [\n              {\n                type: \"text\",\n                value: split\n              }\n            ]\n          };\n        });\n      });\n      if (splittedElements.length !== line.children.length)\n        line.children = splittedElements;\n    }\n    const elements = line.children;\n    let start = elements.length - 1;\n    if (matchAlgorithm === \"v1\")\n      start = 0;\n    else if (jsx)\n      start = elements.length - 2;\n    for (let i = Math.max(start, 0); i < elements.length; i++) {\n      const token = elements[i];\n      if (token.type !== \"element\")\n        continue;\n      const head = token.children.at(0);\n      if (head?.type !== \"text\")\n        continue;\n      const isLast = i === elements.length - 1;\n      const match = matchToken(head.value, isLast);\n      if (!match)\n        continue;\n      if (jsx && !isLast && i !== 0) {\n        const isJsxStyle = isValue(elements[i - 1], \"{\") && isValue(elements[i + 1], \"}\");\n        out.push({\n          info: match,\n          line,\n          token,\n          isLineCommentOnly: elements.length === 3 && token.children.length === 1,\n          isJsxStyle\n        });\n      } else {\n        out.push({\n          info: match,\n          line,\n          token,\n          isLineCommentOnly: elements.length === 1 && token.children.length === 1,\n          isJsxStyle: false\n        });\n      }\n    }\n  }\n  return out;\n}\nfunction isValue(element, value) {\n  if (element.type !== \"element\")\n    return false;\n  const text = element.children[0];\n  if (text.type !== \"text\")\n    return false;\n  return text.value.trim() === value;\n}\nfunction matchToken(text, isLast) {\n  let trimmed = text.trimStart();\n  const spaceFront = text.length - trimmed.length;\n  trimmed = trimmed.trimEnd();\n  const spaceEnd = text.length - trimmed.length - spaceFront;\n  for (const [matcher, endOfLine] of matchers) {\n    if (endOfLine && !isLast)\n      continue;\n    const result = matcher.exec(trimmed);\n    if (!result)\n      continue;\n    return [\n      \" \".repeat(spaceFront) + result[1],\n      result[2],\n      result[3] ? result[3] + \" \".repeat(spaceEnd) : void 0\n    ];\n  }\n}\nfunction v1ClearEndCommentPrefix(text) {\n  const match = text.match(/(?:\\/\\/|[\"'#]|;{1,2}|%{1,2}|--)(\\s*)$/);\n  if (match && match[1].trim().length === 0) {\n    return text.slice(0, match.index);\n  }\n  return text;\n}\n\nfunction createCommentNotationTransformer(name, regex, onMatch, matchAlgorithm) {\n  if (matchAlgorithm == null) {\n    matchAlgorithm = \"v3\";\n  }\n  return {\n    name,\n    code(code) {\n      const lines = code.children.filter((i) => i.type === \"element\");\n      const linesToRemove = [];\n      code.data ??= {};\n      const data = code.data;\n      data._shiki_notation ??= parseComments(lines, [\"jsx\", \"tsx\"].includes(this.options.lang), matchAlgorithm);\n      const parsed = data._shiki_notation;\n      for (const comment of parsed) {\n        if (comment.info[1].length === 0)\n          continue;\n        let lineIdx = lines.indexOf(comment.line);\n        if (comment.isLineCommentOnly && matchAlgorithm !== \"v1\")\n          lineIdx++;\n        let replaced = false;\n        comment.info[1] = comment.info[1].replace(regex, (...match) => {\n          if (onMatch.call(this, match, comment.line, comment.token, lines, lineIdx)) {\n            replaced = true;\n            return \"\";\n          }\n          return match[0];\n        });\n        if (!replaced)\n          continue;\n        if (matchAlgorithm === \"v1\")\n          comment.info[1] = v1ClearEndCommentPrefix(comment.info[1]);\n        const isEmpty = comment.info[1].trim().length === 0;\n        if (isEmpty)\n          comment.info[1] = \"\";\n        if (isEmpty && comment.isLineCommentOnly) {\n          linesToRemove.push(comment.line);\n        } else if (isEmpty && comment.isJsxStyle) {\n          comment.line.children.splice(comment.line.children.indexOf(comment.token) - 1, 3);\n        } else if (isEmpty) {\n          comment.line.children.splice(comment.line.children.indexOf(comment.token), 1);\n        } else {\n          const head = comment.token.children[0];\n          if (head.type === \"text\") {\n            head.value = comment.info.join(\"\");\n          }\n        }\n      }\n      for (const line of linesToRemove) {\n        const index = code.children.indexOf(line);\n        const nextLine = code.children[index + 1];\n        let removeLength = 1;\n        if (nextLine?.type === \"text\" && nextLine?.value === \"\\n\")\n          removeLength = 2;\n        code.children.splice(index, removeLength);\n      }\n    }\n  };\n}\n\nfunction transformerCompactLineOptions(lineOptions = []) {\n  return {\n    name: \"@shikijs/transformers:compact-line-options\",\n    line(node, line) {\n      const lineOption = lineOptions.find((o) => o.line === line);\n      if (lineOption?.classes)\n        this.addClassToHast(node, lineOption.classes);\n      return node;\n    }\n  };\n}\n\nfunction parseMetaHighlightString(meta) {\n  if (!meta)\n    return null;\n  const match = meta.match(/\\{([\\d,-]+)\\}/);\n  if (!match)\n    return null;\n  const lines = match[1].split(\",\").flatMap((v) => {\n    const num = v.split(\"-\").map((v2) => Number.parseInt(v2, 10));\n    if (num.length === 1)\n      return [num[0]];\n    return Array.from({ length: num[1] - num[0] + 1 }, (_, i) => i + num[0]);\n  });\n  return lines;\n}\nconst symbol = Symbol(\"highlighted-lines\");\nfunction transformerMetaHighlight(options = {}) {\n  const {\n    className = \"highlighted\"\n  } = options;\n  return {\n    name: \"@shikijs/transformers:meta-highlight\",\n    line(node, line) {\n      if (!this.options.meta?.__raw) {\n        return;\n      }\n      const meta = this.meta;\n      meta[symbol] ??= parseMetaHighlightString(this.options.meta.__raw);\n      const lines = meta[symbol] ?? [];\n      if (lines.includes(line))\n        this.addClassToHast(node, className);\n      return node;\n    }\n  };\n}\n\nfunction parseMetaHighlightWords(meta) {\n  if (!meta)\n    return [];\n  const match = Array.from(meta.matchAll(/\\/((?:\\\\.|[^/])+)\\//g));\n  return match.map((v) => v[1].replace(/\\\\(.)/g, \"$1\"));\n}\nfunction transformerMetaWordHighlight(options = {}) {\n  const {\n    className = \"highlighted-word\"\n  } = options;\n  return {\n    name: \"@shikijs/transformers:meta-word-highlight\",\n    preprocess(code, options2) {\n      if (!this.options.meta?.__raw)\n        return;\n      const words = parseMetaHighlightWords(this.options.meta.__raw);\n      options2.decorations ||= [];\n      for (const word of words) {\n        const indexes = findAllSubstringIndexes(code, word);\n        for (const index of indexes) {\n          options2.decorations.push({\n            start: index,\n            end: index + word.length,\n            properties: {\n              class: className\n            }\n          });\n        }\n      }\n    }\n  };\n}\nfunction findAllSubstringIndexes(str, substr) {\n  const indexes = [];\n  let cursor = 0;\n  while (true) {\n    const index = str.indexOf(substr, cursor);\n    if (index === -1 || index >= str.length)\n      break;\n    if (index < cursor)\n      break;\n    indexes.push(index);\n    cursor = index + substr.length;\n  }\n  return indexes;\n}\n\nfunction escapeRegExp(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n}\nfunction transformerNotationMap(options = {}, name = \"@shikijs/transformers:notation-map\") {\n  const {\n    classMap = {},\n    classActivePre = void 0\n  } = options;\n  return createCommentNotationTransformer(\n    name,\n    new RegExp(`\\\\s*\\\\[!code (${Object.keys(classMap).map(escapeRegExp).join(\"|\")})(:\\\\d+)?\\\\]`),\n    function([_, match, range = \":1\"], _line, _comment, lines, index) {\n      const lineNum = Number.parseInt(range.slice(1), 10);\n      for (let i = index; i < Math.min(index + lineNum, lines.length); i++) {\n        this.addClassToHast(lines[i], classMap[match]);\n      }\n      if (classActivePre)\n        this.addClassToHast(this.pre, classActivePre);\n      return true;\n    },\n    options.matchAlgorithm\n  );\n}\n\nfunction transformerNotationDiff(options = {}) {\n  const {\n    classLineAdd = \"diff add\",\n    classLineRemove = \"diff remove\",\n    classActivePre = \"has-diff\"\n  } = options;\n  return transformerNotationMap(\n    {\n      classMap: {\n        \"++\": classLineAdd,\n        \"--\": classLineRemove\n      },\n      classActivePre,\n      matchAlgorithm: options.matchAlgorithm\n    },\n    \"@shikijs/transformers:notation-diff\"\n  );\n}\n\nfunction transformerNotationErrorLevel(options = {}) {\n  const {\n    classMap = {\n      error: [\"highlighted\", \"error\"],\n      warning: [\"highlighted\", \"warning\"]\n    },\n    classActivePre = \"has-highlighted\"\n  } = options;\n  return transformerNotationMap(\n    {\n      classMap,\n      classActivePre,\n      matchAlgorithm: options.matchAlgorithm\n    },\n    \"@shikijs/transformers:notation-error-level\"\n  );\n}\n\nfunction transformerNotationFocus(options = {}) {\n  const {\n    classActiveLine = \"focused\",\n    classActivePre = \"has-focused\"\n  } = options;\n  return transformerNotationMap(\n    {\n      classMap: {\n        focus: classActiveLine\n      },\n      classActivePre,\n      matchAlgorithm: options.matchAlgorithm\n    },\n    \"@shikijs/transformers:notation-focus\"\n  );\n}\n\nfunction transformerNotationHighlight(options = {}) {\n  const {\n    classActiveLine = \"highlighted\",\n    classActivePre = \"has-highlighted\"\n  } = options;\n  return transformerNotationMap(\n    {\n      classMap: {\n        highlight: classActiveLine,\n        hl: classActiveLine\n      },\n      classActivePre,\n      matchAlgorithm: options.matchAlgorithm\n    },\n    \"@shikijs/transformers:notation-highlight\"\n  );\n}\n\nfunction highlightWordInLine(line, ignoredElement, word, className) {\n  const content = getTextContent(line);\n  let index = content.indexOf(word);\n  while (index !== -1) {\n    highlightRange.call(this, line.children, ignoredElement, index, word.length, className);\n    index = content.indexOf(word, index + 1);\n  }\n}\nfunction getTextContent(element) {\n  if (element.type === \"text\")\n    return element.value;\n  if (element.type === \"element\" && element.tagName === \"span\")\n    return element.children.map(getTextContent).join(\"\");\n  return \"\";\n}\nfunction highlightRange(elements, ignoredElement, index, len, className) {\n  let currentIdx = 0;\n  for (let i = 0; i < elements.length; i++) {\n    const element = elements[i];\n    if (element.type !== \"element\" || element.tagName !== \"span\" || element === ignoredElement)\n      continue;\n    const textNode = element.children[0];\n    if (textNode.type !== \"text\")\n      continue;\n    if (hasOverlap([currentIdx, currentIdx + textNode.value.length - 1], [index, index + len])) {\n      const start = Math.max(0, index - currentIdx);\n      const length = len - Math.max(0, currentIdx - index);\n      if (length === 0)\n        continue;\n      const separated = separateToken(element, textNode, start, length);\n      this.addClassToHast(separated[1], className);\n      const output = separated.filter(Boolean);\n      elements.splice(i, 1, ...output);\n      i += output.length - 1;\n    }\n    currentIdx += textNode.value.length;\n  }\n}\nfunction hasOverlap(range1, range2) {\n  return range1[0] <= range2[1] && range1[1] >= range2[0];\n}\nfunction separateToken(span, textNode, index, len) {\n  const text = textNode.value;\n  const createNode = (value) => inheritElement(span, {\n    children: [\n      {\n        type: \"text\",\n        value\n      }\n    ]\n  });\n  return [\n    index > 0 ? createNode(text.slice(0, index)) : void 0,\n    createNode(text.slice(index, index + len)),\n    index + len < text.length ? createNode(text.slice(index + len)) : void 0\n  ];\n}\nfunction inheritElement(original, overrides) {\n  return {\n    ...original,\n    properties: {\n      ...original.properties\n    },\n    ...overrides\n  };\n}\n\nfunction transformerNotationWordHighlight(options = {}) {\n  const {\n    classActiveWord = \"highlighted-word\",\n    classActivePre = void 0\n  } = options;\n  return createCommentNotationTransformer(\n    \"@shikijs/transformers:notation-highlight-word\",\n    /\\s*\\[!code word:((?:\\\\.|[^:\\]])+)(:\\d+)?\\]/,\n    function([_, word, range], _line, comment, lines, index) {\n      const lineNum = range ? Number.parseInt(range.slice(1), 10) : lines.length;\n      word = word.replace(/\\\\(.)/g, \"$1\");\n      for (let i = index; i < Math.min(index + lineNum, lines.length); i++) {\n        highlightWordInLine.call(this, lines[i], comment, word, classActiveWord);\n      }\n      if (classActivePre)\n        this.addClassToHast(this.pre, classActivePre);\n      return true;\n    },\n    options.matchAlgorithm\n  );\n}\n\nfunction transformerRemoveLineBreak() {\n  return {\n    name: \"@shikijs/transformers:remove-line-break\",\n    code(code) {\n      code.children = code.children.filter((line) => !(line.type === \"text\" && line.value === \"\\n\"));\n    }\n  };\n}\n\nfunction transformerRemoveNotationEscape() {\n  return {\n    name: \"@shikijs/transformers:remove-notation-escape\",\n    code(hast) {\n      function replace(node) {\n        if (node.type === \"text\") {\n          node.value = node.value.replace(\"[\\\\!code\", \"[!code\");\n        } else if (\"children\" in node) {\n          for (const child of node.children) {\n            replace(child);\n          }\n        }\n      }\n      replace(hast);\n      return hast;\n    }\n  };\n}\n\nfunction transformerRenderIndentGuides(options = {}) {\n  return {\n    name: \"@shikijs/transformers:render-indent-guides\",\n    code(hast) {\n      let { indent = 2 } = options;\n      const match = this.options.meta?.__raw?.match(/\\{indent:(\\d+|false)\\}/);\n      if (match) {\n        if (match[1] === \"false\") {\n          return hast;\n        }\n        indent = Number(match[1]);\n      }\n      const indentRegex = new RegExp(` {${indent}}| {0,${indent - 1}}\t| {1,}$`, \"g\");\n      const emptyLines = [];\n      let level = 0;\n      for (const line of hast.children) {\n        if (line.type !== \"element\") {\n          continue;\n        }\n        const first = line.children[0];\n        if (first?.type !== \"element\" || first?.children[0]?.type !== \"text\") {\n          emptyLines.push([line, level]);\n          continue;\n        }\n        const text = first.children[0];\n        const blanks = text.value.split(/[^ \\t]/, 1)[0];\n        const ranges = [];\n        for (const match2 of blanks.matchAll(indentRegex)) {\n          const start = match2.index;\n          const end = start + match2[0].length;\n          ranges.push([start, end]);\n        }\n        for (const [line2, level2] of emptyLines) {\n          line2.children.unshift(...Array.from({ length: Math.min(ranges.length, level2 + 1) }, (_, i) => ({\n            type: \"element\",\n            tagName: \"span\",\n            properties: {\n              class: \"indent\",\n              style: `--indent-offset: ${i * indent}ch;`\n            },\n            children: []\n          })));\n        }\n        emptyLines.length = 0;\n        level = ranges.length;\n        if (ranges.length) {\n          line.children.unshift(\n            ...ranges.map(([start, end]) => ({\n              type: \"element\",\n              tagName: \"span\",\n              properties: {\n                class: \"indent\"\n              },\n              children: [{\n                type: \"text\",\n                value: text.value.slice(start, end)\n              }]\n            }))\n          );\n          text.value = text.value.slice(ranges.at(-1)[1]);\n        }\n      }\n      return hast;\n    }\n  };\n}\n\nfunction isTab(part) {\n  return part === \"\t\";\n}\nfunction isSpace(part) {\n  return part === \" \" || part === \"\t\";\n}\nfunction separateContinuousSpaces(inputs) {\n  const result = [];\n  let current = \"\";\n  function bump() {\n    if (current.length)\n      result.push(current);\n    current = \"\";\n  }\n  inputs.forEach((part, idx) => {\n    if (isTab(part)) {\n      bump();\n      result.push(part);\n    } else if (isSpace(part) && (isSpace(inputs[idx - 1]) || isSpace(inputs[idx + 1]))) {\n      bump();\n      result.push(part);\n    } else {\n      current += part;\n    }\n  });\n  bump();\n  return result;\n}\nfunction splitSpaces(parts, type, renderContinuousSpaces = true) {\n  if (type === \"all\")\n    return parts;\n  let leftCount = 0;\n  let rightCount = 0;\n  if (type === \"boundary\") {\n    for (let i = 0; i < parts.length; i++) {\n      if (isSpace(parts[i]))\n        leftCount++;\n      else\n        break;\n    }\n  }\n  if (type === \"boundary\" || type === \"trailing\") {\n    for (let i = parts.length - 1; i >= 0; i--) {\n      if (isSpace(parts[i]))\n        rightCount++;\n      else\n        break;\n    }\n  }\n  const middle = parts.slice(leftCount, parts.length - rightCount);\n  return [\n    ...parts.slice(0, leftCount),\n    ...renderContinuousSpaces ? separateContinuousSpaces(middle) : [middle.join(\"\")],\n    ...parts.slice(parts.length - rightCount)\n  ];\n}\n\nfunction transformerRenderWhitespace(options = {}) {\n  const classMap = {\n    \" \": options.classSpace ?? \"space\",\n    \"\t\": options.classTab ?? \"tab\"\n  };\n  const position = options.position ?? \"all\";\n  const keys = Object.keys(classMap);\n  return {\n    name: \"@shikijs/transformers:render-whitespace\",\n    // We use `root` hook here to ensure it runs after all other transformers\n    root(root) {\n      const pre = root.children[0];\n      const code = pre.tagName === \"pre\" ? pre.children[0] : { children: [root] };\n      code.children.forEach(\n        (line) => {\n          if (line.type !== \"element\" && line.type !== \"root\")\n            return;\n          const elements = line.children.filter((token) => token.type === \"element\");\n          const last = elements.length - 1;\n          line.children = line.children.flatMap((token) => {\n            if (token.type !== \"element\")\n              return token;\n            const index = elements.indexOf(token);\n            if (position === \"boundary\" && index !== 0 && index !== last)\n              return token;\n            if (position === \"trailing\" && index !== last)\n              return token;\n            const node = token.children[0];\n            if (node.type !== \"text\" || !node.value)\n              return token;\n            const parts = splitSpaces(\n              node.value.split(/([ \\t])/).filter((i) => i.length),\n              position === \"boundary\" && index === last && last !== 0 ? \"trailing\" : position,\n              position !== \"trailing\"\n            );\n            if (parts.length <= 1)\n              return token;\n            return parts.map((part) => {\n              const clone = {\n                ...token,\n                properties: { ...token.properties }\n              };\n              clone.children = [{ type: \"text\", value: part }];\n              if (keys.includes(part)) {\n                this.addClassToHast(clone, classMap[part]);\n                delete clone.properties.style;\n              }\n              return clone;\n            });\n          });\n        }\n      );\n    }\n  };\n}\n\nfunction transformerStyleToClass(options = {}) {\n  const {\n    classPrefix = \"__shiki_\",\n    classSuffix = \"\",\n    classReplacer = (className) => className\n  } = options;\n  const classToStyle = /* @__PURE__ */ new Map();\n  function stringifyStyle(style) {\n    return Object.entries(style).map(([key, value]) => `${key}:${value}`).join(\";\");\n  }\n  function registerStyle(style) {\n    const str = typeof style === \"string\" ? style : stringifyStyle(style);\n    let className = classPrefix + cyrb53(str) + classSuffix;\n    className = classReplacer(className);\n    if (!classToStyle.has(className)) {\n      classToStyle.set(\n        className,\n        typeof style === \"string\" ? style : { ...style }\n      );\n    }\n    return className;\n  }\n  return {\n    name: \"@shikijs/transformers:style-to-class\",\n    pre(t) {\n      if (!t.properties.style)\n        return;\n      const className = registerStyle(t.properties.style);\n      delete t.properties.style;\n      this.addClassToHast(t, className);\n    },\n    tokens(lines) {\n      for (const line of lines) {\n        for (const token of line) {\n          if (!token.htmlStyle)\n            continue;\n          const className = registerStyle(token.htmlStyle);\n          token.htmlStyle = {};\n          token.htmlAttrs ||= {};\n          if (!token.htmlAttrs.class)\n            token.htmlAttrs.class = className;\n          else\n            token.htmlAttrs.class += ` ${className}`;\n        }\n      }\n    },\n    getClassRegistry() {\n      return classToStyle;\n    },\n    getCSS() {\n      let css = \"\";\n      for (const [className, style] of classToStyle.entries()) {\n        css += `.${className}{${typeof style === \"string\" ? style : stringifyStyle(style)}}`;\n      }\n      return css;\n    },\n    clearRegistry() {\n      classToStyle.clear();\n    }\n  };\n}\nfunction cyrb53(str, seed = 0) {\n  let h1 = 3735928559 ^ seed;\n  let h2 = 1103547991 ^ seed;\n  for (let i = 0, ch; i < str.length; i++) {\n    ch = str.charCodeAt(i);\n    h1 = Math.imul(h1 ^ ch, 2654435761);\n    h2 = Math.imul(h2 ^ ch, 1597334677);\n  }\n  h1 = Math.imul(h1 ^ h1 >>> 16, 2246822507);\n  h1 ^= Math.imul(h2 ^ h2 >>> 13, 3266489909);\n  h2 = Math.imul(h2 ^ h2 >>> 16, 2246822507);\n  h2 ^= Math.imul(h1 ^ h1 >>> 13, 3266489909);\n  return (4294967296 * (2097151 & h2) + (h1 >>> 0)).toString(36).slice(0, 6);\n}\n\nexport { createCommentNotationTransformer, findAllSubstringIndexes, parseMetaHighlightString, parseMetaHighlightWords, transformerCompactLineOptions, transformerMetaHighlight, transformerMetaWordHighlight, transformerNotationDiff, transformerNotationErrorLevel, transformerNotationFocus, transformerNotationHighlight, transformerNotationMap, transformerNotationWordHighlight, transformerRemoveLineBreak, transformerRemoveNotationEscape, transformerRenderIndentGuides, transformerRenderWhitespace, transformerStyleToClass };\n","\"use strict\";function r(e){if([...e].length!==1)throw new Error(`Expected \"${e}\" to be a single code point`);return e.codePointAt(0)}function l(e,t,n){return e.has(t)||e.set(t,n),e.get(t)}const i=new Set([\"alnum\",\"alpha\",\"ascii\",\"blank\",\"cntrl\",\"digit\",\"graph\",\"lower\",\"print\",\"punct\",\"space\",\"upper\",\"word\",\"xdigit\"]),o=String.raw;function u(e,t){if(e==null)throw new Error(t??\"Value expected\");return e}export{r as cpOf,l as getOrInsert,i as PosixClassNames,o as r,u as throwIfNullish};\n//# sourceMappingURL=utils.js.map\n","\"use strict\";import{cpOf as h,PosixClassNames as G,r as p,throwIfNullish as N}from\"../utils.js\";const m=p`\\[\\^?`,b=`c.? | C(?:-.?)?|${p`[pP]\\{(?:\\^?[-\\x20_]*[A-Za-z][-\\x20\\w]*\\})?`}|${p`x[89A-Fa-f]\\p{AHex}(?:\\\\x[89A-Fa-f]\\p{AHex})*`}|${p`u(?:\\p{AHex}{4})? | x\\{[^\\}]*\\}? | x\\p{AHex}{0,2}`}|${p`o\\{[^\\}]*\\}?`}|${p`\\d{1,3}`}`,y=/[?*+][?+]?|\\{(?:\\d+(?:,\\d*)?|,\\d+)\\}\\??/,C=new RegExp(p`\n  \\\\ (?:\n    ${b}\n    | [gk]<[^>]*>?\n    | [gk]'[^']*'?\n    | .\n  )\n  | \\( (?:\n    \\? (?:\n      [:=!>({]\n      | <[=!]\n      | <[^>]*>\n      | '[^']*'\n      | ~\\|?\n      | #(?:[^)\\\\]|\\\\.?)*\n      | [^:)]*[:)]\n    )?\n    | \\*[^\\)]*\\)?\n  )?\n  | (?:${y.source})+\n  | ${m}\n  | .\n`.replace(/\\s+/g,\"\"),\"gsu\"),T=new RegExp(p`\n  \\\\ (?:\n    ${b}\n    | .\n  )\n  | \\[:(?:\\^?\\p{Alpha}+|\\^):\\]\n  | ${m}\n  | &&\n  | .\n`.replace(/\\s+/g,\"\"),\"gsu\");function M(e,n={}){const t={flags:\"\",...n,rules:{captureGroup:!1,singleline:!1,...n.rules}};if(typeof e!=\"string\")throw new Error(\"String expected as pattern\");const o=Y(t.flags),s=[o.extended],a={captureGroup:t.rules.captureGroup,getCurrentModX(){return s.at(-1)},numOpenGroups:0,popModX(){s.pop()},pushModX(u){s.push(u)},replaceCurrentModX(u){s[s.length-1]=u},singleline:t.rules.singleline};let r=[],i;for(C.lastIndex=0;i=C.exec(e);){const u=F(a,e,i[0],C.lastIndex);u.tokens?r.push(...u.tokens):u.token&&r.push(u.token),u.lastIndex!==void 0&&(C.lastIndex=u.lastIndex)}const l=[];let c=0;r.filter(u=>u.type===\"GroupOpen\").forEach(u=>{u.kind===\"capturing\"?u.number=++c:u.raw===\"(\"&&l.push(u)}),c||l.forEach((u,S)=>{u.kind=\"capturing\",u.number=S+1});const g=c||l.length;return{tokens:r.map(u=>u.type===\"EscapedNumber\"?ee(u,g):u).flat(),flags:o}}function F(e,n,t,o){const[s,a]=t;if(t===\"[\"||t===\"[^\"){const r=K(n,t,o);return{tokens:r.tokens,lastIndex:r.lastIndex}}if(s===\"\\\\\"){if(\"AbBGyYzZ\".includes(a))return{token:w(t,t)};if(/^\\\\g[<']/.test(t)){if(!/^\\\\g(?:<[^>]+>|'[^']+')$/.test(t))throw new Error(`Invalid group name \"${t}\"`);return{token:R(t)}}if(/^\\\\k[<']/.test(t)){if(!/^\\\\k(?:<[^>]+>|'[^']+')$/.test(t))throw new Error(`Invalid group name \"${t}\"`);return{token:A(t)}}if(a===\"K\")return{token:I(\"keep\",t)};if(a===\"N\"||a===\"R\")return{token:k(\"newline\",t,{negate:a===\"N\"})};if(a===\"O\")return{token:k(\"any\",t)};if(a===\"X\")return{token:k(\"text_segment\",t)};const r=x(t,{inCharClass:!1});return Array.isArray(r)?{tokens:r}:{token:r}}if(s===\"(\"){if(a===\"*\")return{token:j(t)};if(t===\"(?{\")throw new Error(`Unsupported callout \"${t}\"`);if(t.startsWith(\"(?#\")){if(n[o]!==\")\")throw new Error('Unclosed comment group \"(?#\"');return{lastIndex:o+1}}if(/^\\(\\?[-imx]+[:)]$/.test(t))return{token:L(t,e)};if(e.pushModX(e.getCurrentModX()),e.numOpenGroups++,t===\"(\"&&!e.captureGroup||t===\"(?:\")return{token:f(\"group\",t)};if(t===\"(?>\")return{token:f(\"atomic\",t)};if(t===\"(?=\"||t===\"(?!\"||t===\"(?<=\"||t===\"(?<!\")return{token:f(t[2]===\"<\"?\"lookbehind\":\"lookahead\",t,{negate:t.endsWith(\"!\")})};if(t===\"(\"&&e.captureGroup||t.startsWith(\"(?<\")&&t.endsWith(\">\")||t.startsWith(\"(?'\")&&t.endsWith(\"'\"))return{token:f(\"capturing\",t,{...t!==\"(\"&&{name:t.slice(3,-1)}})};if(t.startsWith(\"(?~\")){if(t===\"(?~|\")throw new Error(`Unsupported absence function kind \"${t}\"`);return{token:f(\"absence_repeater\",t)}}throw t===\"(?(\"?new Error(`Unsupported conditional \"${t}\"`):new Error(`Invalid or unsupported group option \"${t}\"`)}if(t===\")\"){if(e.popModX(),e.numOpenGroups--,e.numOpenGroups<0)throw new Error('Unmatched \")\"');return{token:Q(t)}}if(e.getCurrentModX()){if(t===\"#\"){const r=n.indexOf(`\n`,o);return{lastIndex:r===-1?n.length:r}}if(/^\\s$/.test(t)){const r=/\\s+/y;return r.lastIndex=o,{lastIndex:r.exec(n)?r.lastIndex:o}}}if(t===\".\")return{token:k(\"dot\",t)};if(t===\"^\"||t===\"$\"){const r=e.singleline?{\"^\":p`\\A`,$:p`\\Z`}[t]:t;return{token:w(r,t)}}return t===\"|\"?{token:P(t)}:y.test(t)?{tokens:te(t)}:{token:d(h(t),t)}}function K(e,n,t){const o=[E(n[1]===\"^\",n)];let s=1,a;for(T.lastIndex=t;a=T.exec(e);){const r=a[0];if(r[0]===\"[\"&&r[1]!==\":\")s++,o.push(E(r[1]===\"^\",r));else if(r===\"]\"){if(o.at(-1).type===\"CharacterClassOpen\")o.push(d(93,r));else if(s--,o.push(z(r)),!s)break}else{const i=X(r);Array.isArray(i)?o.push(...i):o.push(i)}}return{tokens:o,lastIndex:T.lastIndex||e.length}}function X(e){if(e[0]===\"\\\\\")return x(e,{inCharClass:!0});if(e[0]===\"[\"){const n=/\\[:(?<negate>\\^?)(?<name>[a-z]+):\\]/.exec(e);if(!n||!G.has(n.groups.name))throw new Error(`Invalid POSIX class \"${e}\"`);return k(\"posix\",e,{value:n.groups.name,negate:!!n.groups.negate})}return e===\"-\"?U(e):e===\"&&\"?H(e):d(h(e),e)}function x(e,{inCharClass:n}){const t=e[1];if(t===\"c\"||t===\"C\")return Z(e);if(\"dDhHsSwW\".includes(t))return q(e);if(e.startsWith(p`\\o{`))throw new Error(`Incomplete, invalid, or unsupported octal code point \"${e}\"`);if(/^\\\\[pP]\\{/.test(e)){if(e.length===3)throw new Error(`Incomplete or invalid Unicode property \"${e}\"`);return V(e)}if(/^\\\\x[89A-Fa-f]\\p{AHex}/u.test(e))try{const o=e.split(/\\\\x/).slice(1).map(i=>parseInt(i,16)),s=new TextDecoder(\"utf-8\",{ignoreBOM:!0,fatal:!0}).decode(new Uint8Array(o)),a=new TextEncoder;return[...s].map(i=>{const l=[...a.encode(i)].map(c=>`\\\\x${c.toString(16)}`).join(\"\");return d(h(i),l)})}catch{throw new Error(`Multibyte code \"${e}\" incomplete or invalid in Oniguruma`)}if(t===\"u\"||t===\"x\")return d(J(e),e);if($.has(t))return d($.get(t),e);if(/\\d/.test(t))return W(n,e);if(e===\"\\\\\")throw new Error(p`Incomplete escape \"\\\"`);if(t===\"M\")throw new Error(`Unsupported meta \"${e}\"`);if([...e].length===2)return d(e.codePointAt(1),e);throw new Error(`Unexpected escape \"${e}\"`)}function P(e){return{type:\"Alternator\",raw:e}}function w(e,n){return{type:\"Assertion\",kind:e,raw:n}}function A(e){return{type:\"Backreference\",raw:e}}function d(e,n){return{type:\"Character\",value:e,raw:n}}function z(e){return{type:\"CharacterClassClose\",raw:e}}function U(e){return{type:\"CharacterClassHyphen\",raw:e}}function H(e){return{type:\"CharacterClassIntersector\",raw:e}}function E(e,n){return{type:\"CharacterClassOpen\",negate:e,raw:n}}function k(e,n,t={}){return{type:\"CharacterSet\",kind:e,...t,raw:n}}function I(e,n,t={}){return e===\"keep\"?{type:\"Directive\",kind:e,raw:n}:{type:\"Directive\",kind:e,flags:N(t.flags),raw:n}}function W(e,n){return{type:\"EscapedNumber\",inCharClass:e,raw:n}}function Q(e){return{type:\"GroupClose\",raw:e}}function f(e,n,t={}){return{type:\"GroupOpen\",kind:e,...t,raw:n}}function D(e,n,t,o){return{type:\"NamedCallout\",kind:e,tag:n,arguments:t,raw:o}}function _(e,n,t,o){return{type:\"Quantifier\",kind:e,min:n,max:t,raw:o}}function R(e){return{type:\"Subroutine\",raw:e}}const B=new Set([\"COUNT\",\"CMP\",\"ERROR\",\"FAIL\",\"MAX\",\"MISMATCH\",\"SKIP\",\"TOTAL_COUNT\"]),$=new Map([[\"a\",7],[\"b\",8],[\"e\",27],[\"f\",12],[\"n\",10],[\"r\",13],[\"t\",9],[\"v\",11]]);function Z(e){const n=e[1]===\"c\"?e[2]:e[3];if(!n||!/[A-Za-z]/.test(n))throw new Error(`Unsupported control character \"${e}\"`);return d(h(n.toUpperCase())-64,e)}function L(e,n){let{on:t,off:o}=/^\\(\\?(?<on>[imx]*)(?:-(?<off>[-imx]*))?/.exec(e).groups;o??=\"\";const s=(n.getCurrentModX()||t.includes(\"x\"))&&!o.includes(\"x\"),a=v(t),r=v(o),i={};if(a&&(i.enable=a),r&&(i.disable=r),e.endsWith(\")\"))return n.replaceCurrentModX(s),I(\"flags\",e,{flags:i});if(e.endsWith(\":\"))return n.pushModX(s),n.numOpenGroups++,f(\"group\",e,{...(a||r)&&{flags:i}});throw new Error(`Unexpected flag modifier \"${e}\"`)}function j(e){const n=/\\(\\*(?<name>[A-Za-z_]\\w*)?(?:\\[(?<tag>(?:[A-Za-z_]\\w*)?)\\])?(?:\\{(?<args>[^}]*)\\})?\\)/.exec(e);if(!n)throw new Error(`Incomplete or invalid named callout \"${e}\"`);const{name:t,tag:o,args:s}=n.groups;if(!t)throw new Error(`Invalid named callout \"${e}\"`);if(o===\"\")throw new Error(`Named callout tag with empty value not allowed \"${e}\"`);const a=s?s.split(\",\").filter(g=>g!==\"\").map(g=>/^[+-]?\\d+$/.test(g)?+g:g):[],[r,i,l]=a,c=B.has(t)?t.toLowerCase():\"custom\";switch(c){case\"fail\":case\"mismatch\":case\"skip\":if(a.length>0)throw new Error(`Named callout arguments not allowed \"${a}\"`);break;case\"error\":if(a.length>1)throw new Error(`Named callout allows only one argument \"${a}\"`);if(typeof r==\"string\")throw new Error(`Named callout argument must be a number \"${r}\"`);break;case\"max\":if(!a.length||a.length>2)throw new Error(`Named callout must have one or two arguments \"${a}\"`);if(typeof r==\"string\"&&!/^[A-Za-z_]\\w*$/.test(r))throw new Error(`Named callout argument one must be a tag or number \"${r}\"`);if(a.length===2&&(typeof i==\"number\"||!/^[<>X]$/.test(i)))throw new Error(`Named callout optional argument two must be '<', '>', or 'X' \"${i}\"`);break;case\"count\":case\"total_count\":if(a.length>1)throw new Error(`Named callout allows only one argument \"${a}\"`);if(a.length===1&&(typeof r==\"number\"||!/^[<>X]$/.test(r)))throw new Error(`Named callout optional argument must be '<', '>', or 'X' \"${r}\"`);break;case\"cmp\":if(a.length!==3)throw new Error(`Named callout must have three arguments \"${a}\"`);if(typeof r==\"string\"&&!/^[A-Za-z_]\\w*$/.test(r))throw new Error(`Named callout argument one must be a tag or number \"${r}\"`);if(typeof i==\"number\"||!/^(?:[<>!=]=|[<>])$/.test(i))throw new Error(`Named callout argument two must be '==', '!=', '>', '<', '>=', or '<=' \"${i}\"`);if(typeof l==\"string\"&&!/^[A-Za-z_]\\w*$/.test(l))throw new Error(`Named callout argument three must be a tag or number \"${l}\"`);break;case\"custom\":throw new Error(`Undefined callout name \"${t}\"`);default:throw new Error(`Unexpected named callout kind \"${c}\"`)}return D(c,o??null,s?.split(\",\")??null,e)}function O(e){let n=null,t,o;if(e[0]===\"{\"){const{minStr:s,maxStr:a}=/^\\{(?<minStr>\\d*)(?:,(?<maxStr>\\d*))?/.exec(e).groups,r=1e5;if(+s>r||a&&+a>r)throw new Error(\"Quantifier value unsupported in Oniguruma\");if(t=+s,o=a===void 0?+s:a===\"\"?1/0:+a,t>o&&(n=\"possessive\",[t,o]=[o,t]),e.endsWith(\"?\")){if(n===\"possessive\")throw new Error('Unsupported possessive interval quantifier chain with \"?\"');n=\"lazy\"}else n||(n=\"greedy\")}else t=e[0]===\"+\"?1:0,o=e[0]===\"?\"?1:1/0,n=e[1]===\"+\"?\"possessive\":e[1]===\"?\"?\"lazy\":\"greedy\";return _(n,t,o,e)}function q(e){const n=e[1].toLowerCase();return k({d:\"digit\",h:\"hex\",s:\"space\",w:\"word\"}[n],e,{negate:e[1]!==n})}function V(e){const{p:n,neg:t,value:o}=/^\\\\(?<p>[pP])\\{(?<neg>\\^?)(?<value>[^}]+)/.exec(e).groups;return k(\"property\",e,{value:o,negate:n===\"P\"&&!t||n===\"p\"&&!!t})}function v(e){const n={};return e.includes(\"i\")&&(n.ignoreCase=!0),e.includes(\"m\")&&(n.dotAll=!0),e.includes(\"x\")&&(n.extended=!0),Object.keys(n).length?n:null}function Y(e){const n={ignoreCase:!1,dotAll:!1,extended:!1,digitIsAscii:!1,posixIsAscii:!1,spaceIsAscii:!1,wordIsAscii:!1,textSegmentMode:null};for(let t=0;t<e.length;t++){const o=e[t];if(!\"imxDPSWy\".includes(o))throw new Error(`Invalid flag \"${o}\"`);if(o===\"y\"){if(!/^y{[gw]}/.test(e.slice(t)))throw new Error('Invalid or unspecified flag \"y\" mode');n.textSegmentMode=e[t+2]===\"g\"?\"grapheme\":\"word\",t+=3;continue}n[{i:\"ignoreCase\",m:\"dotAll\",x:\"extended\",D:\"digitIsAscii\",P:\"posixIsAscii\",S:\"spaceIsAscii\",W:\"wordIsAscii\"}[o]]=!0}return n}function J(e){if(/^(?:\\\\u(?!\\p{AHex}{4})|\\\\x(?!\\p{AHex}{1,2}|\\{\\p{AHex}{1,8}\\}))/u.test(e))throw new Error(`Incomplete or invalid escape \"${e}\"`);const n=e[2]===\"{\"?/^\\\\x\\{\\s*(?<hex>\\p{AHex}+)/u.exec(e).groups.hex:e.slice(2);return parseInt(n,16)}function ee(e,n){const{raw:t,inCharClass:o}=e,s=t.slice(1);if(!o&&(s!==\"0\"&&s.length===1||s[0]!==\"0\"&&+s<=n))return[A(t)];const a=[],r=s.match(/^[0-7]+|\\d/g);for(let i=0;i<r.length;i++){const l=r[i];let c;if(i===0&&l!==\"8\"&&l!==\"9\"){if(c=parseInt(l,8),c>127)throw new Error(p`Octal encoded byte above 177 unsupported \"${t}\"`)}else c=h(l);a.push(d(c,(i===0?\"\\\\\":\"\")+l))}return a}function te(e){const n=[],t=new RegExp(y,\"gy\");let o;for(;o=t.exec(e);){const s=o[0];if(s[0]===\"{\"){const a=/^\\{(?<min>\\d+),(?<max>\\d+)\\}\\??$/.exec(s);if(a){const{min:r,max:i}=a.groups;if(+r>+i&&s.endsWith(\"?\")){t.lastIndex--,n.push(O(s.slice(0,-1)));continue}}}n.push(O(s))}return n}export{M as tokenize};\n//# sourceMappingURL=tokenize.js.map\n","\"use strict\";function o(e,t){if(!Array.isArray(e.body))throw new Error(\"Expected node with body array\");if(e.body.length!==1)return!1;const r=e.body[0];return!t||Object.keys(t).every(n=>t[n]===r[n])}function a(e){return!(!i.has(e.type)||e.type===\"AbsenceFunction\"&&e.kind!==\"repeater\")}const i=new Set([\"AbsenceFunction\",\"CapturingGroup\",\"Group\",\"LookaroundAssertion\",\"Regex\"]);function s(e){return y.has(e.type)}const y=new Set([\"AbsenceFunction\",\"Backreference\",\"CapturingGroup\",\"Character\",\"CharacterClass\",\"CharacterSet\",\"Group\",\"Quantifier\",\"Subroutine\"]);export{o as hasOnlyChild,a as isAlternativeContainer,s as isQuantifiable};\n//# sourceMappingURL=node-utils.js.map\n","\"use strict\";import{tokenize as q}from\"../tokenizer/tokenize.js\";import{cpOf as H,getOrInsert as Z,PosixClassNames as x,r as y,throwIfNullish as g}from\"../utils.js\";import{hasOnlyChild as Y,isAlternativeContainer as j,isQuantifiable as S}from\"./node-utils.js\";function J(e,r={}){const n={flags:\"\",normalizeUnknownPropertyNames:!1,skipBackrefValidation:!1,skipLookbehindValidation:!1,skipPropertyNameValidation:!1,unicodePropertyMap:null,...r,rules:{captureGroup:!1,singleline:!1,...r.rules}},t=q(e,{flags:n.flags,rules:{captureGroup:n.rules.captureGroup,singleline:n.rules.singleline}}),s=(p,N)=>{const u=t.tokens[o.nextIndex];switch(o.parent=p,o.nextIndex++,u.type){case\"Alternator\":return b();case\"Assertion\":return W(u);case\"Backreference\":return X(u,o);case\"Character\":return m(u.value,{useLastValid:!!N.isCheckingRangeEnd});case\"CharacterClassHyphen\":return ee(u,o,N);case\"CharacterClassOpen\":return re(u,o,N);case\"CharacterSet\":return ne(u,o);case\"Directive\":return I(u.kind,{flags:u.flags});case\"GroupOpen\":return te(u,o,N);case\"NamedCallout\":return U(u.kind,u.tag,u.arguments);case\"Quantifier\":return oe(u,o);case\"Subroutine\":return ae(u,o);default:throw new Error(`Unexpected token type \"${u.type}\"`)}},o={capturingGroups:[],hasNumberedRef:!1,namedGroupsByName:new Map,nextIndex:0,normalizeUnknownPropertyNames:n.normalizeUnknownPropertyNames,parent:null,skipBackrefValidation:n.skipBackrefValidation,skipLookbehindValidation:n.skipLookbehindValidation,skipPropertyNameValidation:n.skipPropertyNameValidation,subroutines:[],tokens:t.tokens,unicodePropertyMap:n.unicodePropertyMap,walk:s},i=B(T(t.flags));let d=i.body[0];for(;o.nextIndex<t.tokens.length;){const p=s(d,{});p.type===\"Alternative\"?(i.body.push(p),d=p):d.body.push(p)}const{capturingGroups:a,hasNumberedRef:l,namedGroupsByName:c,subroutines:f}=o;if(l&&c.size&&!n.rules.captureGroup)throw new Error(\"Numbered backref/subroutine not allowed when using named capture\");for(const{ref:p}of f)if(typeof p==\"number\"){if(p>a.length)throw new Error(\"Subroutine uses a group number that's not defined\");p&&(a[p-1].isSubroutined=!0)}else if(c.has(p)){if(c.get(p).length>1)throw new Error(y`Subroutine uses a duplicate group name \"\\g<${p}>\"`);c.get(p)[0].isSubroutined=!0}else throw new Error(y`Subroutine uses a group name that's not defined \"\\g<${p}>\"`);return i}function W({kind:e}){return F(g({\"^\":\"line_start\",$:\"line_end\",\"\\\\A\":\"string_start\",\"\\\\b\":\"word_boundary\",\"\\\\B\":\"word_boundary\",\"\\\\G\":\"search_start\",\"\\\\y\":\"text_segment_boundary\",\"\\\\Y\":\"text_segment_boundary\",\"\\\\z\":\"string_end\",\"\\\\Z\":\"string_end_newline\"}[e],`Unexpected assertion kind \"${e}\"`),{negate:e===y`\\B`||e===y`\\Y`})}function X({raw:e},r){const n=/^\\\\k[<']/.test(e),t=n?e.slice(3,-1):e.slice(1),s=(o,i=!1)=>{const d=r.capturingGroups.length;let a=!1;if(o>d)if(r.skipBackrefValidation)a=!0;else throw new Error(`Not enough capturing groups defined to the left \"${e}\"`);return r.hasNumberedRef=!0,k(i?d+1-o:o,{orphan:a})};if(n){const o=/^(?<sign>-?)0*(?<num>[1-9]\\d*)$/.exec(t);if(o)return s(+o.groups.num,!!o.groups.sign);if(/[-+]/.test(t))throw new Error(`Invalid backref name \"${e}\"`);if(!r.namedGroupsByName.has(t))throw new Error(`Group name not defined to the left \"${e}\"`);return k(t)}return s(+t)}function ee(e,r,n){const{tokens:t,walk:s}=r,o=r.parent,i=o.body.at(-1),d=t[r.nextIndex];if(!n.isCheckingRangeEnd&&i&&i.type!==\"CharacterClass\"&&i.type!==\"CharacterClassRange\"&&d&&d.type!==\"CharacterClassOpen\"&&d.type!==\"CharacterClassClose\"&&d.type!==\"CharacterClassIntersector\"){const a=s(o,{...n,isCheckingRangeEnd:!0});if(i.type===\"Character\"&&a.type===\"Character\")return o.body.pop(),L(i,a);throw new Error(\"Invalid character class range\")}return m(H(\"-\"))}function re({negate:e},r,n){const{tokens:t,walk:s}=r,o=t[r.nextIndex],i=[C()];let d=z(o);for(;d.type!==\"CharacterClassClose\";){if(d.type===\"CharacterClassIntersector\")i.push(C()),r.nextIndex++;else{const l=i.at(-1);l.body.push(s(l,n))}d=z(t[r.nextIndex],o)}const a=C({negate:e});return i.length===1?a.body=i[0].body:(a.kind=\"intersection\",a.body=i.map(l=>l.body.length===1?l.body[0]:l)),r.nextIndex++,a}function ne({kind:e,negate:r,value:n},t){const{normalizeUnknownPropertyNames:s,skipPropertyNameValidation:o,unicodePropertyMap:i}=t;if(e===\"property\"){const d=w(n);if(x.has(d)&&!i?.has(d))e=\"posix\",n=d;else return Q(n,{negate:r,normalizeUnknownPropertyNames:s,skipPropertyNameValidation:o,unicodePropertyMap:i})}return e===\"posix\"?R(n,{negate:r}):E(e,{negate:r})}function te(e,r,n){const{tokens:t,capturingGroups:s,namedGroupsByName:o,skipLookbehindValidation:i,walk:d}=r,a=ie(e),l=a.type===\"AbsenceFunction\",c=$(a),f=c&&a.negate;if(a.type===\"CapturingGroup\"&&(s.push(a),a.name&&Z(o,a.name,[]).push(a)),l&&n.isInAbsenceFunction)throw new Error(\"Nested absence function not supported by Oniguruma\");let p=D(t[r.nextIndex]);for(;p.type!==\"GroupClose\";){if(p.type===\"Alternator\")a.body.push(b()),r.nextIndex++;else{const N=a.body.at(-1),u=d(N,{...n,isInAbsenceFunction:n.isInAbsenceFunction||l,isInLookbehind:n.isInLookbehind||c,isInNegLookbehind:n.isInNegLookbehind||f});if(N.body.push(u),(c||n.isInLookbehind)&&!i){const v=\"Lookbehind includes a pattern not allowed by Oniguruma\";if(f||n.isInNegLookbehind){if(M(u)||u.type===\"CapturingGroup\")throw new Error(v)}else if(M(u)||$(u)&&u.negate)throw new Error(v)}}p=D(t[r.nextIndex])}return r.nextIndex++,a}function oe({kind:e,min:r,max:n},t){const s=t.parent,o=s.body.at(-1);if(!o||!S(o))throw new Error(\"Quantifier requires a repeatable token\");const i=_(e,r,n,o);return s.body.pop(),i}function ae({raw:e},r){const{capturingGroups:n,subroutines:t}=r;let s=e.slice(3,-1);const o=/^(?<sign>[-+]?)0*(?<num>[1-9]\\d*)$/.exec(s);if(o){const d=+o.groups.num,a=n.length;if(r.hasNumberedRef=!0,s={\"\":d,\"+\":a+d,\"-\":a+1-d}[o.groups.sign],s<1)throw new Error(\"Invalid subroutine number\")}else s===\"0\"&&(s=0);const i=O(s);return t.push(i),i}function G(e,r){if(e!==\"repeater\")throw new Error(`Unexpected absence function kind \"${e}\"`);return{type:\"AbsenceFunction\",kind:e,body:h(r?.body)}}function b(e){return{type:\"Alternative\",body:V(e?.body)}}function F(e,r){const n={type:\"Assertion\",kind:e};return(e===\"word_boundary\"||e===\"text_segment_boundary\")&&(n.negate=!!r?.negate),n}function k(e,r){const n=!!r?.orphan;return{type:\"Backreference\",ref:e,...n&&{orphan:n}}}function P(e,r){const n={name:void 0,isSubroutined:!1,...r};if(n.name!==void 0&&!se(n.name))throw new Error(`Group name \"${n.name}\" invalid in Oniguruma`);return{type:\"CapturingGroup\",number:e,...n.name&&{name:n.name},...n.isSubroutined&&{isSubroutined:n.isSubroutined},body:h(r?.body)}}function m(e,r){const n={useLastValid:!1,...r};if(e>1114111){const t=e.toString(16);if(n.useLastValid)e=1114111;else throw e>1310719?new Error(`Invalid code point out of range \"\\\\x{${t}}\"`):new Error(`Invalid code point out of range in JS \"\\\\x{${t}}\"`)}return{type:\"Character\",value:e}}function C(e){const r={kind:\"union\",negate:!1,...e};return{type:\"CharacterClass\",kind:r.kind,negate:r.negate,body:V(e?.body)}}function L(e,r){if(r.value<e.value)throw new Error(\"Character class range out of order\");return{type:\"CharacterClassRange\",min:e,max:r}}function E(e,r){const n=!!r?.negate,t={type:\"CharacterSet\",kind:e};return(e===\"digit\"||e===\"hex\"||e===\"newline\"||e===\"space\"||e===\"word\")&&(t.negate=n),(e===\"text_segment\"||e===\"newline\"&&!n)&&(t.variableLength=!0),t}function I(e,r={}){if(e===\"keep\")return{type:\"Directive\",kind:e};if(e===\"flags\")return{type:\"Directive\",kind:e,flags:g(r.flags)};throw new Error(`Unexpected directive kind \"${e}\"`)}function T(e){return{type:\"Flags\",...e}}function A(e){const r=e?.atomic,n=e?.flags;if(r&&n)throw new Error(\"Atomic group cannot have flags\");return{type:\"Group\",...r&&{atomic:r},...n&&{flags:n},body:h(e?.body)}}function K(e){const r={behind:!1,negate:!1,...e};return{type:\"LookaroundAssertion\",kind:r.behind?\"lookbehind\":\"lookahead\",negate:r.negate,body:h(e?.body)}}function U(e,r,n){return{type:\"NamedCallout\",kind:e,tag:r,arguments:n}}function R(e,r){const n=!!r?.negate;if(!x.has(e))throw new Error(`Invalid POSIX class \"${e}\"`);return{type:\"CharacterSet\",kind:\"posix\",value:e,negate:n}}function _(e,r,n,t){if(r>n)throw new Error(\"Invalid reversed quantifier range\");return{type:\"Quantifier\",kind:e,min:r,max:n,body:t}}function B(e,r){return{type:\"Regex\",body:h(r?.body),flags:e}}function O(e){return{type:\"Subroutine\",ref:e}}function Q(e,r){const n={negate:!1,normalizeUnknownPropertyNames:!1,skipPropertyNameValidation:!1,unicodePropertyMap:null,...r};let t=n.unicodePropertyMap?.get(w(e));if(!t){if(n.normalizeUnknownPropertyNames)t=de(e);else if(n.unicodePropertyMap&&!n.skipPropertyNameValidation)throw new Error(y`Invalid Unicode property \"\\p{${e}}\"`)}return{type:\"CharacterSet\",kind:\"property\",value:t??e,negate:n.negate}}function ie({flags:e,kind:r,name:n,negate:t,number:s}){switch(r){case\"absence_repeater\":return G(\"repeater\");case\"atomic\":return A({atomic:!0});case\"capturing\":return P(s,{name:n});case\"group\":return A({flags:e});case\"lookahead\":case\"lookbehind\":return K({behind:r===\"lookbehind\",negate:t});default:throw new Error(`Unexpected group kind \"${r}\"`)}}function h(e){if(e===void 0)e=[b()];else if(!Array.isArray(e)||!e.length||!e.every(r=>r.type===\"Alternative\"))throw new Error(\"Invalid body; expected array of one or more Alternative nodes\");return e}function V(e){if(e===void 0)e=[];else if(!Array.isArray(e)||!e.every(r=>!!r.type))throw new Error(\"Invalid body; expected array of nodes\");return e}function M(e){return e.type===\"LookaroundAssertion\"&&e.kind===\"lookahead\"}function $(e){return e.type===\"LookaroundAssertion\"&&e.kind===\"lookbehind\"}function se(e){return/^[\\p{Alpha}\\p{Pc}][^)]*$/u.test(e)}function de(e){return e.trim().replace(/[- _]+/g,\"_\").replace(/[A-Z][a-z]+(?=[A-Z])/g,\"$&_\").replace(/[A-Za-z]+/g,r=>r[0].toUpperCase()+r.slice(1).toLowerCase())}function w(e){return e.replace(/[- _]+/g,\"\").toLowerCase()}function z(e,r){return g(e,`${r?.type===\"Character\"&&r.value===93?\"Empty\":\"Unclosed\"} character class`)}function D(e){return g(e,\"Unclosed group\")}export{G as createAbsenceFunction,b as createAlternative,F as createAssertion,k as createBackreference,P as createCapturingGroup,m as createCharacter,C as createCharacterClass,L as createCharacterClassRange,E as createCharacterSet,I as createDirective,T as createFlags,A as createGroup,K as createLookaroundAssertion,U as createNamedCallout,R as createPosixClass,_ as createQuantifier,B as createRegex,O as createSubroutine,Q as createUnicodeProperty,Y as hasOnlyChild,j as isAlternativeContainer,S as isQuantifiable,J as parse,w as slug};\n//# sourceMappingURL=parse.js.map\n","\"use strict\";import{throwIfNullish as A}from\"../utils.js\";function S(a,v,N=null){function u(e,s){for(let t=0;t<e.length;t++){const r=n(e[t],s,t,e);t=Math.max(-1,t+r)}}function n(e,s=null,t=null,r=null){let i=0,c=!1;const d={node:e,parent:s,key:t,container:r,root:a,remove(){f(r).splice(Math.max(0,l(t)+i),1),i--,c=!0},removeAllNextSiblings(){return f(r).splice(l(t)+1)},removeAllPrevSiblings(){const o=l(t)+i;return i-=o,f(r).splice(0,Math.max(0,o))},replaceWith(o,y={}){const b=!!y.traverse;r?r[Math.max(0,l(t)+i)]=o:A(s,\"Can't replace root node\")[t]=o,b&&n(o,s,t,r),c=!0},replaceWithMultiple(o,y={}){const b=!!y.traverse;if(f(r).splice(Math.max(0,l(t)+i),1,...o),i+=o.length-1,b){let g=0;for(let x=0;x<o.length;x++)g+=n(o[x],s,l(t)+x+g,r)}c=!0},skip(){c=!0}},{type:m}=e,h=v[\"*\"],p=v[m],R=typeof h==\"function\"?h:h?.enter,P=typeof p==\"function\"?p:p?.enter;if(R?.(d,N),P?.(d,N),!c)switch(m){case\"AbsenceFunction\":case\"CapturingGroup\":case\"Group\":u(e.body,e);break;case\"Alternative\":case\"CharacterClass\":u(e.body,e);break;case\"Assertion\":case\"Backreference\":case\"Character\":case\"CharacterSet\":case\"Directive\":case\"Flags\":case\"NamedCallout\":case\"Subroutine\":break;case\"CharacterClassRange\":n(e.min,e,\"min\"),n(e.max,e,\"max\");break;case\"LookaroundAssertion\":u(e.body,e);break;case\"Quantifier\":n(e.body,e,\"body\");break;case\"Regex\":u(e.body,e),n(e.flags,e,\"flags\");break;default:throw new Error(`Unexpected node type \"${m}\"`)}return p?.exit?.(d,N),h?.exit?.(d,N),i}return n(a),a}function f(a){if(!Array.isArray(a))throw new Error(\"Container expected\");return a}function l(a){if(typeof a!=\"number\")throw new Error(\"Numeric key expected\");return a}export{S as traverse};\n//# sourceMappingURL=traverse.js.map\n","// Separating some utils for improved tree shaking of the `./internals` export\n\nconst noncapturingDelim = String.raw`\\(\\?(?:[:=!>A-Za-z\\-]|<[=!]|\\(DEFINE\\))`;\n\n/**\nUpdates the array in place by incrementing each value greater than or equal to the threshold.\n@param {Array<number>} arr\n@param {number} threshold\n*/\nfunction incrementIfAtLeast(arr, threshold) {\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] >= threshold) {\n      arr[i]++;\n    }\n  }\n}\n\n/**\n@param {string} str\n@param {number} pos\n@param {string} oldValue\n@param {string} newValue\n@returns {string}\n*/\nfunction spliceStr(str, pos, oldValue, newValue) {\n  return str.slice(0, pos) + newValue + str.slice(pos + oldValue.length);\n}\n\nexport {\n  incrementIfAtLeast,\n  noncapturingDelim,\n  spliceStr,\n};\n","// Constant properties for tracking regex syntax context\nexport const Context = Object.freeze({\n  DEFAULT: 'DEFAULT',\n  CHAR_CLASS: 'CHAR_CLASS',\n});\n\n/**\nReplaces all unescaped instances of a regex pattern in the given context, using a replacement\nstring or callback.\n\nDoesn't skip over complete multicharacter tokens (only `\\` plus its folowing char) so must be used\nwith knowledge of what's safe to do given regex syntax. Assumes UnicodeSets-mode syntax.\n@param {string} expression Search target\n@param {string} needle Search as a regex pattern, with flags `su` applied\n@param {string | (match: RegExpExecArray, details: {\n  context: 'DEFAULT' | 'CHAR_CLASS';\n  negated: boolean;\n}) => string} replacement\n@param {'DEFAULT' | 'CHAR_CLASS'} [context] All contexts if not specified\n@returns {string} Updated expression\n@example\nconst str = '.\\\\.\\\\\\\\.[[\\\\.].].';\nreplaceUnescaped(str, '\\\\.', '@');\n// → '@\\\\.\\\\\\\\@[[\\\\.]@]@'\nreplaceUnescaped(str, '\\\\.', '@', Context.DEFAULT);\n// → '@\\\\.\\\\\\\\@[[\\\\.].]@'\nreplaceUnescaped(str, '\\\\.', '@', Context.CHAR_CLASS);\n// → '.\\\\.\\\\\\\\.[[\\\\.]@].'\n*/\nexport function replaceUnescaped(expression, needle, replacement, context) {\n  const re = new RegExp(String.raw`${needle}|(?<$skip>\\[\\^?|\\\\?.)`, 'gsu');\n  const negated = [false];\n  let numCharClassesOpen = 0;\n  let result = '';\n  for (const match of expression.matchAll(re)) {\n    const {0: m, groups: {$skip}} = match;\n    if (!$skip && (!context || (context === Context.DEFAULT) === !numCharClassesOpen)) {\n      if (replacement instanceof Function) {\n        result += replacement(match, {\n          context: numCharClassesOpen ? Context.CHAR_CLASS : Context.DEFAULT,\n          negated: negated[negated.length - 1],\n        });\n      } else {\n        result += replacement;\n      }\n      continue;\n    }\n    if (m[0] === '[') {\n      numCharClassesOpen++;\n      negated.push(m[1] === '^');\n    } else if (m === ']' && numCharClassesOpen) {\n      numCharClassesOpen--;\n      negated.pop();\n    }\n    result += m;\n  }\n  return result;\n}\n\n/**\nRuns a callback for each unescaped instance of a regex pattern in the given context.\n\nDoesn't skip over complete multicharacter tokens (only `\\` plus its folowing char) so must be used\nwith knowledge of what's safe to do given regex syntax. Assumes UnicodeSets-mode syntax.\n@param {string} expression Search target\n@param {string} needle Search as a regex pattern, with flags `su` applied\n@param {(match: RegExpExecArray, details: {\n  context: 'DEFAULT' | 'CHAR_CLASS';\n  negated: boolean;\n}) => void} callback\n@param {'DEFAULT' | 'CHAR_CLASS'} [context] All contexts if not specified\n*/\nexport function forEachUnescaped(expression, needle, callback, context) {\n  // Do this the easy way\n  replaceUnescaped(expression, needle, callback, context);\n}\n\n/**\nReturns a match object for the first unescaped instance of a regex pattern in the given context, or\n`null`.\n\nDoesn't skip over complete multicharacter tokens (only `\\` plus its folowing char) so must be used\nwith knowledge of what's safe to do given regex syntax. Assumes UnicodeSets-mode syntax.\n@param {string} expression Search target\n@param {string} needle Search as a regex pattern, with flags `su` applied\n@param {number} [pos] Offset to start the search\n@param {'DEFAULT' | 'CHAR_CLASS'} [context] All contexts if not specified\n@returns {RegExpExecArray | null}\n*/\nexport function execUnescaped(expression, needle, pos = 0, context) {\n  // Quick partial test; avoid the loop if not needed\n  if (!(new RegExp(needle, 'su').test(expression))) {\n    return null;\n  }\n  const re = new RegExp(`${needle}|(?<$skip>\\\\\\\\?.)`, 'gsu');\n  re.lastIndex = pos;\n  let numCharClassesOpen = 0;\n  let match;\n  while (match = re.exec(expression)) {\n    const {0: m, groups: {$skip}} = match;\n    if (!$skip && (!context || (context === Context.DEFAULT) === !numCharClassesOpen)) {\n      return match;\n    }\n    if (m === '[') {\n      numCharClassesOpen++;\n    } else if (m === ']' && numCharClassesOpen) {\n      numCharClassesOpen--;\n    }\n    // Avoid an infinite loop on zero-length matches\n    if (re.lastIndex == match.index) {\n      re.lastIndex++;\n    }\n  }\n  return null;\n}\n\n/**\nChecks whether an unescaped instance of a regex pattern appears in the given context.\n\nDoesn't skip over complete multicharacter tokens (only `\\` plus its folowing char) so must be used\nwith knowledge of what's safe to do given regex syntax. Assumes UnicodeSets-mode syntax.\n@param {string} expression Search target\n@param {string} needle Search as a regex pattern, with flags `su` applied\n@param {'DEFAULT' | 'CHAR_CLASS'} [context] All contexts if not specified\n@returns {boolean} Whether the pattern was found\n*/\nexport function hasUnescaped(expression, needle, context) {\n  // Do this the easy way\n  return !!execUnescaped(expression, needle, 0, context);\n}\n\n/**\nExtracts the full contents of a group (subpattern) from the given expression, accounting for\nescaped characters, nested groups, and character classes. The group is identified by the position\nwhere its contents start (the string index just after the group's opening delimiter). Returns the\nrest of the string if the group is unclosed.\n\nAssumes UnicodeSets-mode syntax.\n@param {string} expression Search target\n@param {number} contentsStartPos\n@returns {string}\n*/\nexport function getGroupContents(expression, contentsStartPos) {\n  const token = /\\\\?./gsu;\n  token.lastIndex = contentsStartPos;\n  let contentsEndPos = expression.length;\n  let numCharClassesOpen = 0;\n  // Starting search within an open group, after the group's opening\n  let numGroupsOpen = 1;\n  let match;\n  while (match = token.exec(expression)) {\n    const [m] = match;\n    if (m === '[') {\n      numCharClassesOpen++;\n    } else if (!numCharClassesOpen) {\n      if (m === '(') {\n        numGroupsOpen++;\n      } else if (m === ')') {\n        numGroupsOpen--;\n        if (!numGroupsOpen) {\n          contentsEndPos = match.index;\n          break;\n        }\n      }\n    } else if (m === ']') {\n      numCharClassesOpen--;\n    }\n  }\n  return expression.slice(contentsStartPos, contentsEndPos);\n}\n","import {incrementIfAtLeast, noncapturingDelim, spliceStr} from './utils-internals.js';\nimport {Context, replaceUnescaped} from 'regex-utilities';\n\nconst atomicPluginToken = new RegExp(String.raw`(?<noncapturingStart>${noncapturingDelim})|(?<capturingStart>\\((?:\\?<[^>]+>)?)|\\\\?.`, 'gsu');\n\n/**\nApply transformations for atomic groups: `(?>…)`.\n@param {string} expression\n@param {import('./regex.js').PluginData} [data]\n@returns {Required<import('./regex.js').PluginResult>}\n*/\nfunction atomic(expression, data) {\n  const hiddenCaptures = data?.hiddenCaptures ?? [];\n  // Capture transfer is used by <github.com/slevithan/oniguruma-to-es>\n  let captureTransfers = data?.captureTransfers ?? new Map();\n  if (!/\\(\\?>/.test(expression)) {\n    return {\n      pattern: expression,\n      captureTransfers,\n      hiddenCaptures,\n    };\n  }\n\n  const aGDelim = '(?>';\n  const emulatedAGDelim = '(?:(?=(';\n  const captureNumMap = [0];\n  const addedHiddenCaptures = [];\n  let numCapturesBeforeAG = 0;\n  let numAGs = 0;\n  let aGPos = NaN;\n  let hasProcessedAG;\n  do {\n    hasProcessedAG = false;\n    let numCharClassesOpen = 0;\n    let numGroupsOpenInAG = 0;\n    let inAG = false;\n    let match;\n    atomicPluginToken.lastIndex = Number.isNaN(aGPos) ? 0 : aGPos + emulatedAGDelim.length;\n    while (match = atomicPluginToken.exec(expression)) {\n      const {0: m, index, groups: {capturingStart, noncapturingStart}} = match;\n      if (m === '[') {\n        numCharClassesOpen++;\n      } else if (!numCharClassesOpen) {\n\n        if (m === aGDelim && !inAG) {\n          aGPos = index;\n          inAG = true;\n        } else if (inAG && noncapturingStart) {\n          numGroupsOpenInAG++;\n        } else if (capturingStart) {\n          if (inAG) {\n            numGroupsOpenInAG++;\n          } else {\n            numCapturesBeforeAG++;\n            captureNumMap.push(numCapturesBeforeAG + numAGs);\n          }\n        } else if (m === ')' && inAG) {\n          if (!numGroupsOpenInAG) {\n            numAGs++;\n            const addedCaptureNum = numCapturesBeforeAG + numAGs;\n            // Replace `expression` and use `<$$N>` as a temporary wrapper for the backref so it\n            // can avoid backref renumbering afterward. Wrap the whole substitution (including the\n            // lookahead and following backref) in a noncapturing group to handle following\n            // quantifiers and literal digits\n            expression = `${expression.slice(0, aGPos)}${emulatedAGDelim}${\n                expression.slice(aGPos + aGDelim.length, index)\n              }))<$$${addedCaptureNum}>)${expression.slice(index + 1)}`;\n            hasProcessedAG = true;\n            addedHiddenCaptures.push(addedCaptureNum);\n            incrementIfAtLeast(hiddenCaptures, addedCaptureNum);\n            if (captureTransfers.size) {\n              const newCaptureTransfers = new Map();\n              captureTransfers.forEach((from, to) => {\n                newCaptureTransfers.set(\n                  to >= addedCaptureNum ? to + 1 : to,\n                  from.map(f => f >= addedCaptureNum ? f + 1 : f)\n                );\n              });\n              captureTransfers = newCaptureTransfers;\n            }\n            break;\n          }\n          numGroupsOpenInAG--;\n        }\n\n      } else if (m === ']') {\n        numCharClassesOpen--;\n      }\n    }\n  // Start over from the beginning of the atomic group's contents, in case the processed group\n  // contains additional atomic groups\n  } while (hasProcessedAG);\n\n  hiddenCaptures.push(...addedHiddenCaptures);\n\n  // Second pass to adjust numbered backrefs\n  expression = replaceUnescaped(\n    expression,\n    String.raw`\\\\(?<backrefNum>[1-9]\\d*)|<\\$\\$(?<wrappedBackrefNum>\\d+)>`,\n    ({0: m, groups: {backrefNum, wrappedBackrefNum}}) => {\n      if (backrefNum) {\n        const bNum = +backrefNum;\n        if (bNum > captureNumMap.length - 1) {\n          throw new Error(`Backref \"${m}\" greater than number of captures`);\n        }\n        return `\\\\${captureNumMap[bNum]}`;\n      }\n      return `\\\\${wrappedBackrefNum}`;\n    },\n    Context.DEFAULT\n  );\n\n  return {\n    pattern: expression,\n    captureTransfers,\n    hiddenCaptures,\n  };\n}\n\nconst baseQuantifier = String.raw`(?:[?*+]|\\{\\d+(?:,\\d*)?\\})`;\n// Complete tokenizer for base syntax; doesn't (need to) know about character-class-only syntax\nconst possessivePluginToken = new RegExp(String.raw`\n\\\\(?: \\d+\n  | c[A-Za-z]\n  | [gk]<[^>]+>\n  | [pPu]\\{[^\\}]+\\}\n  | u[A-Fa-f\\d]{4}\n  | x[A-Fa-f\\d]{2}\n  )\n| \\((?: \\? (?: [:=!>]\n  | <(?:[=!]|[^>]+>)\n  | [A-Za-z\\-]+:\n  | \\(DEFINE\\)\n  ))?\n| (?<qBase>${baseQuantifier})(?<qMod>[?+]?)(?<invalidQ>[?*+\\{]?)\n| \\\\?.\n`.replace(/\\s+/g, ''), 'gsu');\n\n/**\nTransform posessive quantifiers into atomic groups. The posessessive quantifiers are:\n`?+`, `*+`, `++`, `{N}+`, `{N,}+`, `{N,N}+`.\nThis follows Java, PCRE, Perl, and Python.\nPossessive quantifiers in Oniguruma and Onigmo are only: `?+`, `*+`, `++`.\n@param {string} expression\n@returns {import('./regex.js').PluginResult}\n*/\nfunction possessive(expression) {\n  if (!(new RegExp(`${baseQuantifier}\\\\+`).test(expression))) {\n    return {\n      pattern: expression,\n    };\n  }\n\n  const openGroupIndices = [];\n  let lastGroupIndex = null;\n  let lastCharClassIndex = null;\n  let lastToken = '';\n  let numCharClassesOpen = 0;\n  let match;\n  possessivePluginToken.lastIndex = 0;\n  while (match = possessivePluginToken.exec(expression)) {\n    const {0: m, index, groups: {qBase, qMod, invalidQ}} = match;\n    if (m === '[') {\n      if (!numCharClassesOpen) {\n        lastCharClassIndex = index;\n      }\n      numCharClassesOpen++;\n    } else if (m === ']') {\n      if (numCharClassesOpen) {\n        numCharClassesOpen--;\n      // Unmatched `]`\n      } else {\n        lastCharClassIndex = null;\n      }\n    } else if (!numCharClassesOpen) {\n\n      if (qMod === '+' && lastToken && !lastToken.startsWith('(')) {\n        // Invalid following quantifier would become valid via the wrapping group\n        if (invalidQ) {\n          throw new Error(`Invalid quantifier \"${m}\"`);\n        }\n        let charsAdded = -1; // -1 for removed trailing `+`\n        // Possessivizing fixed repetition quantifiers like `{2}` does't change their behavior, so\n        // avoid doing so (convert them to greedy)\n        if (/^\\{\\d+\\}$/.test(qBase)) {\n          expression = spliceStr(expression, index + qBase.length, qMod, '');\n        } else {\n          if (lastToken === ')' || lastToken === ']') {\n            const nodeIndex = lastToken === ')' ? lastGroupIndex : lastCharClassIndex;\n            // Unmatched `)` would break out of the wrapping group and mess with handling.\n            // Unmatched `]` wouldn't be a problem, but it's unnecessary to have dedicated support\n            // for unescaped `]++` since this won't work with flag u or v anyway\n            if (nodeIndex === null) {\n              throw new Error(`Invalid unmatched \"${lastToken}\"`);\n            }\n            expression = `${expression.slice(0, nodeIndex)}(?>${expression.slice(nodeIndex, index)}${qBase})${expression.slice(index + m.length)}`;\n          } else {\n            expression = `${expression.slice(0, index - lastToken.length)}(?>${lastToken}${qBase})${expression.slice(index + m.length)}`;\n          }\n          charsAdded += 4; // `(?>)`\n        }\n        possessivePluginToken.lastIndex += charsAdded;\n      } else if (m[0] === '(') {\n        openGroupIndices.push(index);\n      } else if (m === ')') {\n        lastGroupIndex = openGroupIndices.length ? openGroupIndices.pop() : null;\n      }\n\n    }\n    lastToken = m;\n  }\n\n  return {\n    pattern: expression,\n  };\n}\n\nexport {\n  atomic,\n  possessive,\n};\n","import {Context, forEachUnescaped, getGroupContents, hasUnescaped, replaceUnescaped} from 'regex-utilities';\n\nconst r = String.raw;\nconst gRToken = r`\\\\g<(?<gRNameOrNum>[^>&]+)&R=(?<gRDepth>[^>]+)>`;\nconst recursiveToken = r`\\(\\?R=(?<rDepth>[^\\)]+)\\)|${gRToken}`;\nconst namedCaptureDelim = r`\\(\\?<(?![=!])(?<captureName>[^>]+)>`;\nconst captureDelim = r`${namedCaptureDelim}|(?<unnamed>\\()(?!\\?)`;\nconst token = new RegExp(r`${namedCaptureDelim}|${recursiveToken}|\\(\\?|\\\\?.`, 'gsu');\nconst overlappingRecursionMsg = 'Cannot use multiple overlapping recursions';\n\n/**\n@param {string} pattern\n@param {{\n  flags?: string;\n  captureTransfers?: Map<number, Array<number>>;\n  hiddenCaptures?: Array<number>;\n  mode?: 'plugin' | 'external';\n}} [data]\n@returns {{\n  pattern: string;\n  captureTransfers: Map<number, Array<number>>;\n  hiddenCaptures: Array<number>;\n}}\n*/\nfunction recursion(pattern, data) {\n  const {hiddenCaptures, mode} = {\n    hiddenCaptures: [],\n    mode: 'plugin',\n    ...data,\n  };\n  // Capture transfer is used by <github.com/slevithan/oniguruma-to-es>\n  let captureTransfers = data?.captureTransfers ?? new Map();\n  // Keep the initial fail-check (which avoids unneeded processing) as fast as possible by testing\n  // without the accuracy improvement of using `hasUnescaped` with `Context.DEFAULT`\n  if (!(new RegExp(recursiveToken, 'su').test(pattern))) {\n    return {\n      pattern,\n      captureTransfers,\n      hiddenCaptures,\n    };\n  }\n  if (mode === 'plugin' && hasUnescaped(pattern, r`\\(\\?\\(DEFINE\\)`, Context.DEFAULT)) {\n    throw new Error('DEFINE groups cannot be used with recursion');\n  }\n\n  const addedHiddenCaptures = [];\n  const hasNumberedBackref = hasUnescaped(pattern, r`\\\\[1-9]`, Context.DEFAULT);\n  const groupContentsStartPos = new Map();\n  const openGroups = [];\n  let hasRecursed = false;\n  let numCharClassesOpen = 0;\n  let numCapturesPassed = 0;\n  let match;\n  token.lastIndex = 0;\n  while ((match = token.exec(pattern))) {\n    const {0: m, groups: {captureName, rDepth, gRNameOrNum, gRDepth}} = match;\n    if (m === '[') {\n      numCharClassesOpen++;\n    } else if (!numCharClassesOpen) {\n\n      // `(?R=N)`\n      if (rDepth) {\n        assertMaxInBounds(rDepth);\n        if (hasRecursed) {\n          throw new Error(overlappingRecursionMsg);\n        }\n        if (hasNumberedBackref) {\n          // Could add support for numbered backrefs with extra effort, but it's probably not worth\n          // it. To trigger this error, the regex must include recursion and one of the following:\n          // - An interpolated regex that contains a numbered backref (since other numbered\n          //   backrefs are prevented by implicit flag n).\n          // - A numbered backref, when flag n is explicitly disabled.\n          // Note that Regex+'s extended syntax (atomic groups and sometimes subroutines) can also\n          // add numbered backrefs, but those work fine because external plugins like this one run\n          // *before* the transformation of built-in syntax extensions\n          throw new Error(\n            // When used in `external` mode by transpilers other than Regex+, backrefs might have\n            // gone through conversion from named to numbered, so avoid a misleading error\n            `${mode === 'external' ? 'Backrefs' : 'Numbered backrefs'} cannot be used with global recursion`\n          );\n        }\n        const left = pattern.slice(0, match.index);\n        const right = pattern.slice(token.lastIndex);\n        if (hasUnescaped(right, recursiveToken, Context.DEFAULT)) {\n          throw new Error(overlappingRecursionMsg);\n        }\n        const reps = +rDepth - 1;\n        pattern = makeRecursive(\n          left,\n          right,\n          reps,\n          false,\n          hiddenCaptures,\n          addedHiddenCaptures,\n          numCapturesPassed\n        );\n        captureTransfers = mapCaptureTransfers(\n          captureTransfers,\n          left,\n          reps,\n          addedHiddenCaptures.length,\n          0,\n          numCapturesPassed\n        );\n        // No need to parse further\n        break;\n      // `\\g<name&R=N>`, `\\g<number&R=N>`\n      } else if (gRNameOrNum) {\n        assertMaxInBounds(gRDepth);\n        let isWithinReffedGroup = false;\n        for (const g of openGroups) {\n          if (g.name === gRNameOrNum || g.num === +gRNameOrNum) {\n            isWithinReffedGroup = true;\n            if (g.hasRecursedWithin) {\n              throw new Error(overlappingRecursionMsg);\n            }\n            break;\n          }\n        }\n        if (!isWithinReffedGroup) {\n          throw new Error(r`Recursive \\g cannot be used outside the referenced group \"${\n            mode === 'external' ? gRNameOrNum : r`\\g<${gRNameOrNum}&R=${gRDepth}>`\n          }\"`);\n        }\n        const startPos = groupContentsStartPos.get(gRNameOrNum);\n        const groupContents = getGroupContents(pattern, startPos);\n        if (\n          hasNumberedBackref &&\n          hasUnescaped(groupContents, r`${namedCaptureDelim}|\\((?!\\?)`, Context.DEFAULT)\n        ) {\n          throw new Error(\n            // When used in `external` mode by transpilers other than Regex+, backrefs might have\n            // gone through conversion from named to numbered, so avoid a misleading error\n            `${mode === 'external' ? 'Backrefs' : 'Numbered backrefs'} cannot be used with recursion of capturing groups`\n          );\n        }\n        const groupContentsLeft = pattern.slice(startPos, match.index);\n        const groupContentsRight = groupContents.slice(groupContentsLeft.length + m.length);\n        const numAddedHiddenCapturesPreExpansion = addedHiddenCaptures.length;\n        const reps = +gRDepth - 1;\n        const expansion = makeRecursive(\n          groupContentsLeft,\n          groupContentsRight,\n          reps,\n          true,\n          hiddenCaptures,\n          addedHiddenCaptures,\n          numCapturesPassed\n        );\n        captureTransfers = mapCaptureTransfers(\n          captureTransfers,\n          groupContentsLeft,\n          reps,\n          addedHiddenCaptures.length - numAddedHiddenCapturesPreExpansion,\n          numAddedHiddenCapturesPreExpansion,\n          numCapturesPassed\n        );\n        const pre = pattern.slice(0, startPos);\n        const post = pattern.slice(startPos + groupContents.length);\n        // Modify the string we're looping over\n        pattern = `${pre}${expansion}${post}`;\n        // Step forward for the next loop iteration\n        token.lastIndex += expansion.length - m.length - groupContentsLeft.length - groupContentsRight.length;\n        openGroups.forEach(g => g.hasRecursedWithin = true);\n        hasRecursed = true;\n      } else if (captureName) {\n        numCapturesPassed++;\n        groupContentsStartPos.set(String(numCapturesPassed), token.lastIndex);\n        groupContentsStartPos.set(captureName, token.lastIndex);\n        openGroups.push({\n          num: numCapturesPassed,\n          name: captureName,\n        });\n      } else if (m[0] === '(') {\n        const isUnnamedCapture = m === '(';\n        if (isUnnamedCapture) {\n          numCapturesPassed++;\n          groupContentsStartPos.set(String(numCapturesPassed), token.lastIndex);\n        }\n        openGroups.push(isUnnamedCapture ? {num: numCapturesPassed} : {});\n      } else if (m === ')') {\n        openGroups.pop();\n      }\n\n    } else if (m === ']') {\n      numCharClassesOpen--;\n    }\n  }\n\n  hiddenCaptures.push(...addedHiddenCaptures);\n\n  return {\n    pattern,\n    captureTransfers,\n    hiddenCaptures,\n  };\n}\n\n/**\n@param {string} max\n*/\nfunction assertMaxInBounds(max) {\n  const errMsg = `Max depth must be integer between 2 and 100; used ${max}`;\n  if (!/^[1-9]\\d*$/.test(max)) {\n    throw new Error(errMsg);\n  }\n  max = +max;\n  if (max < 2 || max > 100) {\n    throw new Error(errMsg);\n  }\n}\n\n/**\n@param {string} left\n@param {string} right\n@param {number} reps\n@param {boolean} isSubpattern\n@param {Array<number>} hiddenCaptures\n@param {Array<number>} addedHiddenCaptures\n@param {number} numCapturesPassed\n@returns {string}\n*/\nfunction makeRecursive(\n  left,\n  right,\n  reps,\n  isSubpattern,\n  hiddenCaptures,\n  addedHiddenCaptures,\n  numCapturesPassed\n) {\n  const namesInRecursed = new Set();\n  // Can skip this work if not needed\n  if (isSubpattern) {\n    forEachUnescaped(left + right, namedCaptureDelim, ({groups: {captureName}}) => {\n      namesInRecursed.add(captureName);\n    }, Context.DEFAULT);\n  }\n  const rest = [\n    reps,\n    isSubpattern ? namesInRecursed : null,\n    hiddenCaptures,\n    addedHiddenCaptures,\n    numCapturesPassed,\n  ];\n  // Depth 2: 'left(?:left(?:)right)right'\n  // Depth 3: 'left(?:left(?:left(?:)right)right)right'\n  // Empty group in the middle separates tokens and absorbs a following quantifier if present\n  return `${left}${\n    repeatWithDepth(`(?:${left}`, 'forward', ...rest)\n  }(?:)${\n    repeatWithDepth(`${right})`, 'backward', ...rest)\n  }${right}`;\n}\n\n/**\n@param {string} pattern\n@param {'forward' | 'backward'} direction\n@param {number} reps\n@param {Set<string> | null} namesInRecursed\n@param {Array<number>} hiddenCaptures\n@param {Array<number>} addedHiddenCaptures\n@param {number} numCapturesPassed\n@returns {string}\n*/\nfunction repeatWithDepth(\n  pattern,\n  direction,\n  reps,\n  namesInRecursed,\n  hiddenCaptures,\n  addedHiddenCaptures,\n  numCapturesPassed\n) {\n  const startNum = 2;\n  const getDepthNum = i => direction === 'forward' ? (i + startNum) : (reps - i + startNum - 1);\n  let result = '';\n  for (let i = 0; i < reps; i++) {\n    const depthNum = getDepthNum(i);\n    result += replaceUnescaped(\n      pattern,\n      r`${captureDelim}|\\\\k<(?<backref>[^>]+)>`,\n      ({0: m, groups: {captureName, unnamed, backref}}) => {\n        if (backref && namesInRecursed && !namesInRecursed.has(backref)) {\n          // Don't alter backrefs to groups outside the recursed subpattern\n          return m;\n        }\n        const suffix = `_$${depthNum}`;\n        if (unnamed || captureName) {\n          const addedCaptureNum = numCapturesPassed + addedHiddenCaptures.length + 1;\n          addedHiddenCaptures.push(addedCaptureNum);\n          incrementIfAtLeast(hiddenCaptures, addedCaptureNum);\n          return unnamed ? m : `(?<${captureName}${suffix}>`;\n        }\n        return r`\\k<${backref}${suffix}>`;\n      },\n      Context.DEFAULT\n    );\n  }\n  return result;\n}\n\n/**\nUpdates the array in place by incrementing each value greater than or equal to the threshold.\n@param {Array<number>} arr\n@param {number} threshold\n*/\nfunction incrementIfAtLeast(arr, threshold) {\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] >= threshold) {\n      arr[i]++;\n    }\n  }\n}\n\n/**\n@param {Map<number, Array<number>>} captureTransfers\n@param {string} left\n@param {number} reps\n@param {number} numCapturesAddedInExpansion\n@param {number} numAddedHiddenCapturesPreExpansion\n@param {number} numCapturesPassed\n@returns {Map<number, Array<number>>}\n*/\nfunction mapCaptureTransfers(captureTransfers, left, reps, numCapturesAddedInExpansion, numAddedHiddenCapturesPreExpansion, numCapturesPassed) {\n  if (captureTransfers.size && numCapturesAddedInExpansion) {\n    let numCapturesInLeft = 0;\n    forEachUnescaped(left, captureDelim, () => numCapturesInLeft++, Context.DEFAULT);\n    // Is 0 for global recursion\n    const recursionDelimCaptureNum = numCapturesPassed - numCapturesInLeft + numAddedHiddenCapturesPreExpansion;\n    const newCaptureTransfers = new Map();\n    captureTransfers.forEach((from, to) => {\n      const numCapturesInRight = (numCapturesAddedInExpansion - (numCapturesInLeft * reps)) / reps;\n      const numCapturesAddedInLeft = numCapturesInLeft * reps;\n      const newTo = to > (recursionDelimCaptureNum + numCapturesInLeft) ? to + numCapturesAddedInExpansion : to;\n      const newFrom = [];\n      for (const f of from) {\n        // Before the recursed subpattern\n        if (f <= recursionDelimCaptureNum) {\n          newFrom.push(f);\n        // After the recursed subpattern\n        } else if (f > (recursionDelimCaptureNum + numCapturesInLeft + numCapturesInRight)) {\n          newFrom.push(f + numCapturesAddedInExpansion);\n        // Within the recursed subpattern, on the left of the recursion token\n        } else if (f <= (recursionDelimCaptureNum + numCapturesInLeft)) {\n          for (let i = 0; i <= reps; i++) {\n            newFrom.push(f + (numCapturesInLeft * i));\n          }\n        // Within the recursed subpattern, on the right of the recursion token\n        } else {\n          for (let i = 0; i <= reps; i++) {\n            newFrom.push(f + numCapturesAddedInLeft + (numCapturesInRight * i));\n          }\n        }\n      }\n      newCaptureTransfers.set(newTo, newFrom);\n    });\n    return newCaptureTransfers;\n  }\n  return captureTransfers;\n}\n\nexport {\n  recursion,\n};\n","// src/utils.js\nvar cp = String.fromCodePoint;\nvar r = String.raw;\nvar envFlags = {\n  flagGroups: (() => {\n    try {\n      new RegExp(\"(?i:)\");\n    } catch {\n      return false;\n    }\n    return true;\n  })(),\n  unicodeSets: (() => {\n    try {\n      new RegExp(\"\", \"v\");\n    } catch {\n      return false;\n    }\n    return true;\n  })()\n};\nenvFlags.bugFlagVLiteralHyphenIsRange = envFlags.unicodeSets ? (() => {\n  try {\n    new RegExp(r`[\\d\\-a]`, \"v\");\n  } catch {\n    return true;\n  }\n  return false;\n})() : false;\nenvFlags.bugNestedClassIgnoresNegation = envFlags.unicodeSets && new RegExp(\"[[^a]]\", \"v\").test(\"a\");\nfunction getNewCurrentFlags(current, { enable, disable }) {\n  return {\n    dotAll: !disable?.dotAll && !!(enable?.dotAll || current.dotAll),\n    ignoreCase: !disable?.ignoreCase && !!(enable?.ignoreCase || current.ignoreCase)\n  };\n}\nfunction getOrInsert(map, key, defaultValue) {\n  if (!map.has(key)) {\n    map.set(key, defaultValue);\n  }\n  return map.get(key);\n}\nfunction isMinTarget(target, min) {\n  return EsVersion[target] >= EsVersion[min];\n}\nfunction throwIfNullish(value, msg) {\n  if (value == null) {\n    throw new Error(msg ?? \"Value expected\");\n  }\n  return value;\n}\n\n// src/options.js\nvar EsVersion = {\n  ES2025: 2025,\n  ES2024: 2024,\n  ES2018: 2018\n};\nvar Target = (\n  /** @type {const} */\n  {\n    auto: \"auto\",\n    ES2025: \"ES2025\",\n    ES2024: \"ES2024\",\n    ES2018: \"ES2018\"\n  }\n);\nfunction getOptions(options = {}) {\n  if ({}.toString.call(options) !== \"[object Object]\") {\n    throw new Error(\"Unexpected options\");\n  }\n  if (options.target !== void 0 && !Target[options.target]) {\n    throw new Error(`Unexpected target \"${options.target}\"`);\n  }\n  const opts = {\n    // Sets the level of emulation rigor/strictness.\n    accuracy: \"default\",\n    // Disables advanced emulation that relies on returning a `RegExp` subclass, resulting in\n    // certain patterns not being emulatable.\n    avoidSubclass: false,\n    // Oniguruma flags; a string with `i`, `m`, `x`, `D`, `S`, `W`, `y{g}` in any order (all\n    // optional). Oniguruma's `m` is equivalent to JavaScript's `s` (`dotAll`).\n    flags: \"\",\n    // Include JavaScript flag `g` (`global`) in the result.\n    global: false,\n    // Include JavaScript flag `d` (`hasIndices`) in the result.\n    hasIndices: false,\n    // Delay regex construction until first use if the transpiled pattern is at least this length.\n    lazyCompileLength: Infinity,\n    // JavaScript version used for generated regexes. Using `auto` detects the best value based on\n    // your environment. Later targets allow faster processing, simpler generated source, and\n    // support for additional features.\n    target: \"auto\",\n    // Disables minifications that simplify the pattern without changing the meaning.\n    verbose: false,\n    ...options,\n    // Advanced options that override standard behavior, error checking, and flags when enabled.\n    rules: {\n      // Useful with TextMate grammars that merge backreferences across patterns.\n      allowOrphanBackrefs: false,\n      // Use ASCII `\\b` and `\\B`, which increases search performance of generated regexes.\n      asciiWordBoundaries: false,\n      // Allow unnamed captures and numbered calls (backreferences and subroutines) when using\n      // named capture. This is Oniguruma option `ONIG_OPTION_CAPTURE_GROUP`; on by default in\n      // `vscode-oniguruma`.\n      captureGroup: false,\n      // Change the recursion depth limit from Oniguruma's `20` to an integer `2`–`20`.\n      recursionLimit: 20,\n      // `^` as `\\A`; `$` as`\\Z`. Improves search performance of generated regexes without changing\n      // the meaning if searching line by line. This is Oniguruma option `ONIG_OPTION_SINGLELINE`.\n      singleline: false,\n      ...options.rules\n    }\n  };\n  if (opts.target === \"auto\") {\n    opts.target = envFlags.flagGroups ? \"ES2025\" : envFlags.unicodeSets ? \"ES2024\" : \"ES2018\";\n  }\n  return opts;\n}\n\n// src/unicode.js\nimport { slug } from \"oniguruma-parser/parser\";\nvar asciiSpaceChar = \"[\t-\\r ]\";\nvar CharsWithoutIgnoreCaseExpansion = /* @__PURE__ */ new Set([\n  cp(304),\n  // İ\n  cp(305)\n  // ı\n]);\nvar defaultWordChar = r`[\\p{L}\\p{M}\\p{N}\\p{Pc}]`;\nfunction getIgnoreCaseMatchChars(char) {\n  if (CharsWithoutIgnoreCaseExpansion.has(char)) {\n    return [char];\n  }\n  const set = /* @__PURE__ */ new Set();\n  const lower = char.toLowerCase();\n  const upper = lower.toUpperCase();\n  const title = LowerToTitleCaseMap.get(lower);\n  const altLower = LowerToAlternativeLowerCaseMap.get(lower);\n  const altUpper = LowerToAlternativeUpperCaseMap.get(lower);\n  if ([...upper].length === 1) {\n    set.add(upper);\n  }\n  altUpper && set.add(altUpper);\n  title && set.add(title);\n  set.add(lower);\n  altLower && set.add(altLower);\n  return [...set];\n}\nvar JsUnicodePropertyMap = /* @__PURE__ */ new Map(\n  `C Other\nCc Control cntrl\nCf Format\nCn Unassigned\nCo Private_Use\nCs Surrogate\nL Letter\nLC Cased_Letter\nLl Lowercase_Letter\nLm Modifier_Letter\nLo Other_Letter\nLt Titlecase_Letter\nLu Uppercase_Letter\nM Mark Combining_Mark\nMc Spacing_Mark\nMe Enclosing_Mark\nMn Nonspacing_Mark\nN Number\nNd Decimal_Number digit\nNl Letter_Number\nNo Other_Number\nP Punctuation punct\nPc Connector_Punctuation\nPd Dash_Punctuation\nPe Close_Punctuation\nPf Final_Punctuation\nPi Initial_Punctuation\nPo Other_Punctuation\nPs Open_Punctuation\nS Symbol\nSc Currency_Symbol\nSk Modifier_Symbol\nSm Math_Symbol\nSo Other_Symbol\nZ Separator\nZl Line_Separator\nZp Paragraph_Separator\nZs Space_Separator\nASCII\nASCII_Hex_Digit AHex\nAlphabetic Alpha\nAny\nAssigned\nBidi_Control Bidi_C\nBidi_Mirrored Bidi_M\nCase_Ignorable CI\nCased\nChanges_When_Casefolded CWCF\nChanges_When_Casemapped CWCM\nChanges_When_Lowercased CWL\nChanges_When_NFKC_Casefolded CWKCF\nChanges_When_Titlecased CWT\nChanges_When_Uppercased CWU\nDash\nDefault_Ignorable_Code_Point DI\nDeprecated Dep\nDiacritic Dia\nEmoji\nEmoji_Component EComp\nEmoji_Modifier EMod\nEmoji_Modifier_Base EBase\nEmoji_Presentation EPres\nExtended_Pictographic ExtPict\nExtender Ext\nGrapheme_Base Gr_Base\nGrapheme_Extend Gr_Ext\nHex_Digit Hex\nIDS_Binary_Operator IDSB\nIDS_Trinary_Operator IDST\nID_Continue IDC\nID_Start IDS\nIdeographic Ideo\nJoin_Control Join_C\nLogical_Order_Exception LOE\nLowercase Lower\nMath\nNoncharacter_Code_Point NChar\nPattern_Syntax Pat_Syn\nPattern_White_Space Pat_WS\nQuotation_Mark QMark\nRadical\nRegional_Indicator RI\nSentence_Terminal STerm\nSoft_Dotted SD\nTerminal_Punctuation Term\nUnified_Ideograph UIdeo\nUppercase Upper\nVariation_Selector VS\nWhite_Space space\nXID_Continue XIDC\nXID_Start XIDS`.split(/\\s/).map((p) => [slug(p), p])\n);\nvar LowerToAlternativeLowerCaseMap = /* @__PURE__ */ new Map([\n  [\"s\", cp(383)],\n  // s, ſ\n  [cp(383), \"s\"]\n  // ſ, s\n]);\nvar LowerToAlternativeUpperCaseMap = /* @__PURE__ */ new Map([\n  [cp(223), cp(7838)],\n  // ß, ẞ\n  [cp(107), cp(8490)],\n  // k, K (Kelvin)\n  [cp(229), cp(8491)],\n  // å, Å (Angstrom)\n  [cp(969), cp(8486)]\n  // ω, Ω (Ohm)\n]);\nvar LowerToTitleCaseMap = new Map([\n  titleEntry(453),\n  titleEntry(456),\n  titleEntry(459),\n  titleEntry(498),\n  ...titleRange(8072, 8079),\n  ...titleRange(8088, 8095),\n  ...titleRange(8104, 8111),\n  titleEntry(8124),\n  titleEntry(8140),\n  titleEntry(8188)\n]);\nvar PosixClassMap = /* @__PURE__ */ new Map([\n  [\"alnum\", r`[\\p{Alpha}\\p{Nd}]`],\n  [\"alpha\", r`\\p{Alpha}`],\n  [\"ascii\", r`\\p{ASCII}`],\n  [\"blank\", r`[\\p{Zs}\\t]`],\n  [\"cntrl\", r`\\p{Cc}`],\n  [\"digit\", r`\\p{Nd}`],\n  [\"graph\", r`[\\P{space}&&\\P{Cc}&&\\P{Cn}&&\\P{Cs}]`],\n  [\"lower\", r`\\p{Lower}`],\n  [\"print\", r`[[\\P{space}&&\\P{Cc}&&\\P{Cn}&&\\P{Cs}]\\p{Zs}]`],\n  [\"punct\", r`[\\p{P}\\p{S}]`],\n  // Updated value from Onig 6.9.9; changed from Unicode `\\p{punct}`\n  [\"space\", r`\\p{space}`],\n  [\"upper\", r`\\p{Upper}`],\n  [\"word\", r`[\\p{Alpha}\\p{M}\\p{Nd}\\p{Pc}]`],\n  [\"xdigit\", r`\\p{AHex}`]\n]);\nfunction range(start, end) {\n  const range2 = [];\n  for (let i = start; i <= end; i++) {\n    range2.push(i);\n  }\n  return range2;\n}\nfunction titleEntry(codePoint) {\n  const char = cp(codePoint);\n  return [char.toLowerCase(), char];\n}\nfunction titleRange(start, end) {\n  return range(start, end).map((codePoint) => titleEntry(codePoint));\n}\nvar UnicodePropertiesWithSpecificCase = /* @__PURE__ */ new Set([\n  \"Lower\",\n  \"Lowercase\",\n  \"Upper\",\n  \"Uppercase\",\n  \"Ll\",\n  \"Lowercase_Letter\",\n  \"Lt\",\n  \"Titlecase_Letter\",\n  \"Lu\",\n  \"Uppercase_Letter\"\n  // The `Changes_When_*` properties (and their aliases) could be included, but they're very rare.\n  // Some other properties include a handful of chars with specific cases only, but these chars are\n  // generally extreme edge cases and using such properties case insensitively generally produces\n  // undesired behavior anyway\n]);\n\n// src/transform.js\nimport { createAlternative, createAssertion, createBackreference, createCapturingGroup, createCharacter, createCharacterClass, createCharacterSet, createGroup, createLookaroundAssertion, createQuantifier, createSubroutine, createUnicodeProperty, hasOnlyChild, parse, slug as slug2 } from \"oniguruma-parser/parser\";\nimport { traverse } from \"oniguruma-parser/traverser\";\nfunction transform(ast, options) {\n  const opts = {\n    // A couple edge cases exist where options `accuracy` and `bestEffortTarget` are used:\n    // - `CharacterSet` kind `text_segment` (`\\X`): An exact representation would require heavy\n    //   Unicode data; a best-effort approximation requires knowing the target.\n    // - `CharacterSet` kind `posix` with values `graph` and `print`: Their complex Unicode\n    //   representations would be hard to change to ASCII versions after the fact in the generator\n    //   based on `target`/`accuracy`, so produce the appropriate structure here.\n    accuracy: \"default\",\n    asciiWordBoundaries: false,\n    avoidSubclass: false,\n    bestEffortTarget: \"ES2025\",\n    ...options\n  };\n  addParentProperties(ast);\n  const firstPassState = {\n    accuracy: opts.accuracy,\n    asciiWordBoundaries: opts.asciiWordBoundaries,\n    avoidSubclass: opts.avoidSubclass,\n    flagDirectivesByAlt: /* @__PURE__ */ new Map(),\n    jsGroupNameMap: /* @__PURE__ */ new Map(),\n    minTargetEs2024: isMinTarget(opts.bestEffortTarget, \"ES2024\"),\n    passedLookbehind: false,\n    strategy: null,\n    // Subroutines can appear before the groups they ref, so collect reffed nodes for a second pass \n    subroutineRefMap: /* @__PURE__ */ new Map(),\n    supportedGNodes: /* @__PURE__ */ new Set(),\n    digitIsAscii: ast.flags.digitIsAscii,\n    spaceIsAscii: ast.flags.spaceIsAscii,\n    wordIsAscii: ast.flags.wordIsAscii\n  };\n  traverse(ast, FirstPassVisitor, firstPassState);\n  const globalFlags = {\n    dotAll: ast.flags.dotAll,\n    ignoreCase: ast.flags.ignoreCase\n  };\n  const secondPassState = {\n    currentFlags: globalFlags,\n    prevFlags: null,\n    globalFlags,\n    groupOriginByCopy: /* @__PURE__ */ new Map(),\n    groupsByName: /* @__PURE__ */ new Map(),\n    multiplexCapturesToLeftByRef: /* @__PURE__ */ new Map(),\n    openRefs: /* @__PURE__ */ new Map(),\n    reffedNodesByReferencer: /* @__PURE__ */ new Map(),\n    subroutineRefMap: firstPassState.subroutineRefMap\n  };\n  traverse(ast, SecondPassVisitor, secondPassState);\n  const thirdPassState = {\n    groupsByName: secondPassState.groupsByName,\n    highestOrphanBackref: 0,\n    numCapturesToLeft: 0,\n    reffedNodesByReferencer: secondPassState.reffedNodesByReferencer\n  };\n  traverse(ast, ThirdPassVisitor, thirdPassState);\n  ast._originMap = secondPassState.groupOriginByCopy;\n  ast._strategy = firstPassState.strategy;\n  return ast;\n}\nvar FirstPassVisitor = {\n  AbsenceFunction({ node, parent, replaceWith }) {\n    const { body, kind } = node;\n    if (kind === \"repeater\") {\n      const innerGroup = createGroup();\n      innerGroup.body[0].body.push(\n        // Insert own alts as `body`\n        createLookaroundAssertion({ negate: true, body }),\n        createUnicodeProperty(\"Any\")\n      );\n      const outerGroup = createGroup();\n      outerGroup.body[0].body.push(\n        createQuantifier(\"greedy\", 0, Infinity, innerGroup)\n      );\n      replaceWith(setParentDeep(outerGroup, parent), { traverse: true });\n    } else {\n      throw new Error(`Unsupported absence function \"(?~|\"`);\n    }\n  },\n  Alternative: {\n    enter({ node, parent, key }, { flagDirectivesByAlt }) {\n      const flagDirectives = node.body.filter((el) => el.kind === \"flags\");\n      for (let i = key + 1; i < parent.body.length; i++) {\n        const forwardSiblingAlt = parent.body[i];\n        getOrInsert(flagDirectivesByAlt, forwardSiblingAlt, []).push(...flagDirectives);\n      }\n    },\n    exit({ node }, { flagDirectivesByAlt }) {\n      if (flagDirectivesByAlt.get(node)?.length) {\n        const flags = getCombinedFlagModsFromFlagNodes(flagDirectivesByAlt.get(node));\n        if (flags) {\n          const flagGroup = createGroup({ flags });\n          flagGroup.body[0].body = node.body;\n          node.body = [setParentDeep(flagGroup, node)];\n        }\n      }\n    }\n  },\n  Assertion({ node, parent, key, container, root, remove, replaceWith }, state) {\n    const { kind, negate } = node;\n    const { asciiWordBoundaries, avoidSubclass, supportedGNodes, wordIsAscii } = state;\n    if (kind === \"text_segment_boundary\") {\n      throw new Error(`Unsupported text segment boundary \"\\\\${negate ? \"Y\" : \"y\"}\"`);\n    } else if (kind === \"line_end\") {\n      replaceWith(setParentDeep(createLookaroundAssertion({ body: [\n        createAlternative({ body: [createAssertion(\"string_end\")] }),\n        createAlternative({ body: [createCharacter(10)] })\n        // `\\n`\n      ] }), parent));\n    } else if (kind === \"line_start\") {\n      replaceWith(setParentDeep(parseFragment(r`(?<=\\A|\\n(?!\\z))`, { skipLookbehindValidation: true }), parent));\n    } else if (kind === \"search_start\") {\n      if (supportedGNodes.has(node)) {\n        root.flags.sticky = true;\n        remove();\n      } else {\n        const prev = container[key - 1];\n        if (prev && isAlwaysNonZeroLength(prev)) {\n          replaceWith(setParentDeep(createLookaroundAssertion({ negate: true }), parent));\n        } else if (avoidSubclass) {\n          throw new Error(r`Uses \"\\G\" in a way that requires a subclass`);\n        } else {\n          replaceWith(setParent(createAssertion(\"string_start\"), parent));\n          state.strategy = \"clip_search\";\n        }\n      }\n    } else if (kind === \"string_end\" || kind === \"string_start\") {\n    } else if (kind === \"string_end_newline\") {\n      replaceWith(setParentDeep(parseFragment(r`(?=\\n?\\z)`), parent));\n    } else if (kind === \"word_boundary\") {\n      if (!wordIsAscii && !asciiWordBoundaries) {\n        const b = `(?:(?<=${defaultWordChar})(?!${defaultWordChar})|(?<!${defaultWordChar})(?=${defaultWordChar}))`;\n        const B = `(?:(?<=${defaultWordChar})(?=${defaultWordChar})|(?<!${defaultWordChar})(?!${defaultWordChar}))`;\n        replaceWith(setParentDeep(parseFragment(negate ? B : b), parent));\n      }\n    } else {\n      throw new Error(`Unexpected assertion kind \"${kind}\"`);\n    }\n  },\n  Backreference({ node }, { jsGroupNameMap }) {\n    let { ref } = node;\n    if (typeof ref === \"string\" && !isValidJsGroupName(ref)) {\n      ref = getAndStoreJsGroupName(ref, jsGroupNameMap);\n      node.ref = ref;\n    }\n  },\n  CapturingGroup({ node }, { jsGroupNameMap, subroutineRefMap }) {\n    let { name } = node;\n    if (name && !isValidJsGroupName(name)) {\n      name = getAndStoreJsGroupName(name, jsGroupNameMap);\n      node.name = name;\n    }\n    subroutineRefMap.set(node.number, node);\n    if (name) {\n      subroutineRefMap.set(name, node);\n    }\n  },\n  CharacterClassRange({ node, parent, replaceWith }) {\n    if (parent.kind === \"intersection\") {\n      const cc = createCharacterClass({ body: [node] });\n      replaceWith(setParentDeep(cc, parent), { traverse: true });\n    }\n  },\n  CharacterSet({ node, parent, replaceWith }, { accuracy, minTargetEs2024, digitIsAscii, spaceIsAscii, wordIsAscii }) {\n    const { kind, negate, value } = node;\n    if (digitIsAscii && (kind === \"digit\" || value === \"digit\")) {\n      replaceWith(setParent(createCharacterSet(\"digit\", { negate }), parent));\n      return;\n    }\n    if (spaceIsAscii && (kind === \"space\" || value === \"space\")) {\n      replaceWith(setParentDeep(setNegate(parseFragment(asciiSpaceChar), negate), parent));\n      return;\n    }\n    if (wordIsAscii && (kind === \"word\" || value === \"word\")) {\n      replaceWith(setParent(createCharacterSet(\"word\", { negate }), parent));\n      return;\n    }\n    if (kind === \"any\") {\n      replaceWith(setParent(createUnicodeProperty(\"Any\"), parent));\n    } else if (kind === \"digit\") {\n      replaceWith(setParent(createUnicodeProperty(\"Nd\", { negate }), parent));\n    } else if (kind === \"dot\") {\n    } else if (kind === \"text_segment\") {\n      if (accuracy === \"strict\") {\n        throw new Error(r`Use of \"\\X\" requires non-strict accuracy`);\n      }\n      const eBase = \"\\\\p{Emoji}(?:\\\\p{EMod}|\\\\uFE0F\\\\u20E3?|[\\\\x{E0020}-\\\\x{E007E}]+\\\\x{E007F})?\";\n      const emoji = r`\\p{RI}{2}|${eBase}(?:\\u200D${eBase})*`;\n      replaceWith(setParentDeep(parseFragment(\n        // Close approximation of an extended grapheme cluster; see: <unicode.org/reports/tr29/>\n        r`(?>\\r\\n|${minTargetEs2024 ? r`\\p{RGI_Emoji}` : emoji}|\\P{M}\\p{M}*)`,\n        // Allow JS property `RGI_Emoji` through\n        { skipPropertyNameValidation: true }\n      ), parent));\n    } else if (kind === \"hex\") {\n      replaceWith(setParent(createUnicodeProperty(\"AHex\", { negate }), parent));\n    } else if (kind === \"newline\") {\n      replaceWith(setParentDeep(parseFragment(negate ? \"[^\\n]\" : \"(?>\\r\\n?|[\\n\\v\\f\\x85\\u2028\\u2029])\"), parent));\n    } else if (kind === \"posix\") {\n      if (!minTargetEs2024 && (value === \"graph\" || value === \"print\")) {\n        if (accuracy === \"strict\") {\n          throw new Error(`POSIX class \"${value}\" requires min target ES2024 or non-strict accuracy`);\n        }\n        let ascii = {\n          graph: \"!-~\",\n          print: \" -~\"\n        }[value];\n        if (negate) {\n          ascii = `\\0-${cp(ascii.codePointAt(0) - 1)}${cp(ascii.codePointAt(2) + 1)}-\\u{10FFFF}`;\n        }\n        replaceWith(setParentDeep(parseFragment(`[${ascii}]`), parent));\n      } else {\n        replaceWith(setParentDeep(setNegate(parseFragment(PosixClassMap.get(value)), negate), parent));\n      }\n    } else if (kind === \"property\") {\n      if (!JsUnicodePropertyMap.has(slug2(value))) {\n        node.key = \"sc\";\n      }\n    } else if (kind === \"space\") {\n      replaceWith(setParent(createUnicodeProperty(\"space\", { negate }), parent));\n    } else if (kind === \"word\") {\n      replaceWith(setParentDeep(setNegate(parseFragment(defaultWordChar), negate), parent));\n    } else {\n      throw new Error(`Unexpected character set kind \"${kind}\"`);\n    }\n  },\n  Directive({ node, parent, root, remove, replaceWith, removeAllPrevSiblings, removeAllNextSiblings }) {\n    const { kind, flags } = node;\n    if (kind === \"flags\") {\n      if (!flags.enable && !flags.disable) {\n        remove();\n      } else {\n        const flagGroup = createGroup({ flags });\n        flagGroup.body[0].body = removeAllNextSiblings();\n        replaceWith(setParentDeep(flagGroup, parent), { traverse: true });\n      }\n    } else if (kind === \"keep\") {\n      const firstAlt = root.body[0];\n      const hasWrapperGroup = root.body.length === 1 && // Not emulatable if within a `CapturingGroup`\n      hasOnlyChild(firstAlt, { type: \"Group\" }) && firstAlt.body[0].body.length === 1;\n      const topLevel = hasWrapperGroup ? firstAlt.body[0] : root;\n      if (parent.parent !== topLevel || topLevel.body.length > 1) {\n        throw new Error(r`Uses \"\\K\" in a way that's unsupported`);\n      }\n      const lookbehind = createLookaroundAssertion({ behind: true });\n      lookbehind.body[0].body = removeAllPrevSiblings();\n      replaceWith(setParentDeep(lookbehind, parent));\n    } else {\n      throw new Error(`Unexpected directive kind \"${kind}\"`);\n    }\n  },\n  Flags({ node, parent }) {\n    if (node.posixIsAscii) {\n      throw new Error('Unsupported flag \"P\"');\n    }\n    if (node.textSegmentMode === \"word\") {\n      throw new Error('Unsupported flag \"y{w}\"');\n    }\n    [\n      \"digitIsAscii\",\n      // Flag D\n      \"extended\",\n      // Flag x\n      \"posixIsAscii\",\n      // Flag P\n      \"spaceIsAscii\",\n      // Flag S\n      \"wordIsAscii\",\n      // Flag W\n      \"textSegmentMode\"\n      // Flag y{g} or y{w}\n    ].forEach((f) => delete node[f]);\n    Object.assign(node, {\n      // JS flag g; no Onig equiv\n      global: false,\n      // JS flag d; no Onig equiv\n      hasIndices: false,\n      // JS flag m; no Onig equiv but its behavior is always on in Onig. Onig's only line break\n      // char is line feed, unlike JS, so this flag isn't used since it would produce inaccurate\n      // results (also allows `^` and `$` to be used in the generator for string start and end)\n      multiline: false,\n      // JS flag y; no Onig equiv, but used for `\\G` emulation\n      sticky: node.sticky ?? false\n      // Note: Regex+ doesn't allow explicitly adding flags it handles implicitly, so leave out\n      // properties `unicode` (JS flag u) and `unicodeSets` (JS flag v). Keep the existing values\n      // for `ignoreCase` (flag i) and `dotAll` (JS flag s, but Onig flag m)\n    });\n    parent.options = {\n      disable: {\n        // Onig uses different rules for flag x than Regex+, so disable the implicit flag\n        x: true,\n        // Onig has no flag to control \"named capture only\" mode but contextually applies its\n        // behavior when named capturing is used, so disable Regex+'s implicit flag for it\n        n: true\n      },\n      force: {\n        // Always add flag v because we're generating an AST that relies on it (it enables JS\n        // support for Onig features nested classes, intersection, Unicode properties, etc.).\n        // However, the generator might disable flag v based on its `target` option\n        v: true\n      }\n    };\n  },\n  Group({ node }) {\n    if (!node.flags) {\n      return;\n    }\n    const { enable, disable } = node.flags;\n    enable?.extended && delete enable.extended;\n    disable?.extended && delete disable.extended;\n    enable?.dotAll && disable?.dotAll && delete enable.dotAll;\n    enable?.ignoreCase && disable?.ignoreCase && delete enable.ignoreCase;\n    enable && !Object.keys(enable).length && delete node.flags.enable;\n    disable && !Object.keys(disable).length && delete node.flags.disable;\n    !node.flags.enable && !node.flags.disable && delete node.flags;\n  },\n  LookaroundAssertion({ node }, state) {\n    const { kind } = node;\n    if (kind === \"lookbehind\") {\n      state.passedLookbehind = true;\n    }\n  },\n  NamedCallout({ node, parent, replaceWith }) {\n    const { kind } = node;\n    if (kind === \"fail\") {\n      replaceWith(setParentDeep(createLookaroundAssertion({ negate: true }), parent));\n    } else {\n      throw new Error(`Unsupported named callout \"(*${kind.toUpperCase()}\"`);\n    }\n  },\n  Quantifier({ node }) {\n    if (node.body.type === \"Quantifier\") {\n      const group = createGroup();\n      group.body[0].body.push(node.body);\n      node.body = setParentDeep(group, node);\n    }\n  },\n  Regex: {\n    enter({ node }, { supportedGNodes }) {\n      const leadingGs = [];\n      let hasAltWithLeadG = false;\n      let hasAltWithoutLeadG = false;\n      for (const alt of node.body) {\n        if (alt.body.length === 1 && alt.body[0].kind === \"search_start\") {\n          alt.body.pop();\n        } else {\n          const leadingG = getLeadingG(alt.body);\n          if (leadingG) {\n            hasAltWithLeadG = true;\n            Array.isArray(leadingG) ? leadingGs.push(...leadingG) : leadingGs.push(leadingG);\n          } else {\n            hasAltWithoutLeadG = true;\n          }\n        }\n      }\n      if (hasAltWithLeadG && !hasAltWithoutLeadG) {\n        leadingGs.forEach((g) => supportedGNodes.add(g));\n      }\n    },\n    exit(_, { accuracy, passedLookbehind, strategy }) {\n      if (accuracy === \"strict\" && passedLookbehind && strategy) {\n        throw new Error(r`Uses \"\\G\" in a way that requires non-strict accuracy`);\n      }\n    }\n  },\n  Subroutine({ node }, { jsGroupNameMap }) {\n    let { ref } = node;\n    if (typeof ref === \"string\" && !isValidJsGroupName(ref)) {\n      ref = getAndStoreJsGroupName(ref, jsGroupNameMap);\n      node.ref = ref;\n    }\n  }\n};\nvar SecondPassVisitor = {\n  Backreference({ node }, { multiplexCapturesToLeftByRef, reffedNodesByReferencer }) {\n    const { orphan, ref } = node;\n    if (!orphan) {\n      reffedNodesByReferencer.set(node, [...multiplexCapturesToLeftByRef.get(ref).map(({ node: node2 }) => node2)]);\n    }\n  },\n  CapturingGroup: {\n    enter({\n      node,\n      parent,\n      replaceWith,\n      skip\n    }, {\n      groupOriginByCopy,\n      groupsByName,\n      multiplexCapturesToLeftByRef,\n      openRefs,\n      reffedNodesByReferencer\n    }) {\n      const origin = groupOriginByCopy.get(node);\n      if (origin && openRefs.has(node.number)) {\n        const recursion2 = setParent(createRecursion(node.number), parent);\n        reffedNodesByReferencer.set(recursion2, openRefs.get(node.number));\n        replaceWith(recursion2);\n        return;\n      }\n      openRefs.set(node.number, node);\n      multiplexCapturesToLeftByRef.set(node.number, []);\n      if (node.name) {\n        getOrInsert(multiplexCapturesToLeftByRef, node.name, []);\n      }\n      const multiplexNodes = multiplexCapturesToLeftByRef.get(node.name ?? node.number);\n      for (let i = 0; i < multiplexNodes.length; i++) {\n        const multiplex = multiplexNodes[i];\n        if (\n          // This group is from subroutine expansion, and there's a multiplex value from either the\n          // origin node or a prior subroutine expansion group with the same origin\n          origin === multiplex.node || origin && origin === multiplex.origin || // This group is not from subroutine expansion, and it comes after a subroutine expansion\n          // group that refers to this group\n          node === multiplex.origin\n        ) {\n          multiplexNodes.splice(i, 1);\n          break;\n        }\n      }\n      multiplexCapturesToLeftByRef.get(node.number).push({ node, origin });\n      if (node.name) {\n        multiplexCapturesToLeftByRef.get(node.name).push({ node, origin });\n      }\n      if (node.name) {\n        const groupsWithSameName = getOrInsert(groupsByName, node.name, /* @__PURE__ */ new Map());\n        let hasDuplicateNameToRemove = false;\n        if (origin) {\n          hasDuplicateNameToRemove = true;\n        } else {\n          for (const groupInfo of groupsWithSameName.values()) {\n            if (!groupInfo.hasDuplicateNameToRemove) {\n              hasDuplicateNameToRemove = true;\n              break;\n            }\n          }\n        }\n        groupsByName.get(node.name).set(node, { node, hasDuplicateNameToRemove });\n      }\n    },\n    exit({ node }, { openRefs }) {\n      openRefs.delete(node.number);\n    }\n  },\n  Group: {\n    enter({ node }, state) {\n      state.prevFlags = state.currentFlags;\n      if (node.flags) {\n        state.currentFlags = getNewCurrentFlags(state.currentFlags, node.flags);\n      }\n    },\n    exit(_, state) {\n      state.currentFlags = state.prevFlags;\n    }\n  },\n  Subroutine({ node, parent, replaceWith }, state) {\n    const { isRecursive, ref } = node;\n    if (isRecursive) {\n      let reffed = parent;\n      while (reffed = reffed.parent) {\n        if (reffed.type === \"CapturingGroup\" && (reffed.name === ref || reffed.number === ref)) {\n          break;\n        }\n      }\n      state.reffedNodesByReferencer.set(node, reffed);\n      return;\n    }\n    const reffedGroupNode = state.subroutineRefMap.get(ref);\n    const isGlobalRecursion = ref === 0;\n    const expandedSubroutine = isGlobalRecursion ? createRecursion(0) : (\n      // The reffed group might itself contain subroutines, which are expanded during sub-traversal\n      cloneCapturingGroup(reffedGroupNode, state.groupOriginByCopy, null)\n    );\n    let replacement = expandedSubroutine;\n    if (!isGlobalRecursion) {\n      const reffedGroupFlagMods = getCombinedFlagModsFromFlagNodes(getAllParents(\n        reffedGroupNode,\n        (p) => p.type === \"Group\" && !!p.flags\n      ));\n      const reffedGroupFlags = reffedGroupFlagMods ? getNewCurrentFlags(state.globalFlags, reffedGroupFlagMods) : state.globalFlags;\n      if (!areFlagsEqual(reffedGroupFlags, state.currentFlags)) {\n        replacement = createGroup({\n          flags: getFlagModsFromFlags(reffedGroupFlags)\n        });\n        replacement.body[0].body.push(expandedSubroutine);\n      }\n    }\n    replaceWith(setParentDeep(replacement, parent), { traverse: !isGlobalRecursion });\n  }\n};\nvar ThirdPassVisitor = {\n  Backreference({ node, parent, replaceWith }, state) {\n    if (node.orphan) {\n      state.highestOrphanBackref = Math.max(state.highestOrphanBackref, node.ref);\n      return;\n    }\n    const reffedNodes = state.reffedNodesByReferencer.get(node);\n    const participants = reffedNodes.filter((reffed) => canParticipateWithNode(reffed, node));\n    if (!participants.length) {\n      replaceWith(setParentDeep(createLookaroundAssertion({ negate: true }), parent));\n    } else if (participants.length > 1) {\n      const group = createGroup({\n        atomic: true,\n        body: participants.reverse().map((reffed) => createAlternative({\n          body: [createBackreference(reffed.number)]\n        }))\n      });\n      replaceWith(setParentDeep(group, parent));\n    } else {\n      node.ref = participants[0].number;\n    }\n  },\n  CapturingGroup({ node }, state) {\n    node.number = ++state.numCapturesToLeft;\n    if (node.name) {\n      if (state.groupsByName.get(node.name).get(node).hasDuplicateNameToRemove) {\n        delete node.name;\n      }\n    }\n  },\n  Regex: {\n    exit({ node }, state) {\n      const numCapsNeeded = Math.max(state.highestOrphanBackref - state.numCapturesToLeft, 0);\n      for (let i = 0; i < numCapsNeeded; i++) {\n        const emptyCapture = createCapturingGroup();\n        node.body.at(-1).body.push(emptyCapture);\n      }\n    }\n  },\n  Subroutine({ node }, state) {\n    if (!node.isRecursive || node.ref === 0) {\n      return;\n    }\n    node.ref = state.reffedNodesByReferencer.get(node).number;\n  }\n};\nfunction addParentProperties(root) {\n  traverse(root, {\n    \"*\"({ node, parent }) {\n      node.parent = parent;\n    }\n  });\n}\nfunction areFlagsEqual(a, b) {\n  return a.dotAll === b.dotAll && a.ignoreCase === b.ignoreCase;\n}\nfunction canParticipateWithNode(capture, node) {\n  let rightmostPoint = node;\n  do {\n    if (rightmostPoint.type === \"Regex\") {\n      return false;\n    }\n    if (rightmostPoint.type === \"Alternative\") {\n      continue;\n    }\n    if (rightmostPoint === capture) {\n      return false;\n    }\n    const kidsOfParent = getKids(rightmostPoint.parent);\n    for (const kid of kidsOfParent) {\n      if (kid === rightmostPoint) {\n        break;\n      }\n      if (kid === capture || isAncestorOf(kid, capture)) {\n        return true;\n      }\n    }\n  } while (rightmostPoint = rightmostPoint.parent);\n  throw new Error(\"Unexpected path\");\n}\nfunction cloneCapturingGroup(obj, originMap, up, up2) {\n  const store = Array.isArray(obj) ? [] : {};\n  for (const [key, value] of Object.entries(obj)) {\n    if (key === \"parent\") {\n      store.parent = Array.isArray(up) ? up2 : up;\n    } else if (value && typeof value === \"object\") {\n      store[key] = cloneCapturingGroup(value, originMap, store, up);\n    } else {\n      if (key === \"type\" && value === \"CapturingGroup\") {\n        originMap.set(store, originMap.get(obj) ?? obj);\n      }\n      store[key] = value;\n    }\n  }\n  return store;\n}\nfunction createRecursion(ref) {\n  const node = createSubroutine(ref);\n  node.isRecursive = true;\n  return node;\n}\nfunction getAllParents(node, filterFn) {\n  const results = [];\n  while (node = node.parent) {\n    if (!filterFn || filterFn(node)) {\n      results.push(node);\n    }\n  }\n  return results;\n}\nfunction getAndStoreJsGroupName(name, map) {\n  if (map.has(name)) {\n    return map.get(name);\n  }\n  const jsName = `$${map.size}_${name.replace(/^[^$_\\p{IDS}]|[^$\\u200C\\u200D\\p{IDC}]/ug, \"_\")}`;\n  map.set(name, jsName);\n  return jsName;\n}\nfunction getCombinedFlagModsFromFlagNodes(flagNodes) {\n  const flagProps = [\"dotAll\", \"ignoreCase\"];\n  const combinedFlags = { enable: {}, disable: {} };\n  flagNodes.forEach(({ flags }) => {\n    flagProps.forEach((prop) => {\n      if (flags.enable?.[prop]) {\n        delete combinedFlags.disable[prop];\n        combinedFlags.enable[prop] = true;\n      }\n      if (flags.disable?.[prop]) {\n        combinedFlags.disable[prop] = true;\n      }\n    });\n  });\n  if (!Object.keys(combinedFlags.enable).length) {\n    delete combinedFlags.enable;\n  }\n  if (!Object.keys(combinedFlags.disable).length) {\n    delete combinedFlags.disable;\n  }\n  if (combinedFlags.enable || combinedFlags.disable) {\n    return combinedFlags;\n  }\n  return null;\n}\nfunction getFlagModsFromFlags({ dotAll, ignoreCase }) {\n  const mods = {};\n  if (dotAll || ignoreCase) {\n    mods.enable = {};\n    dotAll && (mods.enable.dotAll = true);\n    ignoreCase && (mods.enable.ignoreCase = true);\n  }\n  if (!dotAll || !ignoreCase) {\n    mods.disable = {};\n    !dotAll && (mods.disable.dotAll = true);\n    !ignoreCase && (mods.disable.ignoreCase = true);\n  }\n  return mods;\n}\nfunction getKids(node) {\n  if (!node) {\n    throw new Error(\"Node expected\");\n  }\n  const { body } = node;\n  return Array.isArray(body) ? body : body ? [body] : null;\n}\nfunction getLeadingG(els) {\n  const firstToConsider = els.find((el) => el.kind === \"search_start\" || isLoneGLookaround(el, { negate: false }) || !isAlwaysZeroLength(el));\n  if (!firstToConsider) {\n    return null;\n  }\n  if (firstToConsider.kind === \"search_start\") {\n    return firstToConsider;\n  }\n  if (firstToConsider.type === \"LookaroundAssertion\") {\n    return firstToConsider.body[0].body[0];\n  }\n  if (firstToConsider.type === \"CapturingGroup\" || firstToConsider.type === \"Group\") {\n    const gNodesForGroup = [];\n    for (const alt of firstToConsider.body) {\n      const leadingG = getLeadingG(alt.body);\n      if (!leadingG) {\n        return null;\n      }\n      Array.isArray(leadingG) ? gNodesForGroup.push(...leadingG) : gNodesForGroup.push(leadingG);\n    }\n    return gNodesForGroup;\n  }\n  return null;\n}\nfunction isAncestorOf(node, descendant) {\n  const kids = getKids(node) ?? [];\n  for (const kid of kids) {\n    if (kid === descendant || isAncestorOf(kid, descendant)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction isAlwaysZeroLength({ type }) {\n  return type === \"Assertion\" || type === \"Directive\" || type === \"LookaroundAssertion\";\n}\nfunction isAlwaysNonZeroLength(node) {\n  const types = [\n    \"Character\",\n    \"CharacterClass\",\n    \"CharacterSet\"\n  ];\n  return types.includes(node.type) || node.type === \"Quantifier\" && node.min && types.includes(node.body.type);\n}\nfunction isLoneGLookaround(node, options) {\n  const opts = {\n    negate: null,\n    ...options\n  };\n  return node.type === \"LookaroundAssertion\" && (opts.negate === null || node.negate === opts.negate) && node.body.length === 1 && hasOnlyChild(node.body[0], {\n    type: \"Assertion\",\n    kind: \"search_start\"\n  });\n}\nfunction isValidJsGroupName(name) {\n  return /^[$_\\p{IDS}][$\\u200C\\u200D\\p{IDC}]*$/u.test(name);\n}\nfunction parseFragment(pattern, options) {\n  const ast = parse(pattern, {\n    ...options,\n    // Providing a custom set of Unicode property names avoids converting some JS Unicode\n    // properties (ex: `\\p{Alpha}`) to Onig POSIX classes\n    unicodePropertyMap: JsUnicodePropertyMap\n  });\n  const alts = ast.body;\n  if (alts.length > 1 || alts[0].body.length > 1) {\n    return createGroup({ body: alts });\n  }\n  return alts[0].body[0];\n}\nfunction setNegate(node, negate) {\n  node.negate = negate;\n  return node;\n}\nfunction setParent(node, parent) {\n  node.parent = parent;\n  return node;\n}\nfunction setParentDeep(node, parent) {\n  addParentProperties(node);\n  node.parent = parent;\n  return node;\n}\n\n// src/generate.js\nimport { createAlternative as createAlternative2, createCharacter as createCharacter2, createGroup as createGroup2 } from \"oniguruma-parser/parser\";\nimport { traverse as traverse2 } from \"oniguruma-parser/traverser\";\nfunction generate(ast, options) {\n  const opts = getOptions(options);\n  const minTargetEs2024 = isMinTarget(opts.target, \"ES2024\");\n  const minTargetEs2025 = isMinTarget(opts.target, \"ES2025\");\n  const recursionLimit = opts.rules.recursionLimit;\n  if (!Number.isInteger(recursionLimit) || recursionLimit < 2 || recursionLimit > 20) {\n    throw new Error(\"Invalid recursionLimit; use 2-20\");\n  }\n  let hasCaseInsensitiveNode = null;\n  let hasCaseSensitiveNode = null;\n  if (!minTargetEs2025) {\n    const iStack = [ast.flags.ignoreCase];\n    traverse2(ast, FlagModifierVisitor, {\n      getCurrentModI: () => iStack.at(-1),\n      popModI() {\n        iStack.pop();\n      },\n      pushModI(isIOn) {\n        iStack.push(isIOn);\n      },\n      setHasCasedChar() {\n        if (iStack.at(-1)) {\n          hasCaseInsensitiveNode = true;\n        } else {\n          hasCaseSensitiveNode = true;\n        }\n      }\n    });\n  }\n  const appliedGlobalFlags = {\n    dotAll: ast.flags.dotAll,\n    // - Turn global flag i on if a case insensitive node was used and no case sensitive nodes were\n    //   used (to avoid unnecessary node expansion).\n    // - Turn global flag i off if a case sensitive node was used (since case sensitivity can't be\n    //   forced without the use of ES2025 flag groups)\n    ignoreCase: !!((ast.flags.ignoreCase || hasCaseInsensitiveNode) && !hasCaseSensitiveNode)\n  };\n  let lastNode = ast;\n  const state = {\n    accuracy: opts.accuracy,\n    appliedGlobalFlags,\n    captureMap: /* @__PURE__ */ new Map(),\n    currentFlags: {\n      dotAll: ast.flags.dotAll,\n      ignoreCase: ast.flags.ignoreCase\n    },\n    inCharClass: false,\n    lastNode,\n    originMap: ast._originMap,\n    recursionLimit,\n    useAppliedIgnoreCase: !!(!minTargetEs2025 && hasCaseInsensitiveNode && hasCaseSensitiveNode),\n    useFlagMods: minTargetEs2025,\n    useFlagV: minTargetEs2024,\n    verbose: opts.verbose\n  };\n  function gen(node) {\n    state.lastNode = lastNode;\n    lastNode = node;\n    const fn = throwIfNullish(generator[node.type], `Unexpected node type \"${node.type}\"`);\n    return fn(node, state, gen);\n  }\n  const result = {\n    pattern: ast.body.map(gen).join(\"|\"),\n    // Could reset `lastNode` at this point via `lastNode = ast`, but it isn't needed by flags\n    flags: gen(ast.flags),\n    options: { ...ast.options }\n  };\n  if (!minTargetEs2024) {\n    delete result.options.force.v;\n    result.options.disable.v = true;\n    result.options.unicodeSetsPlugin = null;\n  }\n  result._captureTransfers = /* @__PURE__ */ new Map();\n  result._hiddenCaptures = [];\n  state.captureMap.forEach((value, key) => {\n    if (value.hidden) {\n      result._hiddenCaptures.push(key);\n    }\n    if (value.transferTo) {\n      getOrInsert(result._captureTransfers, value.transferTo, []).push(key);\n    }\n  });\n  return result;\n}\nvar FlagModifierVisitor = {\n  \"*\": {\n    enter({ node }, state) {\n      if (isAnyGroup(node)) {\n        const currentModI = state.getCurrentModI();\n        state.pushModI(\n          node.flags ? getNewCurrentFlags({ ignoreCase: currentModI }, node.flags).ignoreCase : currentModI\n        );\n      }\n    },\n    exit({ node }, state) {\n      if (isAnyGroup(node)) {\n        state.popModI();\n      }\n    }\n  },\n  Backreference(_, state) {\n    state.setHasCasedChar();\n  },\n  Character({ node }, state) {\n    if (charHasCase(cp(node.value))) {\n      state.setHasCasedChar();\n    }\n  },\n  CharacterClassRange({ node, skip }, state) {\n    skip();\n    if (getCasesOutsideCharClassRange(node, { firstOnly: true }).length) {\n      state.setHasCasedChar();\n    }\n  },\n  CharacterSet({ node }, state) {\n    if (node.kind === \"property\" && UnicodePropertiesWithSpecificCase.has(node.value)) {\n      state.setHasCasedChar();\n    }\n  }\n};\nvar generator = {\n  /**\n  @param {AlternativeNode} node\n  */\n  Alternative({ body }, _, gen) {\n    return body.map(gen).join(\"\");\n  },\n  /**\n  @param {AssertionNode} node\n  */\n  Assertion({ kind, negate }) {\n    if (kind === \"string_end\") {\n      return \"$\";\n    }\n    if (kind === \"string_start\") {\n      return \"^\";\n    }\n    if (kind === \"word_boundary\") {\n      return negate ? r`\\B` : r`\\b`;\n    }\n    throw new Error(`Unexpected assertion kind \"${kind}\"`);\n  },\n  /**\n  @param {BackreferenceNode} node\n  */\n  Backreference({ ref }, state) {\n    if (typeof ref !== \"number\") {\n      throw new Error(\"Unexpected named backref in transformed AST\");\n    }\n    if (!state.useFlagMods && state.accuracy === \"strict\" && state.currentFlags.ignoreCase && !state.captureMap.get(ref).ignoreCase) {\n      throw new Error(\"Use of case-insensitive backref to case-sensitive group requires target ES2025 or non-strict accuracy\");\n    }\n    return \"\\\\\" + ref;\n  },\n  /**\n  @param {CapturingGroupNode} node\n  */\n  CapturingGroup(node, state, gen) {\n    const { body, name, number } = node;\n    const data = { ignoreCase: state.currentFlags.ignoreCase };\n    const origin = state.originMap.get(node);\n    if (origin) {\n      data.hidden = true;\n      if (number > origin.number) {\n        data.transferTo = origin.number;\n      }\n    }\n    state.captureMap.set(number, data);\n    return `(${name ? `?<${name}>` : \"\"}${body.map(gen).join(\"|\")})`;\n  },\n  /**\n  @param {CharacterNode} node\n  */\n  Character({ value }, state) {\n    const char = cp(value);\n    const escaped = getCharEscape(value, {\n      escDigit: state.lastNode.type === \"Backreference\",\n      inCharClass: state.inCharClass,\n      useFlagV: state.useFlagV\n    });\n    if (escaped !== char) {\n      return escaped;\n    }\n    if (state.useAppliedIgnoreCase && state.currentFlags.ignoreCase && charHasCase(char)) {\n      const cases = getIgnoreCaseMatchChars(char);\n      return state.inCharClass ? cases.join(\"\") : cases.length > 1 ? `[${cases.join(\"\")}]` : cases[0];\n    }\n    return char;\n  },\n  /**\n  @param {CharacterClassNode} node\n  */\n  CharacterClass(node, state, gen) {\n    const { kind, negate, parent } = node;\n    let { body } = node;\n    if (kind === \"intersection\" && !state.useFlagV) {\n      throw new Error(\"Use of class intersection requires min target ES2024\");\n    }\n    if (envFlags.bugFlagVLiteralHyphenIsRange && state.useFlagV && body.some(isLiteralHyphen)) {\n      body = [createCharacter2(45), ...body.filter((kid) => !isLiteralHyphen(kid))];\n    }\n    const genClass = () => `[${negate ? \"^\" : \"\"}${body.map(gen).join(kind === \"intersection\" ? \"&&\" : \"\")}]`;\n    if (!state.inCharClass) {\n      if (\n        // Already established `kind !== 'intersection'` if `!state.useFlagV`; don't check again\n        (!state.useFlagV || envFlags.bugNestedClassIgnoresNegation) && !negate\n      ) {\n        const negatedChildClasses = body.filter(\n          (kid) => kid.type === \"CharacterClass\" && kid.kind === \"union\" && kid.negate\n        );\n        if (negatedChildClasses.length) {\n          const group = createGroup2();\n          const groupFirstAlt = group.body[0];\n          group.parent = parent;\n          groupFirstAlt.parent = group;\n          body = body.filter((kid) => !negatedChildClasses.includes(kid));\n          node.body = body;\n          if (body.length) {\n            node.parent = groupFirstAlt;\n            groupFirstAlt.body.push(node);\n          } else {\n            group.body.pop();\n          }\n          negatedChildClasses.forEach((cc) => {\n            const newAlt = createAlternative2({ body: [cc] });\n            cc.parent = newAlt;\n            newAlt.parent = group;\n            group.body.push(newAlt);\n          });\n          return gen(group);\n        }\n      }\n      state.inCharClass = true;\n      const result = genClass();\n      state.inCharClass = false;\n      return result;\n    }\n    const firstEl = body[0];\n    if (\n      // Already established that the parent is a char class via `inCharClass`; don't check again\n      kind === \"union\" && !negate && firstEl && // Allows many nested classes to work with `target` ES2018 which doesn't support nesting\n      ((!state.useFlagV || !state.verbose) && parent.kind === \"union\" && !(envFlags.bugFlagVLiteralHyphenIsRange && state.useFlagV) || !state.verbose && parent.kind === \"intersection\" && // JS doesn't allow intersection with union or ranges\n      body.length === 1 && firstEl.type !== \"CharacterClassRange\")\n    ) {\n      return body.map(gen).join(\"\");\n    }\n    if (!state.useFlagV && parent.type === \"CharacterClass\") {\n      throw new Error(\"Use of nested character class requires min target ES2024\");\n    }\n    return genClass();\n  },\n  /**\n  @param {CharacterClassRangeNode} node\n  */\n  CharacterClassRange(node, state) {\n    const min = node.min.value;\n    const max = node.max.value;\n    const escOpts = {\n      escDigit: false,\n      inCharClass: true,\n      useFlagV: state.useFlagV\n    };\n    const minStr = getCharEscape(min, escOpts);\n    const maxStr = getCharEscape(max, escOpts);\n    const extraChars = /* @__PURE__ */ new Set();\n    if (state.useAppliedIgnoreCase && state.currentFlags.ignoreCase) {\n      const charsOutsideRange = getCasesOutsideCharClassRange(node);\n      const ranges = getCodePointRangesFromChars(charsOutsideRange);\n      ranges.forEach((value) => {\n        extraChars.add(\n          Array.isArray(value) ? `${getCharEscape(value[0], escOpts)}-${getCharEscape(value[1], escOpts)}` : getCharEscape(value, escOpts)\n        );\n      });\n    }\n    return `${minStr}-${maxStr}${[...extraChars].join(\"\")}`;\n  },\n  /**\n  @param {CharacterSetNode} node\n  */\n  CharacterSet({ kind, negate, value, key }, state) {\n    if (kind === \"dot\") {\n      return state.currentFlags.dotAll ? state.appliedGlobalFlags.dotAll || state.useFlagMods ? \".\" : \"[^]\" : (\n        // Onig's only line break char is line feed, unlike JS\n        r`[^\\n]`\n      );\n    }\n    if (kind === \"digit\") {\n      return negate ? r`\\D` : r`\\d`;\n    }\n    if (kind === \"property\") {\n      if (state.useAppliedIgnoreCase && state.currentFlags.ignoreCase && UnicodePropertiesWithSpecificCase.has(value)) {\n        throw new Error(`Unicode property \"${value}\" can't be case-insensitive when other chars have specific case`);\n      }\n      return `${negate ? r`\\P` : r`\\p`}{${key ? `${key}=` : \"\"}${value}}`;\n    }\n    if (kind === \"word\") {\n      return negate ? r`\\W` : r`\\w`;\n    }\n    throw new Error(`Unexpected character set kind \"${kind}\"`);\n  },\n  /**\n  @param {FlagsNode} node\n  */\n  Flags(node, state) {\n    return (\n      // The transformer should never turn on the properties for flags d, g, m since Onig doesn't\n      // have equivs. Flag m is never used since Onig uses different line break chars than JS\n      // (node.hasIndices ? 'd' : '') +\n      // (node.global ? 'g' : '') +\n      // (node.multiline ? 'm' : '') +\n      (state.appliedGlobalFlags.ignoreCase ? \"i\" : \"\") + (node.dotAll ? \"s\" : \"\") + (node.sticky ? \"y\" : \"\")\n    );\n  },\n  /**\n  @param {GroupNode} node\n  */\n  Group({ atomic: atomic2, body, flags, parent }, state, gen) {\n    const currentFlags = state.currentFlags;\n    if (flags) {\n      state.currentFlags = getNewCurrentFlags(currentFlags, flags);\n    }\n    const contents = body.map(gen).join(\"|\");\n    const result = !state.verbose && body.length === 1 && // Single alt\n    parent.type !== \"Quantifier\" && !atomic2 && (!state.useFlagMods || !flags) ? contents : `(?${getGroupPrefix(atomic2, flags, state.useFlagMods)}${contents})`;\n    state.currentFlags = currentFlags;\n    return result;\n  },\n  /**\n  @param {LookaroundAssertionNode} node\n  */\n  LookaroundAssertion({ body, kind, negate }, _, gen) {\n    const prefix = `${kind === \"lookahead\" ? \"\" : \"<\"}${negate ? \"!\" : \"=\"}`;\n    return `(?${prefix}${body.map(gen).join(\"|\")})`;\n  },\n  /**\n  @param {QuantifierNode} node\n  */\n  Quantifier(node, _, gen) {\n    return gen(node.body) + getQuantifierStr(node);\n  },\n  /**\n  @param {SubroutineNode & {isRecursive: true}} node\n  */\n  Subroutine({ isRecursive, ref }, state) {\n    if (!isRecursive) {\n      throw new Error(\"Unexpected non-recursive subroutine in transformed AST\");\n    }\n    const limit = state.recursionLimit;\n    return ref === 0 ? `(?R=${limit})` : r`\\g<${ref}&R=${limit}>`;\n  }\n};\nvar BaseEscapeChars = /* @__PURE__ */ new Set([\n  \"$\",\n  \"(\",\n  \")\",\n  \"*\",\n  \"+\",\n  \".\",\n  \"?\",\n  \"[\",\n  \"\\\\\",\n  \"]\",\n  \"^\",\n  \"{\",\n  \"|\",\n  \"}\"\n]);\nvar CharClassEscapeChars = /* @__PURE__ */ new Set([\n  \"-\",\n  \"\\\\\",\n  \"]\",\n  \"^\",\n  // Literal `[` doesn't require escaping with flag u, but this can help work around regex source\n  // linters and regex syntax processors that expect unescaped `[` to create a nested class\n  \"[\"\n]);\nvar CharClassEscapeCharsFlagV = /* @__PURE__ */ new Set([\n  \"(\",\n  \")\",\n  \"-\",\n  \"/\",\n  \"[\",\n  \"\\\\\",\n  \"]\",\n  \"^\",\n  \"{\",\n  \"|\",\n  \"}\",\n  // Double punctuators; also includes already-listed `-` and `^`\n  \"!\",\n  \"#\",\n  \"$\",\n  \"%\",\n  \"&\",\n  \"*\",\n  \"+\",\n  \",\",\n  \".\",\n  \":\",\n  \";\",\n  \"<\",\n  \"=\",\n  \">\",\n  \"?\",\n  \"@\",\n  \"`\",\n  \"~\"\n]);\nvar CharCodeEscapeMap = /* @__PURE__ */ new Map([\n  [9, r`\\t`],\n  // horizontal tab\n  [10, r`\\n`],\n  // line feed\n  [11, r`\\v`],\n  // vertical tab\n  [12, r`\\f`],\n  // form feed\n  [13, r`\\r`],\n  // carriage return\n  [8232, r`\\u2028`],\n  // line separator\n  [8233, r`\\u2029`],\n  // paragraph separator\n  [65279, r`\\uFEFF`]\n  // ZWNBSP/BOM\n]);\nvar casedRe = /^\\p{Cased}$/u;\nfunction charHasCase(char) {\n  return casedRe.test(char);\n}\nfunction getCasesOutsideCharClassRange(node, options) {\n  const firstOnly = !!options?.firstOnly;\n  const min = node.min.value;\n  const max = node.max.value;\n  const found = [];\n  if (min < 65 && (max === 65535 || max >= 131071) || min === 65536 && max >= 131071) {\n    return found;\n  }\n  for (let i = min; i <= max; i++) {\n    const char = cp(i);\n    if (!charHasCase(char)) {\n      continue;\n    }\n    const charsOutsideRange = getIgnoreCaseMatchChars(char).filter((caseOfChar) => {\n      const num = caseOfChar.codePointAt(0);\n      return num < min || num > max;\n    });\n    if (charsOutsideRange.length) {\n      found.push(...charsOutsideRange);\n      if (firstOnly) {\n        break;\n      }\n    }\n  }\n  return found;\n}\nfunction getCharEscape(codePoint, { escDigit, inCharClass, useFlagV }) {\n  if (CharCodeEscapeMap.has(codePoint)) {\n    return CharCodeEscapeMap.get(codePoint);\n  }\n  if (\n    // Control chars, etc.; condition modeled on the Chrome developer console's display for strings\n    codePoint < 32 || codePoint > 126 && codePoint < 160 || // Unicode planes 4-16; unassigned, special purpose, and private use area\n    codePoint > 262143 || // Avoid corrupting a preceding backref by immediately following it with a literal digit\n    escDigit && isDigitCharCode(codePoint)\n  ) {\n    return codePoint > 255 ? `\\\\u{${codePoint.toString(16).toUpperCase()}}` : `\\\\x${codePoint.toString(16).toUpperCase().padStart(2, \"0\")}`;\n  }\n  const escapeChars = inCharClass ? useFlagV ? CharClassEscapeCharsFlagV : CharClassEscapeChars : BaseEscapeChars;\n  const char = cp(codePoint);\n  return (escapeChars.has(char) ? \"\\\\\" : \"\") + char;\n}\nfunction getCodePointRangesFromChars(chars) {\n  const codePoints = chars.map((char) => char.codePointAt(0)).sort((a, b) => a - b);\n  const values = [];\n  let start = null;\n  for (let i = 0; i < codePoints.length; i++) {\n    if (codePoints[i + 1] === codePoints[i] + 1) {\n      start ??= codePoints[i];\n    } else if (start === null) {\n      values.push(codePoints[i]);\n    } else {\n      values.push([start, codePoints[i]]);\n      start = null;\n    }\n  }\n  return values;\n}\nfunction getGroupPrefix(atomic2, flagMods, useFlagMods) {\n  if (atomic2) {\n    return \">\";\n  }\n  let mods = \"\";\n  if (flagMods && useFlagMods) {\n    const { enable, disable } = flagMods;\n    mods = (enable?.ignoreCase ? \"i\" : \"\") + (enable?.dotAll ? \"s\" : \"\") + (disable ? \"-\" : \"\") + (disable?.ignoreCase ? \"i\" : \"\") + (disable?.dotAll ? \"s\" : \"\");\n  }\n  return `${mods}:`;\n}\nfunction getQuantifierStr({ kind, max, min }) {\n  let base;\n  if (!min && max === 1) {\n    base = \"?\";\n  } else if (!min && max === Infinity) {\n    base = \"*\";\n  } else if (min === 1 && max === Infinity) {\n    base = \"+\";\n  } else if (min === max) {\n    base = `{${min}}`;\n  } else {\n    base = `{${min},${max === Infinity ? \"\" : max}}`;\n  }\n  return base + {\n    greedy: \"\",\n    lazy: \"?\",\n    possessive: \"+\"\n  }[kind];\n}\nfunction isAnyGroup({ type }) {\n  return type === \"CapturingGroup\" || type === \"Group\" || type === \"LookaroundAssertion\";\n}\nfunction isDigitCharCode(value) {\n  return value > 47 && value < 58;\n}\nfunction isLiteralHyphen({ type, value }) {\n  return type === \"Character\" && value === 45;\n}\n\n// src/subclass.js\nvar EmulatedRegExp = class _EmulatedRegExp extends RegExp {\n  /**\n  @type {Map<number, {\n    hidden?: true;\n    transferTo?: number;\n  }>}\n  */\n  #captureMap = /* @__PURE__ */ new Map();\n  /**\n  @type {RegExp | EmulatedRegExp | null}\n  */\n  #compiled = null;\n  /**\n  @type {string}\n  */\n  #pattern;\n  /**\n  @type {Map<number, string>?}\n  */\n  #nameMap = null;\n  /**\n  @type {string?}\n  */\n  #strategy = null;\n  /**\n  Can be used to serialize the instance.\n  @type {EmulatedRegExpOptions}\n  */\n  rawOptions = {};\n  // Override the getter with one that works with lazy-compiled regexes\n  get source() {\n    return this.#pattern || \"(?:)\";\n  }\n  /**\n  @overload\n  @param {string} pattern\n  @param {string} [flags]\n  @param {EmulatedRegExpOptions} [options]\n  */\n  /**\n  @overload\n  @param {EmulatedRegExp} pattern\n  @param {string} [flags]\n  */\n  constructor(pattern, flags, options) {\n    const lazyCompile = !!options?.lazyCompile;\n    if (pattern instanceof RegExp) {\n      if (options) {\n        throw new Error(\"Cannot provide options when copying a regexp\");\n      }\n      const re = pattern;\n      super(re, flags);\n      this.#pattern = re.source;\n      if (re instanceof _EmulatedRegExp) {\n        this.#captureMap = re.#captureMap;\n        this.#nameMap = re.#nameMap;\n        this.#strategy = re.#strategy;\n        this.rawOptions = re.rawOptions;\n      }\n    } else {\n      const opts = {\n        hiddenCaptures: [],\n        strategy: null,\n        transfers: [],\n        ...options\n      };\n      super(lazyCompile ? \"\" : pattern, flags);\n      this.#pattern = pattern;\n      this.#captureMap = createCaptureMap(opts.hiddenCaptures, opts.transfers);\n      this.#strategy = opts.strategy;\n      this.rawOptions = options ?? {};\n    }\n    if (!lazyCompile) {\n      this.#compiled = this;\n    }\n  }\n  /**\n  Called internally by all String/RegExp methods that use regexes.\n  @override\n  @param {string} str\n  @returns {RegExpExecArray?}\n  */\n  exec(str) {\n    if (!this.#compiled) {\n      const { lazyCompile, ...rest } = this.rawOptions;\n      this.#compiled = new _EmulatedRegExp(this.#pattern, this.flags, rest);\n    }\n    const useLastIndex = this.global || this.sticky;\n    const pos = this.lastIndex;\n    if (this.#strategy === \"clip_search\" && useLastIndex && pos) {\n      this.lastIndex = 0;\n      const match = this.#execCore(str.slice(pos));\n      if (match) {\n        adjustMatchDetailsForOffset(match, pos, str, this.hasIndices);\n        this.lastIndex += pos;\n      }\n      return match;\n    }\n    return this.#execCore(str);\n  }\n  /**\n  Adds support for hidden and transfer captures.\n  @param {string} str\n  @returns\n  */\n  #execCore(str) {\n    this.#compiled.lastIndex = this.lastIndex;\n    const match = super.exec.call(this.#compiled, str);\n    this.lastIndex = this.#compiled.lastIndex;\n    if (!match || !this.#captureMap.size) {\n      return match;\n    }\n    const matchCopy = [...match];\n    match.length = 1;\n    let indicesCopy;\n    if (this.hasIndices) {\n      indicesCopy = [...match.indices];\n      match.indices.length = 1;\n    }\n    const mappedNums = [0];\n    for (let i = 1; i < matchCopy.length; i++) {\n      const { hidden, transferTo } = this.#captureMap.get(i) ?? {};\n      if (hidden) {\n        mappedNums.push(null);\n      } else {\n        mappedNums.push(match.length);\n        match.push(matchCopy[i]);\n        if (this.hasIndices) {\n          match.indices.push(indicesCopy[i]);\n        }\n      }\n      if (transferTo && matchCopy[i] !== void 0) {\n        const to = mappedNums[transferTo];\n        if (!to) {\n          throw new Error(`Invalid capture transfer to \"${to}\"`);\n        }\n        match[to] = matchCopy[i];\n        if (this.hasIndices) {\n          match.indices[to] = indicesCopy[i];\n        }\n        if (match.groups) {\n          if (!this.#nameMap) {\n            this.#nameMap = createNameMap(this.source);\n          }\n          const name = this.#nameMap.get(transferTo);\n          if (name) {\n            match.groups[name] = matchCopy[i];\n            if (this.hasIndices) {\n              match.indices.groups[name] = indicesCopy[i];\n            }\n          }\n        }\n      }\n    }\n    return match;\n  }\n};\nfunction adjustMatchDetailsForOffset(match, offset, input, hasIndices) {\n  match.index += offset;\n  match.input = input;\n  if (hasIndices) {\n    const indices = match.indices;\n    for (let i = 0; i < indices.length; i++) {\n      const arr = indices[i];\n      if (arr) {\n        indices[i] = [arr[0] + offset, arr[1] + offset];\n      }\n    }\n    const groupIndices = indices.groups;\n    if (groupIndices) {\n      Object.keys(groupIndices).forEach((key) => {\n        const arr = groupIndices[key];\n        if (arr) {\n          groupIndices[key] = [arr[0] + offset, arr[1] + offset];\n        }\n      });\n    }\n  }\n}\nfunction createCaptureMap(hiddenCaptures, transfers) {\n  const captureMap = /* @__PURE__ */ new Map();\n  for (const num of hiddenCaptures) {\n    captureMap.set(num, {\n      hidden: true\n    });\n  }\n  for (const [to, from] of transfers) {\n    for (const num of from) {\n      getOrInsert(captureMap, num, {}).transferTo = to;\n    }\n  }\n  return captureMap;\n}\nfunction createNameMap(pattern) {\n  const re = /(?<capture>\\((?:\\?<(?![=!])(?<name>[^>]+)>|(?!\\?)))|\\\\?./gsu;\n  const map = /* @__PURE__ */ new Map();\n  let numCharClassesOpen = 0;\n  let numCaptures = 0;\n  let match;\n  while (match = re.exec(pattern)) {\n    const { 0: m, groups: { capture, name } } = match;\n    if (m === \"[\") {\n      numCharClassesOpen++;\n    } else if (!numCharClassesOpen) {\n      if (capture) {\n        numCaptures++;\n        if (name) {\n          map.set(numCaptures, name);\n        }\n      }\n    } else if (m === \"]\") {\n      numCharClassesOpen--;\n    }\n  }\n  return map;\n}\n\n// src/index.js\nimport { parse as parse2 } from \"oniguruma-parser/parser\";\nimport { atomic, possessive } from \"regex/internals\";\nimport { recursion } from \"regex-recursion\";\nfunction toRegExp(pattern, options) {\n  const d = toRegExpDetails(pattern, options);\n  if (d.options) {\n    return new EmulatedRegExp(d.pattern, d.flags, d.options);\n  }\n  return new RegExp(d.pattern, d.flags);\n}\nfunction toRegExpDetails(pattern, options) {\n  const opts = getOptions(options);\n  const onigurumaAst = parse2(pattern, {\n    flags: opts.flags,\n    normalizeUnknownPropertyNames: true,\n    rules: {\n      captureGroup: opts.rules.captureGroup,\n      singleline: opts.rules.singleline\n    },\n    skipBackrefValidation: opts.rules.allowOrphanBackrefs,\n    unicodePropertyMap: JsUnicodePropertyMap\n  });\n  const regexPlusAst = transform(onigurumaAst, {\n    accuracy: opts.accuracy,\n    asciiWordBoundaries: opts.rules.asciiWordBoundaries,\n    avoidSubclass: opts.avoidSubclass,\n    bestEffortTarget: opts.target\n  });\n  const generated = generate(regexPlusAst, opts);\n  const recursionResult = recursion(generated.pattern, {\n    captureTransfers: generated._captureTransfers,\n    hiddenCaptures: generated._hiddenCaptures,\n    mode: \"external\"\n  });\n  const possessiveResult = possessive(recursionResult.pattern);\n  const atomicResult = atomic(possessiveResult.pattern, {\n    captureTransfers: recursionResult.captureTransfers,\n    hiddenCaptures: recursionResult.hiddenCaptures\n  });\n  const details = {\n    pattern: atomicResult.pattern,\n    flags: `${opts.hasIndices ? \"d\" : \"\"}${opts.global ? \"g\" : \"\"}${generated.flags}${generated.options.disable.v ? \"u\" : \"v\"}`\n  };\n  if (opts.avoidSubclass) {\n    if (opts.lazyCompileLength !== Infinity) {\n      throw new Error(\"Lazy compilation requires subclass\");\n    }\n  } else {\n    const hiddenCaptures = atomicResult.hiddenCaptures.sort((a, b) => a - b);\n    const transfers = Array.from(atomicResult.captureTransfers);\n    const strategy = regexPlusAst._strategy;\n    const lazyCompile = details.pattern.length >= opts.lazyCompileLength;\n    if (hiddenCaptures.length || transfers.length || strategy || lazyCompile) {\n      details.options = {\n        ...hiddenCaptures.length && { hiddenCaptures },\n        ...transfers.length && { transfers },\n        ...strategy && { strategy },\n        ...lazyCompile && { lazyCompile }\n      };\n    }\n  }\n  return details;\n}\nexport {\n  EmulatedRegExp,\n  toRegExp,\n  toRegExpDetails\n};\n//# sourceMappingURL=index.js.map\n","const MAX = 4294967295;\nclass JavaScriptScanner {\n  constructor(patterns, options = {}) {\n    this.patterns = patterns;\n    this.options = options;\n    const {\n      forgiving = false,\n      cache,\n      regexConstructor\n    } = options;\n    if (!regexConstructor) {\n      throw new Error(\"Option `regexConstructor` is not provided\");\n    }\n    this.regexps = patterns.map((p) => {\n      if (typeof p !== \"string\") {\n        return p;\n      }\n      const cached = cache?.get(p);\n      if (cached) {\n        if (cached instanceof RegExp) {\n          return cached;\n        }\n        if (forgiving)\n          return null;\n        throw cached;\n      }\n      try {\n        const regex = regexConstructor(p);\n        cache?.set(p, regex);\n        return regex;\n      } catch (e) {\n        cache?.set(p, e);\n        if (forgiving)\n          return null;\n        throw e;\n      }\n    });\n  }\n  regexps;\n  findNextMatchSync(string, startPosition, _options) {\n    const str = typeof string === \"string\" ? string : string.content;\n    const pending = [];\n    function toResult(index, match, offset = 0) {\n      return {\n        index,\n        captureIndices: match.indices.map((indice) => {\n          if (indice == null) {\n            return {\n              start: MAX,\n              end: MAX,\n              length: 0\n            };\n          }\n          return {\n            start: indice[0] + offset,\n            end: indice[1] + offset,\n            length: indice[1] - indice[0]\n          };\n        })\n      };\n    }\n    for (let i = 0; i < this.regexps.length; i++) {\n      const regexp = this.regexps[i];\n      if (!regexp)\n        continue;\n      try {\n        regexp.lastIndex = startPosition;\n        const match = regexp.exec(str);\n        if (!match)\n          continue;\n        if (match.index === startPosition) {\n          return toResult(i, match, 0);\n        }\n        pending.push([i, match, 0]);\n      } catch (e) {\n        if (this.options.forgiving)\n          continue;\n        throw e;\n      }\n    }\n    if (pending.length) {\n      const minIndex = Math.min(...pending.map((m) => m[1].index));\n      for (const [i, match, offset] of pending) {\n        if (match.index === minIndex) {\n          return toResult(i, match, offset);\n        }\n      }\n    }\n    return null;\n  }\n}\n\nexport { JavaScriptScanner as J };\n","import { toRegExp } from 'oniguruma-to-es';\nimport { J as JavaScriptScanner } from './shared/engine-javascript.hzpS1_41.mjs';\n\nfunction defaultJavaScriptRegexConstructor(pattern, options) {\n  return toRegExp(\n    pattern,\n    {\n      global: true,\n      hasIndices: true,\n      // This has no benefit for the standard JS engine, but it avoids a perf penalty for\n      // precompiled grammars when constructing extremely long patterns that aren't always used\n      lazyCompileLength: 3e3,\n      rules: {\n        // Needed since TextMate grammars merge backrefs across patterns\n        allowOrphanBackrefs: true,\n        // Improves search performance for generated regexes\n        asciiWordBoundaries: true,\n        // Follow `vscode-oniguruma` which enables this Oniguruma option by default\n        captureGroup: true,\n        // Oniguruma uses depth limit `20`; lowered here to keep regexes shorter and maybe\n        // sometimes faster, but can be increased if issues reported due to low limit\n        recursionLimit: 5,\n        // Oniguruma option for `^`->`\\A`, `$`->`\\Z`; improves search performance without any\n        // change in meaning since TM grammars search line by line\n        singleline: true\n      },\n      ...options\n    }\n  );\n}\nfunction createJavaScriptRegexEngine(options = {}) {\n  const _options = Object.assign(\n    {\n      target: \"auto\",\n      cache: /* @__PURE__ */ new Map()\n    },\n    options\n  );\n  _options.regexConstructor ||= (pattern) => defaultJavaScriptRegexConstructor(pattern, { target: _options.target });\n  return {\n    createScanner(patterns) {\n      return new JavaScriptScanner(patterns, _options);\n    },\n    createString(s) {\n      return {\n        content: s\n      };\n    }\n  };\n}\n\nexport { createJavaScriptRegexEngine, defaultJavaScriptRegexConstructor };\n","import rehypeShikiFromHighlighter, {\n  type RehypeShikiCoreOptions,\n} from \"@shikijs/rehype/core\";\nimport {\n  transformerMetaHighlight,\n  transformerMetaWordHighlight,\n} from \"@shikijs/transformers\";\nimport type { Root } from \"hast\";\nimport { toJsxRuntime } from \"hast-util-to-jsx-runtime\";\nimport { Fragment, type JSX } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nimport type {\n  BundledLanguage,\n  BundledTheme,\n  CodeOptionsMultipleThemes,\n  HighlighterCore,\n} from \"shiki\";\nimport { createHighlighterCore } from \"shiki/core\";\nimport { createJavaScriptRegexEngine } from \"shiki/engine/javascript\";\nimport type { Pluggable } from \"unified\";\nimport { visit } from \"unist-util-visit\";\nimport { cn } from \"./util/cn.js\";\n\nconst engine = createJavaScriptRegexEngine({ forgiving: true });\nexport const highlighter = await createHighlighterCore({\n  engine,\n  langAlias: {\n    markup: \"html\",\n    svg: \"xml\",\n    mathml: \"xml\",\n    atom: \"xml\",\n    ssml: \"xml\",\n    rss: \"xml\",\n    webmanifest: \"json\",\n  },\n});\n\ntype ThemesRecord = CodeOptionsMultipleThemes<BundledTheme>[\"themes\"];\n\nexport const defaultHighlightOptions = {\n  themes: {\n    light: \"github-light\",\n    dark: \"github-dark\",\n  },\n  defaultColor: false,\n  defaultLanguage: \"text\",\n  fallbackLanguage: \"text\",\n  inline: \"tailing-curly-colon\",\n  addLanguageClass: true,\n  transformers: [transformerMetaHighlight(), transformerMetaWordHighlight()],\n  parseMetaString: (str) => {\n    // Matches key=\"value\", key=value, or key attributes\n    const matches = str.matchAll(\n      /([a-z0-9]+)(?:=([\"'])(.*?)\\2|=(.*?)(?:\\s|$)|(?:\\s|$))/gi,\n    );\n    return Object.fromEntries(\n      Array.from(matches).map((match) => {\n        const key = match[1];\n        const value = match[3] || match[4] || true;\n        return [key, value];\n      }),\n    );\n  },\n} satisfies RehypeShikiCoreOptions;\n\nexport const defaultLanguages: BundledLanguage[] = [\n  \"shellscript\",\n  \"javascript\",\n  \"jsx\",\n  \"typescript\",\n  \"tsx\",\n  \"graphql\",\n  \"jsonc\",\n  \"json\",\n  \"python\",\n  \"java\",\n  \"go\",\n  \"csharp\",\n  \"kotlin\",\n  \"objective-c\",\n  \"php\",\n  \"ruby\",\n  \"swift\",\n  \"css\",\n  \"html\",\n  \"xml\",\n  \"yaml\",\n  \"toml\",\n  \"rust\",\n  \"markdown\",\n  \"mdx\",\n];\n\nconst rehypeCodeBlockPlugin = () => (tree: Root) => {\n  visit(tree, \"element\", (node, _index, parent) => {\n    if (node.tagName !== \"code\") return;\n\n    const isCodeBlock = parent?.type === \"element\" && parent.tagName === \"pre\";\n    node.properties.inline = JSON.stringify(!isCodeBlock);\n\n    // Pass through properties from <pre> to <code> so we can handle it in `code` only\n    if (isCodeBlock) {\n      node.properties = {\n        ...node.properties,\n        ...structuredClone(parent.properties),\n        class: cn(node.properties.class, parent.properties.class),\n      };\n      parent.properties = {};\n    }\n  });\n};\n\nexport const createConfiguredShikiRehypePlugins = (\n  themes: ThemesRecord = defaultHighlightOptions.themes,\n  highlighterInstance: HighlighterCore = highlighter,\n) => [\n  [\n    rehypeShikiFromHighlighter,\n    highlighterInstance,\n    { ...defaultHighlightOptions, themes },\n  ] satisfies Pluggable,\n  rehypeCodeBlockPlugin,\n];\n\nexport const highlight = (\n  highlighter: HighlighterCore,\n  code: string,\n  lang = \"text\",\n  themes: ThemesRecord = defaultHighlightOptions.themes,\n) => {\n  const value = highlighter.codeToHast(code, {\n    lang,\n    ...defaultHighlightOptions,\n    themes,\n  });\n\n  return toJsxRuntime(value, { Fragment, jsx, jsxs }) as JSX.Element;\n};\n","import { memo } from \"react\";\nimport { useZudoku } from \"../components/context/ZudokuContext.js\";\nimport { highlight } from \"../shiki.js\";\nimport invariant from \"../util/invariant.js\";\nimport { CodeBlock, type CodeBlockProps } from \"./CodeBlock.js\";\nimport { EmbeddedCodeBlock } from \"./EmbeddedCodeBlock.js\";\n\ntype SyntaxHighlightProps = CodeBlockProps &\n  (\n    | { code: string; embedded?: boolean; children?: never }\n    | { code?: never; children: string; embedded?: boolean }\n  );\n\nexport const SyntaxHighlight = memo(\n  ({ code, children, embedded, ...props }: SyntaxHighlightProps) => {\n    const { syntaxHighlighting } = useZudoku().options;\n\n    invariant(syntaxHighlighting?.highlighter, \"Highlighter not found\");\n\n    const highlightedCode = highlight(\n      syntaxHighlighting.highlighter,\n      code ?? children,\n      props.language,\n      syntaxHighlighting.themes,\n    );\n\n    return embedded ? (\n      <EmbeddedCodeBlock {...props}>{highlightedCode}</EmbeddedCodeBlock>\n    ) : (\n      <CodeBlock {...props}>{highlightedCode}</CodeBlock>\n    );\n  },\n);\n\nSyntaxHighlight.displayName = \"SyntaxHighlight\";\n"],"names":["ok","unreachable","parse","value","tokens","input","index","start","end","token","stringify","values","options","settings","nameRe","nameReJsx","emptyOptions","name","re","whitespace","thing","empty","Schema$1","property","normal","space","Schema","merge","definitions","definition","normalize","Info$1","attribute","Info","powers","boolean","increment","booleanish","overloadedBoolean","number","spaceSeparated","commaSeparated","commaOrSpaceSeparated","checks","types","mask","mark","check","DefinedInfo","key","create","properties","normals","info","aria","_","caseSensitiveTransform","attributes","caseInsensitiveTransform","html","svg","xlink","xmlns","xml","hastToReact","cap","dash","valid","find","schema","Type","rest","camelcase","dashes","kebab","$0","htmlBase","svgBase","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","NEWLINE","FORWARD_SLASH","ASTERISK","EMPTY_STRING","TYPE_COMMENT","TYPE_DECLARATION","inlineStyleParser","style","lineno","column","updatePosition","str","lines","i","position","node","Position","error","msg","err","match","m","comments","rules","c","comment","pos","declaration","prop","val","ret","trim","declarations","decls","decl","__importDefault","this","mod","cjs","StyleToObject","inline_style_parser_1","require$$0","iterator","styleObject","hasIterator","utilities","CUSTOM_PROPERTY_REGEX","HYPHEN_REGEX","NO_HYPHEN_REGEX","VENDOR_PREFIX_REGEX","MS_VENDOR_PREFIX_REGEX","skipCamelCase","capitalize","character","trimHyphen","prefix","camelCase","style_to_object_1","utilities_1","require$$1","StyleToJS","output","pointEnd","point","pointStart","type","stringifyPosition","VFileMessage","causeOrReason","optionsOrParentOrPlace","origin","reason","legacyCause","parent","own","emptyMap","tableElements","tableCellElement","docs","toJsxRuntime","tree","filePath","developmentCreate","productionCreate","state","result","one","element","mdxExpression","mdxJsxElement","mdxEsm","root","text","parentSchema","findComponentFromName","props","createElementProps","children","createChildren","child","addNode","addChildren","expression","assert","crashEstree","createJsxElementProps","jsx","jsxs","fn","jsxDEV","isStaticChildren","alignValue","createProperty","objectExpression","countsByName","count","commas","spaces","parseStyle","transformStylesToCssCasing","styleToJs","cause","message","allowExpression","identifiers","isIdentifierName","place","domCasing","cssCasing","from","transformStyleToCssCasing","to","toDash","convert","test","castFactory","anyFactory","propsFactory","typeFactory","tests","any","parameters","checkAsRecord","all","nodeAsRecord","testFunction","looksLikeANode","CONTINUE","EXIT","SKIP","visitParents","visitor","reverse","is","step","factory","parents","visit","subresult","offset","grandparents","toResult","nodeAsParent","testOrVisitor","visitorOrReverse","maybeReverse","overload","zwitch","handlers","id","htmlVoidElements","ccount","source","clone","something","doClone","cloneArray","cloneObj","arr","r","len","obj","mergeObjects","target","sources","basename","path","idx","CAPTURING_REGEX_SOURCE","RegexSource","regexSource","captureSource","captureIndices","commandIndex","command","capture","strcmp","a","b","strArrCmp","len1","len2","res","isValidHexColor","hex","escapeRegExpCharacters","CachedFn","Theme","_colorMap","_defaults","_root","colorMap","parseTheme","resolveParsedThemeRules","scopeName","scopePath","effectiveRule","v","_scopePathMatchesParentScopes","StyleAttributes","ScopeStack","_ScopeStack","scopeNames","segments","item","other","base","parentScopes","scopePattern","scopeMustMatch","_matchesScope","fontStyle","foregroundId","backgroundId","resultLen","entry","scopes","_scope","j","lenJ","foreground","background","scope","ParsedThemeRule","FontStyle","FontStyle2","parsedThemeRules","defaultFontStyle","defaultForeground","defaultBackground","incomingDefaults","ColorMap","defaults","ThemeTrieElement","ThemeTrieElementRule","rule","color","emptyParentScopes","_ThemeTrieElementRule","scopeDepth","_ThemeTrieElement","_mainRule","rulesWithParentScopes","_children","aParentIndex","bParentIndex","parentScopeLengthDiff","dotIndex","head","tail","EncodedTokenMetadata","_EncodedTokenMetadata","encodedTokenAttributes","languageId","tokenType","containsBalancedBrackets","_languageId","_tokenType","_containsBalancedBracketsBit","_fontStyle","_foreground","_background","createMatchers","selector","matchesName","results","tokenizer","newTokenizer","priority","matcher","parseConjunction","parseOperand","expressionToNegate","matcherInput","expressionInParents","parseInnerExpression","isIdentifier","matchers","matcher2","regex","disposeOnigString","TopLevelRuleReference","TopLevelRepositoryRuleReference","ruleName","ExternalReferenceCollector","reference","ScopeDependencyProcessor","repo","initialScopeName","q","deps","dep","collectReferencesOfReference","baseGrammarScopeName","selfGrammar","baseGrammar","collectExternalReferencesInTopLevelRule","collectExternalReferencesInTopLevelRepositoryRule","injections","injection","context","collectExternalReferencesInRules","patternRepository","include","parseInclude","newContext","BaseReference","SelfReference","RelativeReference","TopLevelReference","TopLevelRepositoryReference","indexOfSharp","HAS_BACK_REFERENCES","BACK_REFERENCING_END","endRuleId","whileRuleId","Rule","$location","contentName","location","lineText","CaptureRule","retokenizeCapturedWithRuleId","grammar","out","endRegexSource","allowA","allowG","MatchRule","captures","RegExpSource","RegExpSourceList","IncludeOnlyRule","patterns","pattern","BeginEndRule","begin","beginCaptures","endCaptures","applyEndPatternLast","BeginWhileRule","_while","whileCaptures","RuleFactory","_RuleFactory","helper","desc","repository","maximumCaptureId","captureId","numericCaptureId","ruleId","localIncludedRule","externalGrammarName","externalGrammarInclude","externalGrammar","externalIncludedRule","skipRule","_RegExpSource","regExpSource","lastPushedPos","hasAnchor","nextCh","newSource","capturedValues","g1","A0_G0_result","A0_G1_result","A1_G0_result","A1_G1_result","ch","onigLib","regExps","e","CompiledRule","string","startPosition","BasicScopeAttributes","BasicScopeAttributesProvider","_BasicScopeAttributesProvider","initialLanguageId","embeddedLanguages","ScopeMatcher","standardTokenType","escapedScopes","TokenizeStringResult","stack","stoppedEarly","_tokenizeString","isFirstLine","linePos","lineTokens","checkWhileConditions","timeLimit","lineLength","STOP","anchorPosition","whileCheckResult","_checkWhileConditions","startTime","scanNext","matchRuleOrInjections","matchedRuleId","hasAdvanced","poppedRule","handleCaptures","popped","_rule","beforePush","nameScopesList","pushedRule","contentNameScopesList","whileRules","nodeRule","whileRule","ruleScanner","findOptions","prepareRuleWhileSearch","matchResult","matchRule","injectionResult","matchInjections","matchResultScore","injectionResultScore","prepareRuleSearch","bestMatchRating","bestMatchCaptureIndices","bestMatchRuleId","bestMatchResultPriority","matchRating","lineTextContent","localStack","maxEnd","captureRule","captureIndex","stackClone","onigSubStr","captureRuleScopeName","captureRuleScopesList","LocalStackElement","endPos","createGrammar","initialLanguage","tokenTypes","balancedBracketSelectors","grammarRepository","Grammar","collectInjections","ruleFactoryHelper","nameMatcher","identifers","lastIndex","identifier","scopesAreMatching","thisScopeName","_rootScopeName","_onigLib","initGrammar","scopeName2","rawInjections","injectionScopeNames","injectionScopeName","injectionGrammar","i1","i2","rawIncludedGrammar","prevState","emitBinaryTokens","StateStackImpl","rawDefaultMetadata","defaultStyle","defaultMetadata","rootScopeName","scopeList","AttributedScopeStack","onigLineText","LineTokens","_AttributedScopeStack","tokenAttributes","namesScopeList","current","frame","rawRootMetadata","rootStyle","resolvedTokenAttributes","existingTokenAttributes","basicScopeAttributes","styleAttributes","rawMetadata","newPath","scopeThemeMatchResult","metadata","self","_StateStackImpl","enterPos","anchorPos","beginRuleCapturedEOL","endRule","el","outIndex","contentNameScopeStack","BalancedBracketSelectors","balancedBracketScopes","unbalancedBracketScopes","excluder","includer","tokenTypeOverrides","endIndex","scopesList","scopes2","SyncRegistry","theme","targetScope","rawGrammar","Registry","configuration","dependencyProcessor","request","INITIAL","defaultSubsetRegex","surrogatePairsRegex","controlCharactersRegex","regexEscapeRegex","subsetToRegexCache","core","charactersToExpressionCached","basic","surrogate","pair","subset","cached","charactersToExpression","groups","hexadecimalRegex","toHexadecimal","code","next","omit","decimalRegex","toDecimal","characterEntitiesLegacy","characterEntitiesHtml4","dangerous","characters","notAlphanumericRegex","toNamed","formatSmart","numeric","named","decimal","stringifyEntities","htmlCommentRegex","bogusCommentEntitySubset","commentEntitySubset","_1","_2","encode","doctype","_3","siblingAfter","siblings","siblingBefore","emptyChildren","sibling","includeWhitespace","omission","closing","body","headOrColgroupOrCaption","dd","dt","li","optgroup","option","p","rubyElement","tbody","cells","tfoot","thead","tr","opening","colgroup","seen","previous","constants","selfClosing","parts","last","serializeAttributes","content","serializeAttribute","x","y","quote","textEntitySubset","raw","handle","invalid","unknown","node_","emptyCharacterReferences","toHtml","options_","alternative","resolveColorReplacements","replacements","themeName","applyColorReplacements","toArray","normalizeGetter","isPlainLang","lang","isSpecialLang","isNoneTheme","isSpecialTheme","addClassToHast","className","targets","splitLines","preserveEnding","line","createPositionConverter","indexToPos","posToIndex","DEFAULT_COLOR_LIGHT_DARK","COLOR_KEYS","splitToken","offsets","lastOffset","splitTokens","breakpoints","sorted","breakpointsInToken","flatTokenVariants","merged","variantsOrder","cssVariablePrefix","defaultColor","colorsRendering","styles","t","getTokenStyleObject","styleKeys","mergedStyles","varKey","keyName","cur","lightIndex","darkIndex","ShikiError$1","lightValue","darkValue","decorations","stringifyTokenStyle","_grammarStateMap","setLastGrammarStateToMap","keys","getLastGrammarStateFromMap","GrammarState","themes","args","stacksMap","getScopes","visited","pushScope","stack2","getGrammarStack","transformerDecorations","map","getContext","shiki","normalizePosition","converter","d","verifyIntersections","codeEl","ctx","applyLineSection","decoration","lineEl","startIndex","applyDecoration","wrapper","applyLine","transform","lineApplies","items","foo","bar","isFooHasBarStart","isFooHasBarEnd","isBarHasFooStart","isBarHasFooEnd","builtInTransformers","getTransformers","transformers","sortTransformersByEnforcement","pre","post","transformer","namedColors","findSequence","nextEscape","nextClose","parseColor","sequence","colorMode","rgb","parseSequence","commands","codeInt","createAnsiSequenceParser","decorations2","findResult","styleToken","defaultNamedColorsMap","createColorPalette","namedColorsMap","namedColor","rgbColor","colorTable","getColorTable","levels","g","level","tableColor","tokenizeAnsiWithTheme","fileContents","colorReplacements","colorPalette","parser","bgColor","dimColor","hexMatch","alpha","cssVarMatch","codeToTokensBase","internal","_grammar","tokenizeWithTheme","getLastGrammarState","_tokenizeWithTheme","grammarState","tokenizeMaxLineLength","tokenizeTimeLimit","stateStack","actual","final","lineOffset","resultWithScopes","tokensWithScopes","tokensWithScopesIndex","tokensLength","nextStartIndex","themeSettingsSelectors","setting","selectors","tokenWithScopes","tokenWithScopesText","explainThemeScopesNameOnly","explainThemeScopesFull","themeSelectors","explainThemeScope","matchesOne","matches","selectorParentIndex","parentIndex","selectorPieces","codeToTokensWithThemes","themedTokens","tokens2","syncThemesTokenization","mergedTokens","lineIdx","_token","tokenIdx","mergedToken","themeIdx","__","___","mergedGrammarState","s","outThemes","outLines","indexes","minLength","n","codeToTokens","bg","fg","themeTokens","themeRegs","themesOrder","themeColorReplacements","mapThemeColors","_theme","cssVar","t2","codeToHast","transformerContext","_code","_options","mergeWhitespaces","mergeSameStyleTokens","mergeWhitespaceTokens","splitWhitespaceTokens","mergeAdjacentStyledTokens","contextSource","tokensToHast","structure","tabindex","preNode","codeNode","lineNodes","lineNode","col","tokenNode","newLine","carryOnContent","firstOffset","couldMerge","leading","trailing","expanded","prevToken","prevStyle","currentStyle","isPrevDecorated","isDecorated","hastToHtml","codeToHtml","VSCODE_FALLBACK_EDITOR_FG","VSCODE_FALLBACK_EDITOR_BG","RESOLVED_KEY","normalizeTheme","rawTheme","globalSetting","replacementCount","replacementMap","getReplacementColor","replaceFg","replaceBg","replacement","resolveLangs","langs","l","resolveThemes","_emitDeprecation","warnDeprecated","version","ShikiError","Registry$1","_resolver","_themes","_langs","_alias","textmateTheme","resolved","embeddedLazilyBy","grammarConfig","alias","langsGraphArray","missingLangs","dependents","embeddedLang","Resolver","engine","langIdOrAlias","scopeParts","subScopeName","instancesCount","createShikiInternalSync","isDisposed","resolver","_registry","_lastTheme","getLanguage","ensureNotDisposed","_lang","getTheme","setTheme","getLoadedThemes","getLoadedLanguages","loadLanguageSync","langs2","loadLanguage","loadThemeSync","themes2","loadTheme","dispose","createShikiInternal","createHighlighterCore","options2","toString","InlineCodeHandlers","_tree","languagePrefix$1","PreHandler","classes","languageClass","languagePrefix","rehypeShikiFromHighlighter","highlighter","addLanguageClass","parseMetaString","cache","defaultLanguage","fallbackLanguage","onError","stripEndNewline","inline","lazy","highlight","metaString","meta","cacheKey","cachedValue","codeOptions","fragment","queue","handler","parsed","lazyLoad","processNode","targetLang","run","parseMetaHighlightString","num","v2","symbol","transformerMetaHighlight","parseMetaHighlightWords","transformerMetaWordHighlight","words","word","findAllSubstringIndexes","substr","cursor","o","u","C","T","M","Y","F","S","ee","K","w","R","A","I","k","L","f","Q","P","te","h","E","z","X","G","U","H","Z","V","J","$","W","N","D","B","O","ne","oe","ae","ie","se","de","noncapturingDelim","incrementIfAtLeast","threshold","spliceStr","oldValue","newValue","Context","replaceUnescaped","needle","negated","numCharClassesOpen","$skip","forEachUnescaped","callback","execUnescaped","hasUnescaped","getGroupContents","contentsStartPos","contentsEndPos","numGroupsOpen","atomicPluginToken","atomic","data","hiddenCaptures","captureTransfers","aGDelim","emulatedAGDelim","captureNumMap","addedHiddenCaptures","numCapturesBeforeAG","numAGs","aGPos","hasProcessedAG","numGroupsOpenInAG","inAG","capturingStart","noncapturingStart","addedCaptureNum","newCaptureTransfers","backrefNum","wrappedBackrefNum","bNum","baseQuantifier","possessivePluginToken","possessive","openGroupIndices","lastGroupIndex","lastCharClassIndex","lastToken","qBase","qMod","invalidQ","charsAdded","nodeIndex","gRToken","recursiveToken","namedCaptureDelim","captureDelim","overlappingRecursionMsg","recursion","mode","hasNumberedBackref","groupContentsStartPos","openGroups","hasRecursed","numCapturesPassed","captureName","rDepth","gRNameOrNum","gRDepth","assertMaxInBounds","left","right","reps","makeRecursive","mapCaptureTransfers","isWithinReffedGroup","startPos","groupContents","groupContentsLeft","groupContentsRight","numAddedHiddenCapturesPreExpansion","expansion","isUnnamedCapture","max","errMsg","isSubpattern","namesInRecursed","repeatWithDepth","direction","getDepthNum","depthNum","unnamed","backref","suffix","numCapturesAddedInExpansion","numCapturesInLeft","recursionDelimCaptureNum","numCapturesInRight","numCapturesAddedInLeft","newTo","newFrom","cp","envFlags","getNewCurrentFlags","enable","disable","getOrInsert","defaultValue","isMinTarget","min","EsVersion","throwIfNullish","Target","getOptions","opts","asciiSpaceChar","CharsWithoutIgnoreCaseExpansion","defaultWordChar","getIgnoreCaseMatchChars","char","set","lower","upper","title","LowerToTitleCaseMap","altLower","LowerToAlternativeLowerCaseMap","altUpper","LowerToAlternativeUpperCaseMap","JsUnicodePropertyMap","slug","titleEntry","titleRange","PosixClassMap","range","range2","codePoint","UnicodePropertiesWithSpecificCase","ast","addParentProperties","firstPassState","traverse","FirstPassVisitor","globalFlags","secondPassState","SecondPassVisitor","thirdPassState","ThirdPassVisitor","replaceWith","kind","innerGroup","createGroup","createLookaroundAssertion","createUnicodeProperty","outerGroup","createQuantifier","setParentDeep","flagDirectivesByAlt","flagDirectives","forwardSiblingAlt","flags","getCombinedFlagModsFromFlagNodes","flagGroup","container","remove","negate","asciiWordBoundaries","avoidSubclass","supportedGNodes","wordIsAscii","createAlternative","createAssertion","createCharacter","parseFragment","prev","isAlwaysNonZeroLength","setParent","jsGroupNameMap","ref","isValidJsGroupName","getAndStoreJsGroupName","subroutineRefMap","cc","createCharacterClass","accuracy","minTargetEs2024","digitIsAscii","spaceIsAscii","createCharacterSet","setNegate","eBase","emoji","ascii","slug2","removeAllPrevSiblings","removeAllNextSiblings","firstAlt","topLevel","hasOnlyChild","lookbehind","group","leadingGs","hasAltWithLeadG","hasAltWithoutLeadG","alt","leadingG","getLeadingG","passedLookbehind","strategy","multiplexCapturesToLeftByRef","reffedNodesByReferencer","orphan","node2","skip","groupOriginByCopy","groupsByName","openRefs","recursion2","createRecursion","multiplexNodes","multiplex","groupsWithSameName","hasDuplicateNameToRemove","groupInfo","isRecursive","reffed","reffedGroupNode","isGlobalRecursion","expandedSubroutine","cloneCapturingGroup","reffedGroupFlagMods","getAllParents","reffedGroupFlags","areFlagsEqual","getFlagModsFromFlags","participants","canParticipateWithNode","createBackreference","numCapsNeeded","emptyCapture","createCapturingGroup","rightmostPoint","kidsOfParent","getKids","kid","isAncestorOf","originMap","up","up2","store","createSubroutine","filterFn","jsName","flagNodes","flagProps","combinedFlags","dotAll","ignoreCase","mods","els","firstToConsider","isLoneGLookaround","isAlwaysZeroLength","gNodesForGroup","descendant","kids","alts","generate","minTargetEs2025","recursionLimit","hasCaseInsensitiveNode","hasCaseSensitiveNode","iStack","traverse2","FlagModifierVisitor","isIOn","appliedGlobalFlags","lastNode","gen","generator","isAnyGroup","currentModI","charHasCase","getCasesOutsideCharClassRange","escaped","getCharEscape","cases","isLiteralHyphen","createCharacter2","genClass","negatedChildClasses","createGroup2","groupFirstAlt","newAlt","createAlternative2","firstEl","escOpts","minStr","maxStr","extraChars","charsOutsideRange","getCodePointRangesFromChars","atomic2","currentFlags","contents","getGroupPrefix","getQuantifierStr","limit","BaseEscapeChars","CharClassEscapeChars","CharClassEscapeCharsFlagV","CharCodeEscapeMap","casedRe","firstOnly","found","caseOfChar","escDigit","inCharClass","useFlagV","isDigitCharCode","escapeChars","chars","codePoints","flagMods","useFlagMods","EmulatedRegExp","_EmulatedRegExp","#captureMap","#compiled","#pattern","#nameMap","#strategy","lazyCompile","createCaptureMap","useLastIndex","#execCore","adjustMatchDetailsForOffset","matchCopy","indicesCopy","mappedNums","hidden","transferTo","createNameMap","hasIndices","indices","groupIndices","transfers","captureMap","numCaptures","toRegExp","toRegExpDetails","onigurumaAst","parse2","regexPlusAst","generated","recursionResult","possessiveResult","atomicResult","details","MAX","JavaScriptScanner","forgiving","regexConstructor","pending","indice","regexp","minIndex","defaultJavaScriptRegexConstructor","createJavaScriptRegexEngine","defaultHighlightOptions","rehypeCodeBlockPlugin","_index","isCodeBlock","cn","createConfiguredShikiRehypePlugins","highlighterInstance","Fragment","SyntaxHighlight","memo","embedded","syntaxHighlighting","useZudoku","invariant","highlightedCode","EmbeddedCodeBlock","CodeBlock"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92]}