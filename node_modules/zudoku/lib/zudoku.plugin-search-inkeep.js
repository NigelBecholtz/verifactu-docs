import { j as o } from "./jsx-runtime-DywqP_6a.js";
import { useMemo as l, useState as h, useEffect as c } from "react";
import { C as p } from "./ClientOnly-E7hGysn1.js";
const u = {
  primaryBrandColor: "#26D6FF"
}, m = {
  shortcutKey: "k"
}, S = {
  placeholder: "Search..."
}, f = {
  aiAssistantName: "Assistant"
}, k = ({
  isOpen: n,
  onClose: r,
  settings: a
}) => {
  const s = l(
    () => ({
      baseSettings: {
        ...u,
        ...a,
        colorMode: {
          sync: {
            target: "html",
            attributes: ["class"],
            isDarkMode: (e) => e.class?.includes("dark") ?? !1
          }
        }
      },
      modalSettings: {
        ...m,
        onOpenChange: (e) => {
          e || r();
        }
      },
      searchSettings: S,
      aiChatSettings: f
    }),
    [r, a]
  ), [t, i] = h(
    typeof window < "u" && window.Inkeep?.ModalSearchAndChat ? window.Inkeep.ModalSearchAndChat(s) : void 0
  );
  return c(() => {
    if (t) return;
    const e = setInterval(() => {
      if (typeof window < "u" && window.Inkeep?.ModalSearchAndChat) {
        const d = window.Inkeep.ModalSearchAndChat(s);
        i(d), clearInterval(e);
      }
    }, 100);
    return () => clearInterval(e);
  }, [s, t]), c(() => {
    t && t.update({ modalSettings: { isOpen: n } });
  }, [n, t]), null;
}, C = (n) => ({
  getHead: () => /* @__PURE__ */ o.jsx(
    "script",
    {
      type: "module",
      src: "https://cdn.jsdelivr.net/npm/@inkeep/cxkit-js@0.5.90/+esm",
      defer: !0
    }
  ),
  renderSearch: ({
    isOpen: r,
    onClose: a
  }) => /* @__PURE__ */ o.jsx(p, { children: /* @__PURE__ */ o.jsx(k, { isOpen: r, onClose: a, settings: n }) })
});
export {
  C as inkeepSearchPlugin
};
//# sourceMappingURL=zudoku.plugin-search-inkeep.js.map
