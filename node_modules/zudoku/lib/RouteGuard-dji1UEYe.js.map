{"version":3,"file":"RouteGuard-dji1UEYe.js","sources":["../src/lib/components/context/BypassProtectedRoutesContext.ts","../src/lib/core/RouteGuard.tsx"],"sourcesContent":["import { createContext } from \"react\";\n\nexport const BypassProtectedRoutesContext = createContext(false);\n","import { useQuery } from \"@tanstack/react-query\";\nimport { Helmet } from \"@zudoku/react-helmet-async\";\nimport { use } from \"react\";\nimport { matchPath, Outlet, useLocation, useNavigate } from \"react-router\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n} from \"zudoku/ui/Dialog.js\";\nimport { useAuth } from \"../authentication/hook.js\";\nimport { BypassProtectedRoutesContext } from \"../components/context/BypassProtectedRoutesContext.js\";\nimport { useZudoku } from \"../components/context/ZudokuContext.js\";\nimport { ZudokuError } from \"../util/invariant.js\";\nimport { useLatest } from \"../util/useLatest.js\";\n\nexport const SEARCH_PROTECTED_SECTION = \"protected\";\n\nexport const RouteGuard = () => {\n  const auth = useAuth();\n  const zudoku = useZudoku();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const latestPath = useLatest(location.pathname);\n  const shouldBypass = use(BypassProtectedRoutesContext);\n  const { protectedRoutes } = zudoku.options;\n\n  const authCheckFn =\n    !shouldBypass && protectedRoutes\n      ? Object.entries(protectedRoutes).find(([path]) =>\n          matchPath({ path, end: true }, location.pathname),\n        )?.[1]\n      : undefined;\n\n  const isProtectedRoute = authCheckFn !== undefined;\n  const needsToSignIn =\n    isProtectedRoute && !authCheckFn({ auth, context: zudoku });\n\n  useQuery({\n    queryKey: [\"login-redirect\"],\n    queryFn: async () => {\n      await new Promise((resolve) => setTimeout(resolve, 1200));\n      await zudoku.authentication?.signIn({\n        redirectTo: latestPath.current,\n      });\n      return true;\n    },\n    enabled: typeof window !== \"undefined\" && needsToSignIn && !auth.isPending,\n  });\n\n  if (needsToSignIn) {\n    return (\n      <Dialog\n        open={true}\n        onOpenChange={(open) => {\n          if (!open) {\n            void navigate(-1);\n          }\n        }}\n      >\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>Logging you in...</DialogTitle>\n          </DialogHeader>\n          <DialogDescription>\n            Please wait while we log you in.\n          </DialogDescription>\n        </DialogContent>\n      </Dialog>\n    );\n  }\n\n  if (isProtectedRoute && !auth.isAuthEnabled) {\n    throw new ZudokuError(\"Authentication is not enabled\", {\n      title: \"Authentication is not enabled\",\n      developerHint:\n        \"To use protectedRoutes you need authentication to be enabled\",\n    });\n  }\n\n  return (\n    <>\n      {shouldBypass && (\n        <Helmet>\n          <meta\n            name=\"pagefind\"\n            data-pagefind-filter={`section:${SEARCH_PROTECTED_SECTION}`}\n            content=\"true\"\n          />\n        </Helmet>\n      )}\n      <Outlet />\n    </>\n  );\n};\n"],"names":["BypassProtectedRoutesContext","createContext","SEARCH_PROTECTED_SECTION","RouteGuard","auth","useAuth","zudoku","useZudoku","navigate","useNavigate","location","useLocation","latestPath","useLatest","shouldBypass","use","protectedRoutes","authCheckFn","path","matchPath","isProtectedRoute","needsToSignIn","useQuery","resolve","jsx","Dialog","open","DialogContent","DialogHeader","DialogTitle","DialogDescription","ZudokuError","jsxs","Fragment","Helmet","Outlet"],"mappings":";;;;;;;;;AAEO,MAAMA,IAA+BC,EAAc,EAAK,GCelDC,IAA2B,aAE3BC,IAAa,MAAM;AAC9B,QAAMC,IAAOC,EAAA,GACPC,IAASC,EAAA,GACTC,IAAWC,EAAA,GACXC,IAAWC,EAAA,GACXC,IAAaC,EAAUH,EAAS,QAAQ,GACxCI,IAAeC,EAAIf,CAA4B,GAC/C,EAAE,iBAAAgB,MAAoBV,EAAO,SAE7BW,IACJ,CAACH,KAAgBE,IACb,OAAO,QAAQA,CAAe,EAAE;AAAA,IAAK,CAAC,CAACE,CAAI,MACzCC,EAAU,EAAE,MAAAD,GAAM,KAAK,MAAQR,EAAS,QAAQ;AAAA,EAAA,IAC9C,CAAC,IACL,QAEAU,IAAmBH,MAAgB,QACnCI,IACJD,KAAoB,CAACH,EAAY,EAAE,MAAAb,GAAM,SAASE,GAAQ;AAc5D,MAZAgB,EAAS;AAAA,IACP,UAAU,CAAC,gBAAgB;AAAA,IAC3B,SAAS,aACP,MAAM,IAAI,QAAQ,CAACC,MAAY,WAAWA,GAAS,IAAI,CAAC,GACxD,MAAMjB,EAAO,gBAAgB,OAAO;AAAA,MAClC,YAAYM,EAAW;AAAA,IAAA,CACxB,GACM;AAAA,IAET,SAAS,OAAO,SAAW,OAAeS,KAAiB,CAACjB,EAAK;AAAA,EAAA,CAClE,GAEGiB;AACF,WACEG,gBAAAA,EAAAA;AAAAA,MAACC;AAAA,MAAA;AAAA,QACC,MAAM;AAAA,QACN,cAAc,CAACC,MAAS;AACtB,UAAKA,KACElB,EAAS,EAAE;AAAA,QAEpB;AAAA,QAEA,iCAACmB,GAAA,EACC,UAAA;AAAA,UAAAH,gBAAAA,MAACI,GAAA,EACC,UAAAJ,gBAAAA,EAAAA,IAACK,GAAA,EAAY,UAAA,oBAAA,CAAiB,GAChC;AAAA,UACAL,gBAAAA,EAAAA,IAACM,KAAkB,UAAA,mCAAA,CAEnB;AAAA,QAAA,EAAA,CACF;AAAA,MAAA;AAAA,IAAA;AAKN,MAAIV,KAAoB,CAAChB,EAAK;AAC5B,UAAM,IAAI2B,EAAY,iCAAiC;AAAA,MACrD,OAAO;AAAA,MACP,eACE;AAAA,IAAA,CACH;AAGH,SACEC,gBAAAA,EAAAA,KAAAC,YAAA,EACG,UAAA;AAAA,IAAAnB,2BACEoB,GAAA,EACC,UAAAV,gBAAAA,EAAAA;AAAAA,MAAC;AAAA,MAAA;AAAA,QACC,MAAK;AAAA,QACL,wBAAsB,WAAWtB,CAAwB;AAAA,QACzD,SAAQ;AAAA,MAAA;AAAA,IAAA,GAEZ;AAAA,0BAEDiC,GAAA,CAAA,CAAO;AAAA,EAAA,GACV;AAEJ;"}