import { j as o } from "./jsx-runtime-DywqP_6a.js";
import { CheckIcon as d, CopyIcon as h } from "lucide-react";
import { lazy as t, Suspense as u, useRef as x } from "react";
import { c as p } from "./cn-dYga0KKN.js";
import { u as b } from "./useCopyToClipboard-B_085nfO.js";
const j = {
  typescript: {
    pattern: /^(ts|typescript)$/,
    icon: t(() => import("./typescript-7qOVMjOC.js")),
    width: 15
  },
  javascript: {
    pattern: /^(js|javascript)$/,
    icon: t(() => import("./javascript-CrY8dcGu.js"))
  },
  react: {
    pattern: /^(react|tsx|jsx)$/,
    icon: t(() => import("./react-CQvDN20M.js")),
    width: 22
  },
  markdown: {
    pattern: /^(md|markdown)$/,
    icon: t(() => import("./markdown-BD9bIU5J.js")),
    width: 22
  },
  mdx: {
    pattern: /^mdx$/,
    icon: t(() => import("./mdx-G25UCvf3.js")),
    width: 28
  },
  java: {
    pattern: /^(java)$/,
    icon: t(() => import("./java-DUh-EL8n.js")),
    width: 22
  },
  json: {
    pattern: /^jsonc?$/,
    icon: t(() => import("./json-DLK2_sdf.js"))
  },
  yaml: {
    pattern: /^yaml$/,
    icon: t(() => import("./yaml-DUi-dbfu.js"))
  },
  toml: {
    pattern: /^toml$/,
    icon: t(() => import("./toml-BJsCc8TC.js"))
  },
  shell: {
    pattern: /^(shell|bash|sh|zsh|term|terminal|ansi)$/,
    icon: t(() => import("./shell-BFu0M6m4.js"))
  },
  python: {
    pattern: /^(py|python)$/,
    icon: t(() => import("./python-BaF2byD-.js"))
  },
  csharp: {
    pattern: /^(cs|csharp|vb)$/,
    icon: t(() => import("./csharp-rrJEDRrV.js")),
    width: 20
  },
  rust: {
    pattern: /^(rs|rust)$/,
    icon: t(() => import("./rust-IfSC62c5.js")),
    width: 20
  },
  ruby: {
    pattern: /^(rb|ruby)$/,
    icon: t(() => import("./ruby-CmxRVHMR.js"))
  },
  php: {
    pattern: /^php$/,
    icon: t(() => import("./php-BeG18bSy.js")),
    width: 24
  },
  html: {
    pattern: /^html?$/,
    icon: t(() => import("./html-D_7om-nA.js")),
    width: 15
  },
  css: {
    pattern: /^css$/,
    icon: t(() => import("./css-Dpk9bCql.js"))
  },
  objectivec: {
    pattern: /^(objc|objectivec)$/,
    icon: t(() => import("./objectivec-DDpj0aWX.js")),
    width: 16
  },
  swift: {
    pattern: /^swift$/,
    icon: t(() => import("./swift-DckbsN4v.js"))
  },
  go: {
    pattern: /^go$/,
    icon: t(() => import("./go-D8SJIQ0Z.js")),
    width: 28
  },
  xml: {
    pattern: /^xml$/,
    icon: t(() => import("./xml-DAaTIkBX.js"))
  },
  kotlin: {
    pattern: /^(kt|kotlin)$/,
    icon: t(() => import("./kotlin-rJMOGl7D.js")),
    width: 14
  },
  graphql: {
    pattern: /^(gql|graphql)$/,
    icon: t(() => import("./graphql-aeVKJNa2.js"))
  }
}, w = ({ language: r }) => {
  if (!r) return null;
  const e = Object.values(j).find((n) => n.pattern.test(r));
  if (!e) return null;
  const i = e.width ?? 18;
  return /* @__PURE__ */ o.jsx(u, { fallback: /* @__PURE__ */ o.jsx("div", { style: { width: i, height: "1em" } }), children: /* @__PURE__ */ o.jsx(e.icon, { className: "h-auto", style: { width: i } }) });
}, k = ({
  children: r,
  title: e = "Code",
  language: i,
  showCopy: n = "hover",
  showLanguageIndicator: $,
  showLineNumbers: c,
  ...m
}) => {
  const [s, l] = b(), a = x(null);
  return r ? /* @__PURE__ */ o.jsxs(
    "div",
    {
      className: p(
        "border code-block-wrapper relative group rounded-md overflow-hidden",
        c && "line-numbers",
        m.className
      ),
      children: [
        /* @__PURE__ */ o.jsxs("div", { className: "border-b flex items-center h-10 font-sans bg-black/2", children: [
          /* @__PURE__ */ o.jsxs("div", { className: "flex items-center gap-1.5 flex-1 text-sm w-full px-3", children: [
            /* @__PURE__ */ o.jsx(w, { language: i }),
            e
          ] }),
          " ",
          n !== "never" && /* @__PURE__ */ o.jsx(
            "button",
            {
              type: "button",
              "aria-label": "Copy code",
              title: "Copy code",
              className: p(
                "transition px-2 py-2 mx-1 rounded-sm",
                !s && "hover:bg-accent hover:brightness-95"
              ),
              disabled: s,
              onClick: () => {
                a.current?.textContent && l(a.current.textContent);
              },
              children: s ? /* @__PURE__ */ o.jsx(d, { className: "text-emerald-600", size: 14 }) : /* @__PURE__ */ o.jsx(h, { size: 14 })
            }
          )
        ] }),
        /* @__PURE__ */ o.jsx(
          "div",
          {
            className: "code-block text-sm not-prose scrollbar [&_code]:px-3 [&_code]:py-2",
            ref: a,
            children: r
          }
        )
      ]
    }
  ) : null;
};
export {
  k as C,
  w as L
};
//# sourceMappingURL=CodeBlock-i0BM_QFf.js.map
