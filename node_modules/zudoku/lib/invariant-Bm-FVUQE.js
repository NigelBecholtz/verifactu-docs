var i = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function f(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
function a(e) {
  if (Object.prototype.hasOwnProperty.call(e, "__esModule")) return e;
  var t = e.default;
  if (typeof t == "function") {
    var r = function o() {
      return this instanceof o ? Reflect.construct(t, arguments, this.constructor) : t.apply(this, arguments);
    };
    r.prototype = t.prototype;
  } else r = {};
  return Object.defineProperty(r, "__esModule", { value: !0 }), Object.keys(e).forEach(function(o) {
    var n = Object.getOwnPropertyDescriptor(e, o);
    Object.defineProperty(r, o, n.get ? n : {
      enumerable: !0,
      get: function() {
        return e[o];
      }
    });
  }), r;
}
function l(e, t) {
  if (e)
    return;
  const r = typeof t == "function" ? t() : t;
  throw new u(r ?? "Invariant failed");
}
class u extends Error {
  developerHint;
  title;
  constructor(t, { developerHint: r, title: o, cause: n } = {}) {
    super(t, { cause: n }), this.name = "ZudokuError", this.title = o, this.developerHint = r;
  }
}
export {
  u as Z,
  a,
  i as c,
  f as g,
  l as i
};
//# sourceMappingURL=invariant-Bm-FVUQE.js.map
