import { z } from "zod";
import type { OpenAPIDocument } from "../../lib/oas/graphql/index.js";
export declare const BuildProcessorSchema: z.ZodCustom<(data: {
    file: string;
    schema: OpenAPIDocument;
    dereference: (schema: OpenAPIDocument) => Promise<OpenAPIDocument>;
}) => OpenAPIDocument | Promise<OpenAPIDocument>, (data: {
    file: string;
    schema: OpenAPIDocument;
    dereference: (schema: OpenAPIDocument) => Promise<OpenAPIDocument>;
}) => OpenAPIDocument | Promise<OpenAPIDocument>>;
export type Processor = z.infer<typeof BuildProcessorSchema>;
export type ProcessorArg = Parameters<Processor>[0];
export declare const BuildConfigSchema: z.ZodObject<{
    processors: z.ZodOptional<z.ZodArray<z.ZodCustom<(data: {
        file: string;
        schema: OpenAPIDocument;
        dereference: (schema: OpenAPIDocument) => Promise<OpenAPIDocument>;
    }) => OpenAPIDocument | Promise<OpenAPIDocument>, (data: {
        file: string;
        schema: OpenAPIDocument;
        dereference: (schema: OpenAPIDocument) => Promise<OpenAPIDocument>;
    }) => OpenAPIDocument | Promise<OpenAPIDocument>>>>;
    remarkPlugins: z.ZodOptional<z.ZodCustom<import("unified").PluggableList | null | undefined, import("unified").PluggableList | null | undefined>>;
    rehypePlugins: z.ZodOptional<z.ZodCustom<import("unified").PluggableList | null | undefined, import("unified").PluggableList | null | undefined>>;
    prerender: z.ZodOptional<z.ZodObject<{
        workers: z.ZodOptional<z.ZodNumber>;
    }, z.core.$strip>>;
}, z.core.$strip>;
export declare const getBuildConfig: () => Promise<{
    processors?: ((data: {
        file: string;
        schema: OpenAPIDocument;
        dereference: (schema: OpenAPIDocument) => Promise<OpenAPIDocument>;
    }) => OpenAPIDocument | Promise<OpenAPIDocument>)[] | undefined;
    remarkPlugins?: import("unified").PluggableList | null | undefined;
    rehypePlugins?: import("unified").PluggableList | null | undefined;
    prerender?: {
        workers?: number | undefined;
    } | undefined;
} | undefined>;
export type BuildConfig = z.infer<typeof BuildConfigSchema>;
export declare function validateBuildConfig(config: unknown): BuildConfig | undefined;
