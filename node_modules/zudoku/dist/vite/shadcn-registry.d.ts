import { z } from "zod";
declare const registryItemCssSchema: z.ZodRecord<z.ZodString, z.ZodLazy<z.ZodUnion<readonly [z.ZodString, z.ZodRecord<z.ZodString, z.ZodUnion<readonly [z.ZodString, z.ZodRecord<z.ZodString, z.ZodString>]>>]>>>;
export type RegistryItemCss = z.infer<typeof registryItemCssSchema>;
declare const registryItemSchema: z.ZodObject<{
    $schema: z.ZodLiteral<"https://ui.shadcn.com/schema/registry-item.json">;
    name: z.ZodString;
    type: z.ZodEnum<{
        "registry:theme": "registry:theme";
        "registry:style": "registry:style";
    }>;
    cssVars: z.ZodOptional<z.ZodObject<{
        theme: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
        light: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
        dark: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, z.core.$strip>>;
    css: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodLazy<z.ZodUnion<readonly [z.ZodString, z.ZodRecord<z.ZodString, z.ZodUnion<readonly [z.ZodString, z.ZodRecord<z.ZodString, z.ZodString>]>>]>>>>;
}, z.core.$strip>;
type RegistryItem = z.infer<typeof registryItemSchema>;
export declare const fetchShadcnRegistryItem: (url: string) => Promise<RegistryItem>;
export {};
