import { z } from "zod";
export declare const EntitlementsSchema: z.ZodObject<{
    devPortalZuploBranding: z.ZodBoolean;
    numberOfProjects: z.ZodNumber;
    numberOfUsers: z.ZodNumber;
    egressGbPerMonth: z.ZodNumber;
    requestsPerMonth: z.ZodNumber;
    numberOfApiKeys: z.ZodNumber;
    customDomains: z.ZodNumber;
    advancedAnalyticsEnabled: z.ZodBoolean;
    devPortalAnalyticsEnabled: z.ZodBoolean;
    premiumSupport: z.ZodBoolean;
    emergencyPhoneSupport: z.ZodBoolean;
    rbacEnabled: z.ZodBoolean;
    onPremEnabled: z.ZodBoolean;
    largeBuildRunners: z.ZodBoolean;
}, z.core.$strip>;
export declare const BuildConfigSchema: z.ZodObject<{
    entitlements: z.ZodObject<{
        devPortalZuploBranding: z.ZodBoolean;
        numberOfProjects: z.ZodNumber;
        numberOfUsers: z.ZodNumber;
        egressGbPerMonth: z.ZodNumber;
        requestsPerMonth: z.ZodNumber;
        numberOfApiKeys: z.ZodNumber;
        customDomains: z.ZodNumber;
        advancedAnalyticsEnabled: z.ZodBoolean;
        devPortalAnalyticsEnabled: z.ZodBoolean;
        premiumSupport: z.ZodBoolean;
        emergencyPhoneSupport: z.ZodBoolean;
        rbacEnabled: z.ZodBoolean;
        onPremEnabled: z.ZodBoolean;
        largeBuildRunners: z.ZodBoolean;
    }, z.core.$strip>;
    environmentType: z.ZodOptional<z.ZodString>;
    deploymentName: z.ZodString;
    deploymentUrl: z.ZodOptional<z.ZodString>;
    projectId: z.ZodOptional<z.ZodString>;
    projectType: z.ZodOptional<z.ZodString>;
    sourceType: z.ZodOptional<z.ZodString>;
    accountName: z.ZodOptional<z.ZodString>;
    projectName: z.ZodOptional<z.ZodString>;
}, z.core.$strip>;
export type BuildConfig = z.infer<typeof BuildConfigSchema>;
export type Entitlements = z.infer<typeof EntitlementsSchema>;
