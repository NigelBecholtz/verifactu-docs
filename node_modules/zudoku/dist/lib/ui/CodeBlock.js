import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { CheckIcon, CopyIcon } from "lucide-react";
import { useRef } from "react";
import { LanguageIcon } from "../components/LanguageIcon.js";
import { cn } from "../util/cn.js";
import { useCopyToClipboard } from "../util/useCopyToClipboard.js";
export const CodeBlock = ({ children, title = "Code", language, showCopy = "hover", showLanguageIndicator, showLineNumbers, ...props }) => {
    const [isCopied, copyToClipboard] = useCopyToClipboard();
    const ref = useRef(null);
    if (!children)
        return null;
    return (_jsxs("div", { className: cn("border code-block-wrapper relative group rounded-md overflow-hidden", showLineNumbers && "line-numbers", props.className), children: [_jsxs("div", { className: "border-b flex items-center h-10 font-sans bg-black/2", children: [_jsxs("div", { className: "flex items-center gap-1.5 flex-1 text-sm w-full px-3", children: [_jsx(LanguageIcon, { language: language }), title] }), " ", showCopy !== "never" && (_jsx("button", { type: "button", "aria-label": "Copy code", title: "Copy code", className: cn("transition px-2 py-2 mx-1 rounded-sm", !isCopied && "hover:bg-accent hover:brightness-95"), disabled: isCopied, onClick: () => {
                            if (!ref.current?.textContent)
                                return;
                            copyToClipboard(ref.current.textContent);
                        }, children: isCopied ? (_jsx(CheckIcon, { className: "text-emerald-600", size: 14 })) : (_jsx(CopyIcon, { size: 14 })) }))] }), _jsx("div", { className: "code-block text-sm not-prose scrollbar [&_code]:px-3 [&_code]:py-2", ref: ref, children: children })] }));
};
//# sourceMappingURL=CodeBlock.js.map