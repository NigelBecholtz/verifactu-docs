import { useMDXComponents as useMDXComponentsImport } from "@mdx-js/react";
import { CACHE_KEYS } from "../components/cache.js";
import { useEvent as useEventImport } from "./useEvent.js";
export declare const useEvent: typeof useEventImport;
export declare const useTheme: () => import("next-themes").UseThemeProps;
export declare const useExposedProps: () => import("../util/useExposedProps.js").ExposedComponentProps;
export declare const useMDXComponents: typeof useMDXComponentsImport;
export declare const useAuth: () => {
    login: () => Promise<void>;
    logout: () => Promise<void>;
    signup: () => Promise<void>;
    isAuthenticated: boolean;
    isPending: boolean;
    profile: import("../authentication/state.js").UserProfile | null;
    providerData: unknown;
    setAuthenticationPending: () => void;
    setLoggedOut: () => void;
    setLoggedIn: ({ profile, providerData, }: {
        profile: import("../authentication/state.js").UserProfile;
        providerData: unknown;
    }) => void;
    isAuthEnabled: boolean;
};
export declare const useZudoku: () => import("../core/ZudokuContext.js").ZudokuContext;
export declare const useCache: () => {
    invalidateCache: (key: keyof typeof CACHE_KEYS) => Promise<void>;
};
export { CACHE_KEYS };
