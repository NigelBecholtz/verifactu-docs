import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from "react/jsx-runtime";
import { Suspense, useEffect } from "react";
import { Outlet } from "react-router";
import { cn } from "../util/cn.js";
import { useScrollToAnchor } from "../util/useScrollToAnchor.js";
import { useScrollToTop } from "../util/useScrollToTop.js";
import { useZudoku } from "./context/ZudokuContext.js";
import { Footer } from "./Footer.js";
import { Header } from "./Header.js";
import { Main } from "./Main.js";
import { Slot } from "./Slot.js";
import { Spinner } from "./Spinner.js";
const LoadingFallback = () => (_jsx("main", { className: "col-span-full row-span-full grid place-items-center", children: _jsx(Spinner, {}) }));
export const Layout = ({ children }) => {
    const { authentication } = useZudoku();
    useScrollToAnchor();
    useScrollToTop();
    useEffect(() => {
        // Initialize the authentication plugin
        authentication?.onPageLoad?.();
    }, [authentication]);
    return (_jsxs(_Fragment, { children: [_jsx(Slot.Target, { name: "layout-before-head" }), _jsx(Header, {}), _jsx(Slot.Target, { name: "layout-after-head" }), _jsx("div", { className: cn("grid max-w-screen-2xl w-full lg:mx-auto", "[&:has(>:only-child)]:grid-rows-1 grid-rows-[0_min-content_1fr] lg:grid-rows-[min-content_1fr]", "grid-cols-1 lg:grid-cols-[var(--side-nav-width)_1fr]"), children: _jsx(Suspense, { fallback: _jsx(LoadingFallback, {}), children: _jsx(Main, { children: children ?? _jsx(Outlet, {}) }) }) }), _jsx(Footer, {})] }));
};
//# sourceMappingURL=Layout.js.map