import { jsx as _jsx } from "react/jsx-runtime";
import { memo, useMemo } from "react";
import ReactMarkdown from "react-markdown";
import rehypeRaw from "rehype-raw";
import remarkGfm from "remark-gfm";
import { createConfiguredShikiRehypePlugins } from "../shiki.js";
import { MdxComponents } from "../util/MdxComponents.js";
import { useZudoku } from "./context/ZudokuContext.js";
import { Typography } from "./Typography.js";
const remarkPlugins = [remarkGfm];
export const Markdown = memo(({ content, className, components, }) => {
    const { syntaxHighlighting } = useZudoku().options;
    const rehypePlugins = useMemo(() => [
        rehypeRaw,
        ...createConfiguredShikiRehypePlugins(syntaxHighlighting?.themes, syntaxHighlighting?.highlighter),
    ], [syntaxHighlighting?.themes, syntaxHighlighting?.highlighter]);
    const mdComponents = useMemo(() => ({ ...MdxComponents, ...components }), [components]);
    return (_jsx(Typography, { className: className, children: _jsx(ReactMarkdown, { remarkPlugins: remarkPlugins, rehypePlugins: rehypePlugins, components: mdComponents, children: content }) }));
});
Markdown.displayName = "Markdown";
//# sourceMappingURL=Markdown.js.map