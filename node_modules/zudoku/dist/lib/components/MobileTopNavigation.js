import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { VisuallyHidden } from "@radix-ui/react-visually-hidden";
import { MenuIcon } from "lucide-react";
import { useState } from "react";
import { Skeleton } from "zudoku/ui/Skeleton.js";
import { useAuth } from "../authentication/hook.js";
import { Drawer, DrawerContent, DrawerTitle, DrawerTrigger, } from "../ui/Drawer.js";
import { ClientOnly } from "./ClientOnly.js";
import { useZudoku } from "./context/ZudokuContext.js";
import { PoweredByZudoku } from "./navigation/PoweredByZudoku.js";
import { shouldShowItem } from "./navigation/utils.js";
import { PageProgress } from "./PageProgress.js";
import { Search } from "./Search.js";
import { Slot } from "./Slot.js";
import { ThemeSwitch } from "./ThemeSwitch.js";
import { TopNavItem, TopNavLink } from "./TopNavigation.js";
export const MobileTopNavigation = () => {
    const context = useZudoku();
    const authState = useAuth();
    const { navigation, options, getProfileMenuItems } = context;
    const { isAuthenticated, profile, isAuthEnabled } = authState;
    const [drawerOpen, setDrawerOpen] = useState(false);
    const accountItems = getProfileMenuItems();
    const filteredItems = navigation.filter(shouldShowItem(authState, context));
    return (_jsxs(Drawer, { direction: options.site?.dir === "rtl" ? "left" : "right", open: drawerOpen, onOpenChange: (open) => setDrawerOpen(open), children: [_jsxs("div", { className: "flex lg:hidden justify-self-end", children: [_jsx(DrawerTrigger, { className: "lg:hidden", children: _jsx(MenuIcon, { size: 22 }) }), _jsx(PageProgress, {})] }), _jsx(DrawerContent, { className: "lg:hidden h-[100dvh] end-0 start-auto w-[320px] rounded-none", "aria-describedby": undefined, children: _jsxs("div", { className: "p-4 overflow-y-auto overscroll-none h-full flex flex-col justify-between", children: [_jsxs("div", { children: [_jsx(VisuallyHidden, { children: _jsx(DrawerTitle, { children: "Navigation" }) }), _jsx(Search, { className: "flex p-4" }), _jsxs("ul", { className: "flex flex-col items-center gap-4 p-4", children: [_jsx("li", { className: "empty:hidden", children: _jsx(Slot.Target, { name: "top-navigation-side" }) }), isAuthEnabled && (_jsx(ClientOnly, { fallback: _jsx(Skeleton, { className: "rounded-sm h-5 w-24 mr-4" }), children: !isAuthenticated ? (_jsx("li", { children: _jsx(TopNavLink, { to: "/signin", onClick: () => setDrawerOpen(false), children: "Login" }) })) : (Object.values(getProfileMenuItems()).length > 0 && (_jsxs("li", { children: [profile?.name ? `${profile.name}` : "My Account", profile?.email && (_jsx("div", { className: "font-normal text-muted-foreground", children: profile.email }))] }))) })), filteredItems.map((item) => (_jsx("li", { children: _jsx("button", { type: "button", onClick: () => setDrawerOpen(false), children: _jsx(TopNavItem, { ...item }) }) }, item.label))), isAuthEnabled && isAuthenticated && accountItems.length > 0 && (_jsx(ClientOnly, { fallback: _jsx(Skeleton, { className: "rounded-sm h-5 w-24 mr-4" }), children: accountItems.map((i) => (_jsx("li", { children: _jsx(TopNavLink, { to: i.path ?? "", onClick: () => setDrawerOpen(false), children: i.label }) }, i.label))) })), _jsx("li", { children: _jsx(ThemeSwitch, {}) })] })] }), options.site?.showPoweredBy !== false && (_jsx(PoweredByZudoku, { className: "grow-0 justify-center gap-1" }))] }) })] }));
};
//# sourceMappingURL=MobileTopNavigation.js.map