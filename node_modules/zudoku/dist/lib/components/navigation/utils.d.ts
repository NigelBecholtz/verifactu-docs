import type { NavigationCategory, NavigationItem } from "../../../config/validators/NavigationSchema.js";
import type { UseAuthReturn } from "../../authentication/hook.js";
import type { ZudokuContext } from "../../core/ZudokuContext.js";
export type TraverseCallback<T> = (item: NavigationItem, parentCategories: NavigationItem[]) => T | void;
export declare const traverseNavigation: <T>(navigation: NavigationItem[], callback: TraverseCallback<T>) => T | undefined;
export declare const traverseNavigationItem: <T>(item: NavigationItem, callback: TraverseCallback<T>, parentCategories?: NavigationItem[]) => T | undefined;
export declare const useCurrentItem: () => import("../../../config/validators/NavigationSchema.js").NavigationDoc | undefined;
export declare const useIsCategoryOpen: (category: NavigationCategory) => true | undefined;
export declare const usePrevNext: () => {
    prev?: {
        label?: string;
        id: string;
    };
    next?: {
        label?: string;
        id: string;
    };
};
export declare const navigationListItem: (props?: ({
    isActive?: boolean | null | undefined;
    isMuted?: boolean | null | undefined;
    isPending?: boolean | null | undefined;
} & import("class-variance-authority/types").ClassProp) | undefined) => string;
export declare const shouldShowItem: (auth: UseAuthReturn, context: ZudokuContext) => (item: NavigationItem) => boolean;
