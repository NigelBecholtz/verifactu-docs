import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { VisuallyHidden } from "@radix-ui/react-visually-hidden";
import { DrawerContent, DrawerTitle } from "../../ui/Drawer.js";
import { Slot } from "../Slot.js";
import { NavigationItem } from "./NavigationItem.js";
import { NavigationWrapper } from "./NavigationWrapper.js";
export const Navigation = ({ onRequestClose, navigation, }) => (_jsxs(_Fragment, { children: [_jsxs(NavigationWrapper, { children: [_jsx(Slot.Target, { name: "navigation-before" }), navigation.map((item) => (_jsx(NavigationItem, { item: item }, item.type +
                    (item.label ?? "") +
                    ("path" in item ? item.path : "") +
                    ("file" in item ? item.file : "") +
                    ("to" in item ? item.to : "")))), _jsx(Slot.Target, { name: "navigation-after" })] }), _jsx(DrawerContent, { className: "lg:hidden h-[100dvh] start-0 w-[320px] rounded-none", "aria-describedby": undefined, children: _jsxs("div", { className: "p-4 overflow-y-auto overscroll-none", children: [_jsx(VisuallyHidden, { children: _jsx(DrawerTitle, { children: "Navigation" }) }), navigation.map((item) => (_jsx(NavigationItem, { item: item, onRequestClose: onRequestClose }, item.label)))] }) })] }));
//# sourceMappingURL=Navigation.js.map