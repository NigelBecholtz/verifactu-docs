import { useId, useLayoutEffect } from "react";
import { useRenderSlot, useSlotContext, } from "./context/SlotProvider.js";
export const Slot = {
    Source: ({ name, children, type = "replace", }) => {
        const id = useId();
        const setSlot = useSlotContext((s) => s.setSlot);
        const clearSlot = useSlotContext((s) => s.clearSlot);
        if (import.meta.env.SSR) {
            setSlot(id, name, children, type);
        }
        useLayoutEffect(() => {
            setSlot(id, name, children, type);
            return () => clearSlot(id, name);
        }, [id, name, children, type, setSlot, clearSlot]);
        return null;
    },
    Target: ({ name, fallback }) => {
        const slot = useRenderSlot(name);
        if (slot.length === 0)
            return fallback;
        return slot;
    },
};
//# sourceMappingURL=Slot.js.map