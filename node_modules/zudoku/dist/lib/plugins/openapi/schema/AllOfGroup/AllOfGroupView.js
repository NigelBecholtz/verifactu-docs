import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import * as Collapsible from "@radix-ui/react-collapsible";
import { SquareMinusIcon, SquarePlusIcon } from "lucide-react";
import { useCallback, useState } from "react";
import { Card } from "../../../../ui/Card.js";
import { AllOfGroupItem } from "./AllOfGroupItem.js";
export const AllOfGroupView = ({ schema, cardHeader, }) => {
    const [isOpen, setIsOpen] = useState(true);
    const toggleOpen = useCallback(() => setIsOpen((prev) => !prev), []);
    if (!schema.allOf)
        return null;
    return (_jsx(Collapsible.Root, { open: isOpen, onOpenChange: toggleOpen, asChild: true, children: _jsxs(Card, { className: "overflow-hidden", children: [cardHeader, _jsxs(Collapsible.Trigger, { className: "flex gap-2 items-center py-2 px-6 w-full text-sm text-muted-foreground -translate-x-1.5", children: [isOpen ? (_jsx(SquareMinusIcon, { size: 14 })) : (_jsx(SquarePlusIcon, { size: 14 })), _jsx("span", { children: "All of" })] }), _jsx(Collapsible.Content, { className: "pb-4 px-6", children: schema.allOf.map((subSchema, index) => (
                    // biome-ignore lint/suspicious/noArrayIndexKey: Index needed for key
                    _jsx(AllOfGroupItem, { schema: subSchema }, index))) })] }) }));
};
//# sourceMappingURL=AllOfGroupView.js.map