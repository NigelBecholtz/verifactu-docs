import type { SchemaObject } from "../../../oas/parser/index.js";
export type FieldSignature = {
    type?: SchemaObject["type"];
    const?: unknown;
    enum?: unknown[];
    format?: string;
    pattern?: string;
    minimum?: number;
    maximum?: number;
    exclusiveMinimum?: boolean | number;
    exclusiveMaximum?: boolean | number;
    minLength?: number;
    maxLength?: number;
    minItems?: number;
    maxItems?: number;
    itemsType?: string | string[];
    additionalProps?: "true" | "false" | "schema";
};
export type FieldDoc = {
    name: string;
    humanType: string;
    description?: string;
    requiredInAll: boolean;
};
export declare const unionVariants: (schema: SchemaObject) => SchemaObject[];
export declare const decideExclusivity: (schema: SchemaObject) => "exactly-one" | "at-least-one";
export declare const labelForVariant: (index: number, variant: SchemaObject) => string;
export declare const quickGuards: (variant: SchemaObject, root?: SchemaObject) => string[];
