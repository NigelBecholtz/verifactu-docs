import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { SendIcon, UnplugIcon } from "lucide-react";
import { Spinner } from "zudoku/components";
import { Alert, AlertDescription, AlertTitle } from "zudoku/ui/Alert.js";
import { Button } from "../../../../ui/Button.js";
import { cn } from "../../../../util/cn.js";
import ResponseStatusBar from "./ResponseStatusBar.js";
import { ResponseTab } from "./ResponseTab.js";
export const ResultPanel = ({ queryMutation, showLongRunningWarning, onCancel, tip, isFinished, progress, }) => {
    return (_jsxs("div", { className: "overflow-y-auto h-[80vh] bg-muted/50", children: [(queryMutation.isPending || queryMutation.data) && (_jsx(ResponseStatusBar, { status: queryMutation.data?.status, time: queryMutation.data?.time, size: queryMutation.data?.size, isFinished: isFinished, progress: progress })), queryMutation.error ? (_jsx("div", { className: "max-w-2/3 mx-auto mt-20", children: _jsxs(Alert, { children: [_jsx(UnplugIcon, { size: 24, strokeWidth: 1.5, className: "me-5" }), _jsx(AlertTitle, { children: "Request failed" }), _jsx(AlertDescription, { children: queryMutation.error.message ||
                                String(queryMutation.error) ||
                                "Unexpected error" })] }) })) : queryMutation.data ? (_jsx(ResponseTab, { request: queryMutation.data.request, size: queryMutation.data.size, headers: queryMutation.data.headers, body: queryMutation.data.body, isBinary: queryMutation.data.isBinary, fileName: queryMutation.data.fileName, blob: queryMutation.data.blob })) : queryMutation.isPending ? (_jsx("div", { className: "grid place-items-center h-full", children: _jsxs("div", { className: "flex flex-col gap-2 items-center mt-20", children: [_jsx(Spinner, {}), _jsxs("div", { className: cn("opacity-0 pointer-events-none transition-opacity h-20 text-sm text-muted-foreground duration-300 flex flex-col gap-2 items-center", showLongRunningWarning && "opacity-100 pointer-events-auto"), children: ["Looks like the request is taking longer than expected.", _jsx(Button, { type: "button", onClick: onCancel, size: "sm", className: "w-fit", variant: "outline", children: "Cancel" })] })] }) })) : (_jsx("div", { className: "h-full grid place-items-center", children: _jsxs("div", { className: "flex flex-col gap-4 items-center", children: [_jsx(SendIcon, { size: 64, className: "text-muted-foreground", strokeWidth: 1.2 }), _jsx("span", { className: "text-[16px] font-semibold text-muted-foreground", children: "Send your first request" }), tip] }) }))] }));
};
export default ResultPanel;
//# sourceMappingURL=ResultPanel.js.map